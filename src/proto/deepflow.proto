syntax = "proto3";

package deepflow;

message TensorData {
	repeated float data = 1 [packed=true];
}

enum ActionTime {
	EVERY_PASS = 0;	
	END_OF_EPOCH = 1;
	NEVER = 2;
}

enum ActionType {
	VALUES = 0;
	DIFFS = 1;
	VALUES_AND_DIFFS = 2;
}

message TensorParam {
	enum TensorType
	{
		FLOAT = 0;
		DOUBLE = 1;
		HALF = 2;
		INT8 = 3;
		INT32 = 4;
		INT8x4 = 5;
	};
	TensorType type = 1;
	repeated int32 dims = 2;
	string name = 3;
}

message MultiplexerParam {
	int32 num_inputs = 1;
}

message PhaseplexerParam {
	repeated string phase = 1;
}

message RandomSelectorParam {
	float probability = 1;
}

message AccumulatorParam {
	ActionTime reset_time = 1;
}

message PsnrParam {
	ActionTime print_time = 1;
}

message LoggerParam {
	string file_path = 1;
	int32 num_inputs = 2;
	string message = 3;
	ActionTime logging_time = 4;
	ActionType logging_type = 5;
}

message PrintParam {
	int32 num_inputs = 1;
	string message = 2;
	ActionTime print_time = 3;
	ActionType print_type = 4;
}

message SIOOutputParam {
	int32 num_inputs = 1;
	ActionTime print_time = 2;
	string host = 3;
	int32 port = 4;
}

message DotParam {
}

message AddParam {
	float alpha = 1;
	float beta = 2;
}
message DisplayParam {
	int32 delay_msec = 1;
	ActionTime display_time = 2;
	ActionType display_type = 3;
	int32 epoch_frequency = 4;
}

message ImageWriterParam {
	string filename = 1;
}

message LogParam {
	float coef = 1;
}

message SwitchParam {
}

message LossParam {
	enum ReduceOp {
		ADD = 0;
		MUL = 1;
		MIN = 2;
		MAX = 3;
		AMAX = 4;
		AVG = 5;
		NORM1 = 6;
		NORM2 = 7;
	}
	ReduceOp reduce_op = 1;
	bool force_output = 2;
}

message SplitParam {
	int32 num_outputs = 1;
}

message EqualParam {
}

message BiasAddParam {
}

message ExpParam {
}

message PoolingParam {
	int32 window_h = 1;
	int32 window_w = 2;		
	int32 h_pad = 3;
	int32 v_pad = 4;
	int32 h_stride = 5;
	int32 v_stride = 6;
}

message TransposedConv2dParam {	
	int32 pad_h = 1;
	int32 pad_w = 2;
	int32 u = 3;
	int32 v = 4;
	int32 dilation_h = 5;
	int32 dilation_w = 6;
}

message Conv2dParam {
	int32 pad_h = 1;
	int32 pad_w = 2;
	int32 u = 3;
	int32 v = 4;
	int32 dilation_h = 5;
	int32 dilation_w = 6;
	float negative_slope = 7;
}

message DropoutParam {
	float dropout = 1;	
	bool train_only = 2;
}

message MatMulParam {
}

message LeakyReluParam {
	float negative_slope = 1;
	bool randomize = 2;
}

message ReduceAllParam {
	enum ReduceAllOp {
		SUM = 0;
		AVG = 1;
	}
	ReduceAllOp reduce_op = 1;
}

message ReduceParam {
	enum ReduceOp {
		ADD = 0;
		MUL = 1;
		MIN = 2;
		MAX = 3;
		AMAX = 4;
		AVG = 5;
		NORM1 = 6;
		NORM2 = 7;
	}
	enum OutputType {
		VALUES = 0;
		INDICES = 1;
	}
	ReduceOp reduce_op = 1;
	int32 reduce_dim = 2;	
	OutputType output_type = 3;
}

message SnapshotParam {
	int32 snapshot_interval = 1;
	string snapshot_prefix = 2;
	int32 per_image_height = 3;
	int32 per_image_width = 4;	
}

message PlaceHolderParam {
	TensorParam tensor_param = 1;
}

message RestructureParam {
	int32 first_dim = 1;
	int32 second_dim = 2;
}

message VariableParam {	
	InitParam init_param = 1;	
	string solver_name = 2;
	TensorData weights = 3;	
}

message DataGeneratorParam {		
}

message ActivationParam {
	enum Type {
		CUDNN_ACTIVATION_SIGMOID      = 0;
		CUDNN_ACTIVATION_RELU         = 1;
		CUDNN_ACTIVATION_TANH         = 2;
		CUDNN_ACTIVATION_CLIPPED_RELU = 3;
		CUDNN_ACTIVATION_ELU          = 4;
	}
	Type type = 1;
	float coef = 2;
}

message ImageBatchReaderParam {
	string folder_path = 1;	
	TensorParam tensor_param = 2;
	bool randomize = 3;
}

message ImageReaderParam {
	enum Type {
		GRAY_ONLY = 0;
		COLOR_IF_AVAILABLE = 1;
	}
	string file_name = 1;
	Type type = 2;
}

message MnistParam {
	enum ReaderType {
		TRAIN = 0;
		TEST = 1;
	}
	enum OutputType {
		DATA = 0;
		LABELS = 1;
	}
	string folder_path = 1;	
	ReaderType reader_type = 2;
	OutputType output_type = 3;
	int32 batch_size = 4;
}

message CastFloatParam {
}

message BatchNormalizationParam {
	enum Mode {
		CUDNN_BATCHNORM_PER_ACTIVATION = 0;    
		CUDNN_BATCHNORM_SPATIAL        = 1;
	}
	Mode mode = 1;
	bool cache_meanvar = 2;
	TensorData mean = 3;
	TensorData var = 4;
}

message ReplayMemoryParam {
	int32 capacity = 1;
}

message PReluParam {
}

message DPReluParam {
}

message LrnParam {	
	int32 n = 1;
	float alpha = 2;
	float beta = 3;
	float k = 4;
}

message ResizeParam {
	float height_scale = 1;
	float width_scale = 2;
}

message UpsampleParam {
}

message SquareParam {
}

message AbsParam {
}

message SquareErrorParam {
}

message SoftmaxParam {
}

message PatchingParam {
	enum Mode {
		UPSAMPLES = 0;    
		DOWNSAMPLES = 1;
		UPCHANNELS = 2;
		DOWNCHANNELS = 3;
	}	
	Mode mode = 1;	
	int32 num_vertical_patch = 2;
	int32 num_horizontal_patch = 3;
}

message LiftingParam {
	enum Mode {
		UP_REGULAR = 0;    
		DOWN_REGULAR = 1;
		UP_FLIP = 2;
		DOWN_FLIP = 3;
	}
	Mode mode = 1;	
}

message InitFillParam {
	float value = 1;		
}

message InitIndexFillParam {
	float offset = 1;
}

message InitRandomUniformParam {
	float min = 1;
	float max = 2;
}

message InitRandomNormalParam {
	float mean = 1;
	float stddev = 2;
}

message InitTruncatedNormalParam {
	float mean = 1;
	float stddev = 2;
}

message InitStepParam {
	float min = 1;
	float max = 2;	
}

message InitThreeStateParam {
}

message InitParam {
  string name = 1;
  TensorParam tensor_param = 2;
  TensorData init_data = 3;
  InitFillParam fill_param = 4;
  InitIndexFillParam index_fill_param = 5;
  InitRandomUniformParam random_uniform_param = 6;
  InitStepParam step_param = 7;
  InitRandomNormalParam random_normal_param = 8;
  InitThreeStateParam three_state_param = 9;
  InitTruncatedNormalParam truncated_normal_param = 10;
}

message SGDSolverParam {	
	float momentum = 2;	
}

message GainSolverParam {	
	float momentum = 2;	
	float max_gain = 3;
	float min_gain = 4;
	float gain_plus = 5;
	float gain_mult = 6;
}

message AdaDeltaSolverParam {	
	float momentum = 2;	
	float delta = 3;
}

message AdamSolverParam {	
	float beta1 = 2;
	float beta2 = 3;
	float eps = 4;
}

message RMSPropSolverParam {	
	float rms_decay = 1;
	float eps = 2;	
}

message SolverParam {
	string name = 1;	
	float learning_rate = 2;
	SGDSolverParam sgd_solver = 3;
	GainSolverParam gain_solver = 4;
	AdamSolverParam adam_solver = 5;
	AdaDeltaSolverParam adadelta_solver = 6;
	RMSPropSolverParam rmsprop_solver = 7;

}

message PhaseParam {
	enum PhaseBehaviour {
		TRAIN_AND_INFERENCE = 0;
		TRAIN = 1;
		VALIDATION = 2;
		INFERENCE = 3;
	}
	string phase = 1;	
	PhaseBehaviour behaviour = 2;
}

message BlockParam {
	repeated NodeParam node = 1;
	repeated SolverParam solver = 2;
	repeated PhaseParam phase = 3;
	repeated InitParam initializer = 4;
}

message ConcateParam {
}

message ReshapeParam {
	repeated int32 output_dims = 1;
}

message BatchStdDevParam {
}

message PassThroughParam {
	bool stop_gradients = 1;
}

message GaussianParam {
}

message GaussianKernelParam {
	int32 window_size = 1;
	float sigma = 2;
	int32 num_channels = 3;
}

message NodeParam {
  string name = 1;
  repeated string input = 2;
  repeated string output = 3;  
  repeated string phase = 4;  
  BlockParam block_param = 5;  

  VariableParam variable_param = 100;  
  PlaceHolderParam place_holder_param = 101;  
  PhaseplexerParam phaseplexer_param = 102;    
  AddParam add_param = 103;
  BiasAddParam bias_add_param = 104;
  Conv2dParam conv_2d_param = 105;
  TransposedConv2dParam transposed_conv_2d_param = 106;
  DropoutParam dropout_param = 107;
  LeakyReluParam leaky_relu_param = 108;
  SoftmaxParam softmax_param = 109;  
  SquareParam square_param = 110;
  MatMulParam matmul_param = 111;
  PoolingParam pooling_param = 112;  
  ReduceParam reduce_param = 113;
  EqualParam equal_param = 114;
  PrintParam print_param = 115;
  CastFloatParam cast_float_param = 116;
  AccumulatorParam accumulator_param = 117;
  DisplayParam display_param = 118;
  ActivationParam activation_param = 119;
  PsnrParam psnr_param = 120;
  RandomSelectorParam random_selector_param = 121; 
  LoggerParam logger_param = 122;
  RestructureParam restructure_param = 123;
  ImageReaderParam image_reader_param = 124;
  MultiplexerParam multiplexer_param = 125;  
  BatchNormalizationParam batch_normalization_param = 127;
  MnistParam mnist_param = 128;
  DataGeneratorParam data_generator_param = 129;	
  ImageBatchReaderParam image_batch_reader_param = 130;
  DotParam dot_param = 131;
  ReplayMemoryParam replay_memory_param = 132;  
  SquareErrorParam square_error_param = 134;
  SIOOutputParam sio_output_param = 135;
  LogParam log_param = 136;
  LossParam loss_param = 137;
  ExpParam exp_param = 138;
  LiftingParam lifting_param = 139;  
  PatchingParam patching_param = 140;
  AbsParam abs_param = 141;
  ReduceAllParam reduce_all_param = 142;
  UpsampleParam upsample_param = 143; 
  ImageWriterParam image_writer_param = 144;
  ResizeParam resize_param = 145;
  SplitParam split_param = 146;
  SwitchParam switch_param = 147;
  LrnParam lrn_param = 148;
  PReluParam prelu_param = 149;
  ConcateParam concate_param = 150;
  ReshapeParam reshape_param = 151;
  DPReluParam dprelu_param = 152;
  BatchStdDevParam batch_stddev_param = 153;
  PassThroughParam pass_through_param = 154;
  GaussianParam gaussian_param = 155;
  GaussianKernelParam gaussian_kernel_param = 156;  
}

