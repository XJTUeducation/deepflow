// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deepflow.proto

#ifndef PROTOBUF_deepflow_2eproto__INCLUDED
#define PROTOBUF_deepflow_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class AccumulatorParam;
class AccumulatorParamDefaultTypeInternal;
extern AccumulatorParamDefaultTypeInternal _AccumulatorParam_default_instance_;
class ActivationParam;
class ActivationParamDefaultTypeInternal;
extern ActivationParamDefaultTypeInternal _ActivationParam_default_instance_;
class AdaDeltaSolverParam;
class AdaDeltaSolverParamDefaultTypeInternal;
extern AdaDeltaSolverParamDefaultTypeInternal _AdaDeltaSolverParam_default_instance_;
class AdamSolverParam;
class AdamSolverParamDefaultTypeInternal;
extern AdamSolverParamDefaultTypeInternal _AdamSolverParam_default_instance_;
class AddParam;
class AddParamDefaultTypeInternal;
extern AddParamDefaultTypeInternal _AddParam_default_instance_;
class BiasAddParam;
class BiasAddParamDefaultTypeInternal;
extern BiasAddParamDefaultTypeInternal _BiasAddParam_default_instance_;
class CastFloatParam;
class CastFloatParamDefaultTypeInternal;
extern CastFloatParamDefaultTypeInternal _CastFloatParam_default_instance_;
class Conv2dParam;
class Conv2dParamDefaultTypeInternal;
extern Conv2dParamDefaultTypeInternal _Conv2dParam_default_instance_;
class DataGeneratorParam;
class DataGeneratorParamDefaultTypeInternal;
extern DataGeneratorParamDefaultTypeInternal _DataGeneratorParam_default_instance_;
class DisplayParam;
class DisplayParamDefaultTypeInternal;
extern DisplayParamDefaultTypeInternal _DisplayParam_default_instance_;
class DropoutParam;
class DropoutParamDefaultTypeInternal;
extern DropoutParamDefaultTypeInternal _DropoutParam_default_instance_;
class EqualParam;
class EqualParamDefaultTypeInternal;
extern EqualParamDefaultTypeInternal _EqualParam_default_instance_;
class EuclideanLossParam;
class EuclideanLossParamDefaultTypeInternal;
extern EuclideanLossParamDefaultTypeInternal _EuclideanLossParam_default_instance_;
class GainSolverParam;
class GainSolverParamDefaultTypeInternal;
extern GainSolverParamDefaultTypeInternal _GainSolverParam_default_instance_;
class GeneratorParam;
class GeneratorParamDefaultTypeInternal;
extern GeneratorParamDefaultTypeInternal _GeneratorParam_default_instance_;
class GraphParam;
class GraphParamDefaultTypeInternal;
extern GraphParamDefaultTypeInternal _GraphParam_default_instance_;
class ImageReaderParam;
class ImageReaderParamDefaultTypeInternal;
extern ImageReaderParamDefaultTypeInternal _ImageReaderParam_default_instance_;
class InitFillParam;
class InitFillParamDefaultTypeInternal;
extern InitFillParamDefaultTypeInternal _InitFillParam_default_instance_;
class InitIndexFillParam;
class InitIndexFillParamDefaultTypeInternal;
extern InitIndexFillParamDefaultTypeInternal _InitIndexFillParam_default_instance_;
class InitParam;
class InitParamDefaultTypeInternal;
extern InitParamDefaultTypeInternal _InitParam_default_instance_;
class InitRandomUniformParam;
class InitRandomUniformParamDefaultTypeInternal;
extern InitRandomUniformParamDefaultTypeInternal _InitRandomUniformParam_default_instance_;
class InitStepParam;
class InitStepParamDefaultTypeInternal;
extern InitStepParamDefaultTypeInternal _InitStepParam_default_instance_;
class LeakyReluParam;
class LeakyReluParamDefaultTypeInternal;
extern LeakyReluParamDefaultTypeInternal _LeakyReluParam_default_instance_;
class LossParam;
class LossParamDefaultTypeInternal;
extern LossParamDefaultTypeInternal _LossParam_default_instance_;
class MatMulParam;
class MatMulParamDefaultTypeInternal;
extern MatMulParamDefaultTypeInternal _MatMulParam_default_instance_;
class MnistParam;
class MnistParamDefaultTypeInternal;
extern MnistParamDefaultTypeInternal _MnistParam_default_instance_;
class NodeParam;
class NodeParamDefaultTypeInternal;
extern NodeParamDefaultTypeInternal _NodeParam_default_instance_;
class PhaseParam;
class PhaseParamDefaultTypeInternal;
extern PhaseParamDefaultTypeInternal _PhaseParam_default_instance_;
class PhaseplexerParam;
class PhaseplexerParamDefaultTypeInternal;
extern PhaseplexerParamDefaultTypeInternal _PhaseplexerParam_default_instance_;
class PlaceHolderParam;
class PlaceHolderParamDefaultTypeInternal;
extern PlaceHolderParamDefaultTypeInternal _PlaceHolderParam_default_instance_;
class PoolingParam;
class PoolingParamDefaultTypeInternal;
extern PoolingParamDefaultTypeInternal _PoolingParam_default_instance_;
class PrintParam;
class PrintParamDefaultTypeInternal;
extern PrintParamDefaultTypeInternal _PrintParam_default_instance_;
class ReduceParam;
class ReduceParamDefaultTypeInternal;
extern ReduceParamDefaultTypeInternal _ReduceParam_default_instance_;
class SGDSolverParam;
class SGDSolverParamDefaultTypeInternal;
extern SGDSolverParamDefaultTypeInternal _SGDSolverParam_default_instance_;
class SnapshotParam;
class SnapshotParamDefaultTypeInternal;
extern SnapshotParamDefaultTypeInternal _SnapshotParam_default_instance_;
class SoftmaxLossParam;
class SoftmaxLossParamDefaultTypeInternal;
extern SoftmaxLossParamDefaultTypeInternal _SoftmaxLossParam_default_instance_;
class SoftmaxParam;
class SoftmaxParamDefaultTypeInternal;
extern SoftmaxParamDefaultTypeInternal _SoftmaxParam_default_instance_;
class SolverParam;
class SolverParamDefaultTypeInternal;
extern SolverParamDefaultTypeInternal _SolverParam_default_instance_;
class SquareParam;
class SquareParamDefaultTypeInternal;
extern SquareParamDefaultTypeInternal _SquareParam_default_instance_;
class TensorData;
class TensorDataDefaultTypeInternal;
extern TensorDataDefaultTypeInternal _TensorData_default_instance_;
class TensorParam;
class TensorParamDefaultTypeInternal;
extern TensorParamDefaultTypeInternal _TensorParam_default_instance_;
class TransposedConv2dParam;
class TransposedConv2dParamDefaultTypeInternal;
extern TransposedConv2dParamDefaultTypeInternal _TransposedConv2dParam_default_instance_;
class VariableParam;
class VariableParamDefaultTypeInternal;
extern VariableParamDefaultTypeInternal _VariableParam_default_instance_;

namespace protobuf_deepflow_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_deepflow_2eproto

enum TensorParam_TensorType {
  TensorParam_TensorType_FLOAT = 0,
  TensorParam_TensorType_DOUBLE = 1,
  TensorParam_TensorType_HALF = 2,
  TensorParam_TensorType_INT8 = 3,
  TensorParam_TensorType_INT32 = 4,
  TensorParam_TensorType_INT8x4 = 5,
  TensorParam_TensorType_TensorParam_TensorType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TensorParam_TensorType_TensorParam_TensorType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TensorParam_TensorType_IsValid(int value);
const TensorParam_TensorType TensorParam_TensorType_TensorType_MIN = TensorParam_TensorType_FLOAT;
const TensorParam_TensorType TensorParam_TensorType_TensorType_MAX = TensorParam_TensorType_INT8x4;
const int TensorParam_TensorType_TensorType_ARRAYSIZE = TensorParam_TensorType_TensorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TensorParam_TensorType_descriptor();
inline const ::std::string& TensorParam_TensorType_Name(TensorParam_TensorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TensorParam_TensorType_descriptor(), value);
}
inline bool TensorParam_TensorType_Parse(
    const ::std::string& name, TensorParam_TensorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TensorParam_TensorType>(
    TensorParam_TensorType_descriptor(), name, value);
}
enum AccumulatorParam_ResetTime {
  AccumulatorParam_ResetTime_END_OF_EPOCH = 0,
  AccumulatorParam_ResetTime_NEVER = 1,
  AccumulatorParam_ResetTime_AccumulatorParam_ResetTime_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccumulatorParam_ResetTime_AccumulatorParam_ResetTime_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccumulatorParam_ResetTime_IsValid(int value);
const AccumulatorParam_ResetTime AccumulatorParam_ResetTime_ResetTime_MIN = AccumulatorParam_ResetTime_END_OF_EPOCH;
const AccumulatorParam_ResetTime AccumulatorParam_ResetTime_ResetTime_MAX = AccumulatorParam_ResetTime_NEVER;
const int AccumulatorParam_ResetTime_ResetTime_ARRAYSIZE = AccumulatorParam_ResetTime_ResetTime_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccumulatorParam_ResetTime_descriptor();
inline const ::std::string& AccumulatorParam_ResetTime_Name(AccumulatorParam_ResetTime value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccumulatorParam_ResetTime_descriptor(), value);
}
inline bool AccumulatorParam_ResetTime_Parse(
    const ::std::string& name, AccumulatorParam_ResetTime* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccumulatorParam_ResetTime>(
    AccumulatorParam_ResetTime_descriptor(), name, value);
}
enum PrintParam_PrintTime {
  PrintParam_PrintTime_EVERY_PASS = 0,
  PrintParam_PrintTime_END_OF_EPOCH = 1,
  PrintParam_PrintTime_PrintParam_PrintTime_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PrintParam_PrintTime_PrintParam_PrintTime_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PrintParam_PrintTime_IsValid(int value);
const PrintParam_PrintTime PrintParam_PrintTime_PrintTime_MIN = PrintParam_PrintTime_EVERY_PASS;
const PrintParam_PrintTime PrintParam_PrintTime_PrintTime_MAX = PrintParam_PrintTime_END_OF_EPOCH;
const int PrintParam_PrintTime_PrintTime_ARRAYSIZE = PrintParam_PrintTime_PrintTime_MAX + 1;

const ::google::protobuf::EnumDescriptor* PrintParam_PrintTime_descriptor();
inline const ::std::string& PrintParam_PrintTime_Name(PrintParam_PrintTime value) {
  return ::google::protobuf::internal::NameOfEnum(
    PrintParam_PrintTime_descriptor(), value);
}
inline bool PrintParam_PrintTime_Parse(
    const ::std::string& name, PrintParam_PrintTime* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrintParam_PrintTime>(
    PrintParam_PrintTime_descriptor(), name, value);
}
enum PrintParam_PrintType {
  PrintParam_PrintType_VALUES = 0,
  PrintParam_PrintType_DIFFS = 1,
  PrintParam_PrintType_PrintParam_PrintType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PrintParam_PrintType_PrintParam_PrintType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PrintParam_PrintType_IsValid(int value);
const PrintParam_PrintType PrintParam_PrintType_PrintType_MIN = PrintParam_PrintType_VALUES;
const PrintParam_PrintType PrintParam_PrintType_PrintType_MAX = PrintParam_PrintType_DIFFS;
const int PrintParam_PrintType_PrintType_ARRAYSIZE = PrintParam_PrintType_PrintType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PrintParam_PrintType_descriptor();
inline const ::std::string& PrintParam_PrintType_Name(PrintParam_PrintType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PrintParam_PrintType_descriptor(), value);
}
inline bool PrintParam_PrintType_Parse(
    const ::std::string& name, PrintParam_PrintType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrintParam_PrintType>(
    PrintParam_PrintType_descriptor(), name, value);
}
enum ReduceParam_ReduceOp {
  ReduceParam_ReduceOp_ADD = 0,
  ReduceParam_ReduceOp_MUL = 1,
  ReduceParam_ReduceOp_MIN = 2,
  ReduceParam_ReduceOp_MAX = 3,
  ReduceParam_ReduceOp_AMAX = 4,
  ReduceParam_ReduceOp_AVG = 5,
  ReduceParam_ReduceOp_NORM1 = 6,
  ReduceParam_ReduceOp_NORM2 = 7,
  ReduceParam_ReduceOp_ReduceParam_ReduceOp_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReduceParam_ReduceOp_ReduceParam_ReduceOp_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReduceParam_ReduceOp_IsValid(int value);
const ReduceParam_ReduceOp ReduceParam_ReduceOp_ReduceOp_MIN = ReduceParam_ReduceOp_ADD;
const ReduceParam_ReduceOp ReduceParam_ReduceOp_ReduceOp_MAX = ReduceParam_ReduceOp_NORM2;
const int ReduceParam_ReduceOp_ReduceOp_ARRAYSIZE = ReduceParam_ReduceOp_ReduceOp_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReduceParam_ReduceOp_descriptor();
inline const ::std::string& ReduceParam_ReduceOp_Name(ReduceParam_ReduceOp value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReduceParam_ReduceOp_descriptor(), value);
}
inline bool ReduceParam_ReduceOp_Parse(
    const ::std::string& name, ReduceParam_ReduceOp* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReduceParam_ReduceOp>(
    ReduceParam_ReduceOp_descriptor(), name, value);
}
enum ActivationParam_Type {
  ActivationParam_Type_CUDNN_ACTIVATION_SIGMOID = 0,
  ActivationParam_Type_CUDNN_ACTIVATION_RELU = 1,
  ActivationParam_Type_CUDNN_ACTIVATION_TANH = 2,
  ActivationParam_Type_CUDNN_ACTIVATION_CLIPPED_RELU = 3,
  ActivationParam_Type_CUDNN_ACTIVATION_ELU = 4,
  ActivationParam_Type_ActivationParam_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActivationParam_Type_ActivationParam_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActivationParam_Type_IsValid(int value);
const ActivationParam_Type ActivationParam_Type_Type_MIN = ActivationParam_Type_CUDNN_ACTIVATION_SIGMOID;
const ActivationParam_Type ActivationParam_Type_Type_MAX = ActivationParam_Type_CUDNN_ACTIVATION_ELU;
const int ActivationParam_Type_Type_ARRAYSIZE = ActivationParam_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActivationParam_Type_descriptor();
inline const ::std::string& ActivationParam_Type_Name(ActivationParam_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActivationParam_Type_descriptor(), value);
}
inline bool ActivationParam_Type_Parse(
    const ::std::string& name, ActivationParam_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActivationParam_Type>(
    ActivationParam_Type_descriptor(), name, value);
}
enum ImageReaderParam_Type {
  ImageReaderParam_Type_GRAY_ONLY = 0,
  ImageReaderParam_Type_COLOR_IF_AVAILABLE = 1,
  ImageReaderParam_Type_ImageReaderParam_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ImageReaderParam_Type_ImageReaderParam_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ImageReaderParam_Type_IsValid(int value);
const ImageReaderParam_Type ImageReaderParam_Type_Type_MIN = ImageReaderParam_Type_GRAY_ONLY;
const ImageReaderParam_Type ImageReaderParam_Type_Type_MAX = ImageReaderParam_Type_COLOR_IF_AVAILABLE;
const int ImageReaderParam_Type_Type_ARRAYSIZE = ImageReaderParam_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* ImageReaderParam_Type_descriptor();
inline const ::std::string& ImageReaderParam_Type_Name(ImageReaderParam_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    ImageReaderParam_Type_descriptor(), value);
}
inline bool ImageReaderParam_Type_Parse(
    const ::std::string& name, ImageReaderParam_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ImageReaderParam_Type>(
    ImageReaderParam_Type_descriptor(), name, value);
}
enum MnistParam_ReaderType {
  MnistParam_ReaderType_TRAIN = 0,
  MnistParam_ReaderType_TEST = 1,
  MnistParam_ReaderType_MnistParam_ReaderType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MnistParam_ReaderType_MnistParam_ReaderType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MnistParam_ReaderType_IsValid(int value);
const MnistParam_ReaderType MnistParam_ReaderType_ReaderType_MIN = MnistParam_ReaderType_TRAIN;
const MnistParam_ReaderType MnistParam_ReaderType_ReaderType_MAX = MnistParam_ReaderType_TEST;
const int MnistParam_ReaderType_ReaderType_ARRAYSIZE = MnistParam_ReaderType_ReaderType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MnistParam_ReaderType_descriptor();
inline const ::std::string& MnistParam_ReaderType_Name(MnistParam_ReaderType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MnistParam_ReaderType_descriptor(), value);
}
inline bool MnistParam_ReaderType_Parse(
    const ::std::string& name, MnistParam_ReaderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MnistParam_ReaderType>(
    MnistParam_ReaderType_descriptor(), name, value);
}
enum PhaseParam_PhaseBehaviour {
  PhaseParam_PhaseBehaviour_TRAIN = 0,
  PhaseParam_PhaseBehaviour_VALIDATION = 1,
  PhaseParam_PhaseBehaviour_INFERENCE = 2,
  PhaseParam_PhaseBehaviour_PhaseParam_PhaseBehaviour_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PhaseParam_PhaseBehaviour_PhaseParam_PhaseBehaviour_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PhaseParam_PhaseBehaviour_IsValid(int value);
const PhaseParam_PhaseBehaviour PhaseParam_PhaseBehaviour_PhaseBehaviour_MIN = PhaseParam_PhaseBehaviour_TRAIN;
const PhaseParam_PhaseBehaviour PhaseParam_PhaseBehaviour_PhaseBehaviour_MAX = PhaseParam_PhaseBehaviour_INFERENCE;
const int PhaseParam_PhaseBehaviour_PhaseBehaviour_ARRAYSIZE = PhaseParam_PhaseBehaviour_PhaseBehaviour_MAX + 1;

const ::google::protobuf::EnumDescriptor* PhaseParam_PhaseBehaviour_descriptor();
inline const ::std::string& PhaseParam_PhaseBehaviour_Name(PhaseParam_PhaseBehaviour value) {
  return ::google::protobuf::internal::NameOfEnum(
    PhaseParam_PhaseBehaviour_descriptor(), value);
}
inline bool PhaseParam_PhaseBehaviour_Parse(
    const ::std::string& name, PhaseParam_PhaseBehaviour* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PhaseParam_PhaseBehaviour>(
    PhaseParam_PhaseBehaviour_descriptor(), name, value);
}
// ===================================================================

class TensorData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TensorData) */ {
 public:
  TensorData();
  virtual ~TensorData();

  TensorData(const TensorData& from);

  inline TensorData& operator=(const TensorData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TensorData& default_instance();

  static inline const TensorData* internal_default_instance() {
    return reinterpret_cast<const TensorData*>(
               &_TensorData_default_instance_);
  }

  void Swap(TensorData* other);

  // implements Message ----------------------------------------------

  inline TensorData* New() const PROTOBUF_FINAL { return New(NULL); }

  TensorData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TensorData& from);
  void MergeFrom(const TensorData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TensorData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float weight = 1;
  int weight_size() const;
  void clear_weight();
  static const int kWeightFieldNumber = 1;
  float weight(int index) const;
  void set_weight(int index, float value);
  void add_weight(float value);
  const ::google::protobuf::RepeatedField< float >&
      weight() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_weight();

  // @@protoc_insertion_point(class_scope:TensorData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > weight_;
  mutable int _weight_cached_byte_size_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TensorParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TensorParam) */ {
 public:
  TensorParam();
  virtual ~TensorParam();

  TensorParam(const TensorParam& from);

  inline TensorParam& operator=(const TensorParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TensorParam& default_instance();

  static inline const TensorParam* internal_default_instance() {
    return reinterpret_cast<const TensorParam*>(
               &_TensorParam_default_instance_);
  }

  void Swap(TensorParam* other);

  // implements Message ----------------------------------------------

  inline TensorParam* New() const PROTOBUF_FINAL { return New(NULL); }

  TensorParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TensorParam& from);
  void MergeFrom(const TensorParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TensorParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TensorParam_TensorType TensorType;
  static const TensorType FLOAT =
    TensorParam_TensorType_FLOAT;
  static const TensorType DOUBLE =
    TensorParam_TensorType_DOUBLE;
  static const TensorType HALF =
    TensorParam_TensorType_HALF;
  static const TensorType INT8 =
    TensorParam_TensorType_INT8;
  static const TensorType INT32 =
    TensorParam_TensorType_INT32;
  static const TensorType INT8x4 =
    TensorParam_TensorType_INT8x4;
  static inline bool TensorType_IsValid(int value) {
    return TensorParam_TensorType_IsValid(value);
  }
  static const TensorType TensorType_MIN =
    TensorParam_TensorType_TensorType_MIN;
  static const TensorType TensorType_MAX =
    TensorParam_TensorType_TensorType_MAX;
  static const int TensorType_ARRAYSIZE =
    TensorParam_TensorType_TensorType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TensorType_descriptor() {
    return TensorParam_TensorType_descriptor();
  }
  static inline const ::std::string& TensorType_Name(TensorType value) {
    return TensorParam_TensorType_Name(value);
  }
  static inline bool TensorType_Parse(const ::std::string& name,
      TensorType* value) {
    return TensorParam_TensorType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 dims = 2;
  int dims_size() const;
  void clear_dims();
  static const int kDimsFieldNumber = 2;
  ::google::protobuf::int32 dims(int index) const;
  void set_dims(int index, ::google::protobuf::int32 value);
  void add_dims(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dims();

  // .TensorParam.TensorType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::TensorParam_TensorType type() const;
  void set_type(::TensorParam_TensorType value);

  // @@protoc_insertion_point(class_scope:TensorParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dims_;
  mutable int _dims_cached_byte_size_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PhaseplexerParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PhaseplexerParam) */ {
 public:
  PhaseplexerParam();
  virtual ~PhaseplexerParam();

  PhaseplexerParam(const PhaseplexerParam& from);

  inline PhaseplexerParam& operator=(const PhaseplexerParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhaseplexerParam& default_instance();

  static inline const PhaseplexerParam* internal_default_instance() {
    return reinterpret_cast<const PhaseplexerParam*>(
               &_PhaseplexerParam_default_instance_);
  }

  void Swap(PhaseplexerParam* other);

  // implements Message ----------------------------------------------

  inline PhaseplexerParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PhaseplexerParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PhaseplexerParam& from);
  void MergeFrom(const PhaseplexerParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PhaseplexerParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string phase = 1;
  int phase_size() const;
  void clear_phase();
  static const int kPhaseFieldNumber = 1;
  const ::std::string& phase(int index) const;
  ::std::string* mutable_phase(int index);
  void set_phase(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_phase(int index, ::std::string&& value);
  #endif
  void set_phase(int index, const char* value);
  void set_phase(int index, const char* value, size_t size);
  ::std::string* add_phase();
  void add_phase(const ::std::string& value);
  #if LANG_CXX11
  void add_phase(::std::string&& value);
  #endif
  void add_phase(const char* value);
  void add_phase(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& phase() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_phase();

  // @@protoc_insertion_point(class_scope:PhaseplexerParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> phase_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AccumulatorParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AccumulatorParam) */ {
 public:
  AccumulatorParam();
  virtual ~AccumulatorParam();

  AccumulatorParam(const AccumulatorParam& from);

  inline AccumulatorParam& operator=(const AccumulatorParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccumulatorParam& default_instance();

  static inline const AccumulatorParam* internal_default_instance() {
    return reinterpret_cast<const AccumulatorParam*>(
               &_AccumulatorParam_default_instance_);
  }

  void Swap(AccumulatorParam* other);

  // implements Message ----------------------------------------------

  inline AccumulatorParam* New() const PROTOBUF_FINAL { return New(NULL); }

  AccumulatorParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AccumulatorParam& from);
  void MergeFrom(const AccumulatorParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AccumulatorParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AccumulatorParam_ResetTime ResetTime;
  static const ResetTime END_OF_EPOCH =
    AccumulatorParam_ResetTime_END_OF_EPOCH;
  static const ResetTime NEVER =
    AccumulatorParam_ResetTime_NEVER;
  static inline bool ResetTime_IsValid(int value) {
    return AccumulatorParam_ResetTime_IsValid(value);
  }
  static const ResetTime ResetTime_MIN =
    AccumulatorParam_ResetTime_ResetTime_MIN;
  static const ResetTime ResetTime_MAX =
    AccumulatorParam_ResetTime_ResetTime_MAX;
  static const int ResetTime_ARRAYSIZE =
    AccumulatorParam_ResetTime_ResetTime_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResetTime_descriptor() {
    return AccumulatorParam_ResetTime_descriptor();
  }
  static inline const ::std::string& ResetTime_Name(ResetTime value) {
    return AccumulatorParam_ResetTime_Name(value);
  }
  static inline bool ResetTime_Parse(const ::std::string& name,
      ResetTime* value) {
    return AccumulatorParam_ResetTime_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .AccumulatorParam.ResetTime reset_time = 1;
  void clear_reset_time();
  static const int kResetTimeFieldNumber = 1;
  ::AccumulatorParam_ResetTime reset_time() const;
  void set_reset_time(::AccumulatorParam_ResetTime value);

  // @@protoc_insertion_point(class_scope:AccumulatorParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reset_time_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrintParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PrintParam) */ {
 public:
  PrintParam();
  virtual ~PrintParam();

  PrintParam(const PrintParam& from);

  inline PrintParam& operator=(const PrintParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintParam& default_instance();

  static inline const PrintParam* internal_default_instance() {
    return reinterpret_cast<const PrintParam*>(
               &_PrintParam_default_instance_);
  }

  void Swap(PrintParam* other);

  // implements Message ----------------------------------------------

  inline PrintParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PrintParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PrintParam& from);
  void MergeFrom(const PrintParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PrintParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PrintParam_PrintTime PrintTime;
  static const PrintTime EVERY_PASS =
    PrintParam_PrintTime_EVERY_PASS;
  static const PrintTime END_OF_EPOCH =
    PrintParam_PrintTime_END_OF_EPOCH;
  static inline bool PrintTime_IsValid(int value) {
    return PrintParam_PrintTime_IsValid(value);
  }
  static const PrintTime PrintTime_MIN =
    PrintParam_PrintTime_PrintTime_MIN;
  static const PrintTime PrintTime_MAX =
    PrintParam_PrintTime_PrintTime_MAX;
  static const int PrintTime_ARRAYSIZE =
    PrintParam_PrintTime_PrintTime_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PrintTime_descriptor() {
    return PrintParam_PrintTime_descriptor();
  }
  static inline const ::std::string& PrintTime_Name(PrintTime value) {
    return PrintParam_PrintTime_Name(value);
  }
  static inline bool PrintTime_Parse(const ::std::string& name,
      PrintTime* value) {
    return PrintParam_PrintTime_Parse(name, value);
  }

  typedef PrintParam_PrintType PrintType;
  static const PrintType VALUES =
    PrintParam_PrintType_VALUES;
  static const PrintType DIFFS =
    PrintParam_PrintType_DIFFS;
  static inline bool PrintType_IsValid(int value) {
    return PrintParam_PrintType_IsValid(value);
  }
  static const PrintType PrintType_MIN =
    PrintParam_PrintType_PrintType_MIN;
  static const PrintType PrintType_MAX =
    PrintParam_PrintType_PrintType_MAX;
  static const int PrintType_ARRAYSIZE =
    PrintParam_PrintType_PrintType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PrintType_descriptor() {
    return PrintParam_PrintType_descriptor();
  }
  static inline const ::std::string& PrintType_Name(PrintType value) {
    return PrintParam_PrintType_Name(value);
  }
  static inline bool PrintType_Parse(const ::std::string& name,
      PrintType* value) {
    return PrintParam_PrintType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 num_inputs = 1;
  void clear_num_inputs();
  static const int kNumInputsFieldNumber = 1;
  ::google::protobuf::int32 num_inputs() const;
  void set_num_inputs(::google::protobuf::int32 value);

  // .PrintParam.PrintTime print_time = 3;
  void clear_print_time();
  static const int kPrintTimeFieldNumber = 3;
  ::PrintParam_PrintTime print_time() const;
  void set_print_time(::PrintParam_PrintTime value);

  // .PrintParam.PrintType print_type = 4;
  void clear_print_type();
  static const int kPrintTypeFieldNumber = 4;
  ::PrintParam_PrintType print_type() const;
  void set_print_type(::PrintParam_PrintType value);

  // @@protoc_insertion_point(class_scope:PrintParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 num_inputs_;
  int print_time_;
  int print_type_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AddParam) */ {
 public:
  AddParam();
  virtual ~AddParam();

  AddParam(const AddParam& from);

  inline AddParam& operator=(const AddParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddParam& default_instance();

  static inline const AddParam* internal_default_instance() {
    return reinterpret_cast<const AddParam*>(
               &_AddParam_default_instance_);
  }

  void Swap(AddParam* other);

  // implements Message ----------------------------------------------

  inline AddParam* New() const PROTOBUF_FINAL { return New(NULL); }

  AddParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddParam& from);
  void MergeFrom(const AddParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float alpha = 1;
  void clear_alpha();
  static const int kAlphaFieldNumber = 1;
  float alpha() const;
  void set_alpha(float value);

  // float beta = 2;
  void clear_beta();
  static const int kBetaFieldNumber = 2;
  float beta() const;
  void set_beta(float value);

  // @@protoc_insertion_point(class_scope:AddParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float alpha_;
  float beta_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DisplayParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DisplayParam) */ {
 public:
  DisplayParam();
  virtual ~DisplayParam();

  DisplayParam(const DisplayParam& from);

  inline DisplayParam& operator=(const DisplayParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DisplayParam& default_instance();

  static inline const DisplayParam* internal_default_instance() {
    return reinterpret_cast<const DisplayParam*>(
               &_DisplayParam_default_instance_);
  }

  void Swap(DisplayParam* other);

  // implements Message ----------------------------------------------

  inline DisplayParam* New() const PROTOBUF_FINAL { return New(NULL); }

  DisplayParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DisplayParam& from);
  void MergeFrom(const DisplayParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DisplayParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 delay_msec = 1;
  void clear_delay_msec();
  static const int kDelayMsecFieldNumber = 1;
  ::google::protobuf::int32 delay_msec() const;
  void set_delay_msec(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DisplayParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 delay_msec_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EqualParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EqualParam) */ {
 public:
  EqualParam();
  virtual ~EqualParam();

  EqualParam(const EqualParam& from);

  inline EqualParam& operator=(const EqualParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EqualParam& default_instance();

  static inline const EqualParam* internal_default_instance() {
    return reinterpret_cast<const EqualParam*>(
               &_EqualParam_default_instance_);
  }

  void Swap(EqualParam* other);

  // implements Message ----------------------------------------------

  inline EqualParam* New() const PROTOBUF_FINAL { return New(NULL); }

  EqualParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EqualParam& from);
  void MergeFrom(const EqualParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EqualParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EqualParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BiasAddParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BiasAddParam) */ {
 public:
  BiasAddParam();
  virtual ~BiasAddParam();

  BiasAddParam(const BiasAddParam& from);

  inline BiasAddParam& operator=(const BiasAddParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BiasAddParam& default_instance();

  static inline const BiasAddParam* internal_default_instance() {
    return reinterpret_cast<const BiasAddParam*>(
               &_BiasAddParam_default_instance_);
  }

  void Swap(BiasAddParam* other);

  // implements Message ----------------------------------------------

  inline BiasAddParam* New() const PROTOBUF_FINAL { return New(NULL); }

  BiasAddParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BiasAddParam& from);
  void MergeFrom(const BiasAddParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BiasAddParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:BiasAddParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PoolingParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PoolingParam) */ {
 public:
  PoolingParam();
  virtual ~PoolingParam();

  PoolingParam(const PoolingParam& from);

  inline PoolingParam& operator=(const PoolingParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PoolingParam& default_instance();

  static inline const PoolingParam* internal_default_instance() {
    return reinterpret_cast<const PoolingParam*>(
               &_PoolingParam_default_instance_);
  }

  void Swap(PoolingParam* other);

  // implements Message ----------------------------------------------

  inline PoolingParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PoolingParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PoolingParam& from);
  void MergeFrom(const PoolingParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PoolingParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 window_h = 1;
  void clear_window_h();
  static const int kWindowHFieldNumber = 1;
  ::google::protobuf::int32 window_h() const;
  void set_window_h(::google::protobuf::int32 value);

  // int32 window_w = 2;
  void clear_window_w();
  static const int kWindowWFieldNumber = 2;
  ::google::protobuf::int32 window_w() const;
  void set_window_w(::google::protobuf::int32 value);

  // int32 h_pad = 3;
  void clear_h_pad();
  static const int kHPadFieldNumber = 3;
  ::google::protobuf::int32 h_pad() const;
  void set_h_pad(::google::protobuf::int32 value);

  // int32 v_pad = 4;
  void clear_v_pad();
  static const int kVPadFieldNumber = 4;
  ::google::protobuf::int32 v_pad() const;
  void set_v_pad(::google::protobuf::int32 value);

  // int32 h_stride = 5;
  void clear_h_stride();
  static const int kHStrideFieldNumber = 5;
  ::google::protobuf::int32 h_stride() const;
  void set_h_stride(::google::protobuf::int32 value);

  // int32 v_stride = 6;
  void clear_v_stride();
  static const int kVStrideFieldNumber = 6;
  ::google::protobuf::int32 v_stride() const;
  void set_v_stride(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PoolingParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 window_h_;
  ::google::protobuf::int32 window_w_;
  ::google::protobuf::int32 h_pad_;
  ::google::protobuf::int32 v_pad_;
  ::google::protobuf::int32 h_stride_;
  ::google::protobuf::int32 v_stride_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransposedConv2dParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TransposedConv2dParam) */ {
 public:
  TransposedConv2dParam();
  virtual ~TransposedConv2dParam();

  TransposedConv2dParam(const TransposedConv2dParam& from);

  inline TransposedConv2dParam& operator=(const TransposedConv2dParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransposedConv2dParam& default_instance();

  static inline const TransposedConv2dParam* internal_default_instance() {
    return reinterpret_cast<const TransposedConv2dParam*>(
               &_TransposedConv2dParam_default_instance_);
  }

  void Swap(TransposedConv2dParam* other);

  // implements Message ----------------------------------------------

  inline TransposedConv2dParam* New() const PROTOBUF_FINAL { return New(NULL); }

  TransposedConv2dParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransposedConv2dParam& from);
  void MergeFrom(const TransposedConv2dParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransposedConv2dParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TensorParam tensor_param = 1;
  bool has_tensor_param() const;
  void clear_tensor_param();
  static const int kTensorParamFieldNumber = 1;
  const ::TensorParam& tensor_param() const;
  ::TensorParam* mutable_tensor_param();
  ::TensorParam* release_tensor_param();
  void set_allocated_tensor_param(::TensorParam* tensor_param);

  // int32 pad_h = 2;
  void clear_pad_h();
  static const int kPadHFieldNumber = 2;
  ::google::protobuf::int32 pad_h() const;
  void set_pad_h(::google::protobuf::int32 value);

  // int32 pad_w = 3;
  void clear_pad_w();
  static const int kPadWFieldNumber = 3;
  ::google::protobuf::int32 pad_w() const;
  void set_pad_w(::google::protobuf::int32 value);

  // int32 u = 4;
  void clear_u();
  static const int kUFieldNumber = 4;
  ::google::protobuf::int32 u() const;
  void set_u(::google::protobuf::int32 value);

  // int32 v = 5;
  void clear_v();
  static const int kVFieldNumber = 5;
  ::google::protobuf::int32 v() const;
  void set_v(::google::protobuf::int32 value);

  // int32 dilation_h = 6;
  void clear_dilation_h();
  static const int kDilationHFieldNumber = 6;
  ::google::protobuf::int32 dilation_h() const;
  void set_dilation_h(::google::protobuf::int32 value);

  // int32 dilation_w = 7;
  void clear_dilation_w();
  static const int kDilationWFieldNumber = 7;
  ::google::protobuf::int32 dilation_w() const;
  void set_dilation_w(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TransposedConv2dParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TensorParam* tensor_param_;
  ::google::protobuf::int32 pad_h_;
  ::google::protobuf::int32 pad_w_;
  ::google::protobuf::int32 u_;
  ::google::protobuf::int32 v_;
  ::google::protobuf::int32 dilation_h_;
  ::google::protobuf::int32 dilation_w_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Conv2dParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Conv2dParam) */ {
 public:
  Conv2dParam();
  virtual ~Conv2dParam();

  Conv2dParam(const Conv2dParam& from);

  inline Conv2dParam& operator=(const Conv2dParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Conv2dParam& default_instance();

  static inline const Conv2dParam* internal_default_instance() {
    return reinterpret_cast<const Conv2dParam*>(
               &_Conv2dParam_default_instance_);
  }

  void Swap(Conv2dParam* other);

  // implements Message ----------------------------------------------

  inline Conv2dParam* New() const PROTOBUF_FINAL { return New(NULL); }

  Conv2dParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Conv2dParam& from);
  void MergeFrom(const Conv2dParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Conv2dParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 pad_h = 1;
  void clear_pad_h();
  static const int kPadHFieldNumber = 1;
  ::google::protobuf::int32 pad_h() const;
  void set_pad_h(::google::protobuf::int32 value);

  // int32 pad_w = 2;
  void clear_pad_w();
  static const int kPadWFieldNumber = 2;
  ::google::protobuf::int32 pad_w() const;
  void set_pad_w(::google::protobuf::int32 value);

  // int32 u = 3;
  void clear_u();
  static const int kUFieldNumber = 3;
  ::google::protobuf::int32 u() const;
  void set_u(::google::protobuf::int32 value);

  // int32 v = 4;
  void clear_v();
  static const int kVFieldNumber = 4;
  ::google::protobuf::int32 v() const;
  void set_v(::google::protobuf::int32 value);

  // int32 dilation_h = 5;
  void clear_dilation_h();
  static const int kDilationHFieldNumber = 5;
  ::google::protobuf::int32 dilation_h() const;
  void set_dilation_h(::google::protobuf::int32 value);

  // int32 dilation_w = 6;
  void clear_dilation_w();
  static const int kDilationWFieldNumber = 6;
  ::google::protobuf::int32 dilation_w() const;
  void set_dilation_w(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Conv2dParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 pad_h_;
  ::google::protobuf::int32 pad_w_;
  ::google::protobuf::int32 u_;
  ::google::protobuf::int32 v_;
  ::google::protobuf::int32 dilation_h_;
  ::google::protobuf::int32 dilation_w_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropoutParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DropoutParam) */ {
 public:
  DropoutParam();
  virtual ~DropoutParam();

  DropoutParam(const DropoutParam& from);

  inline DropoutParam& operator=(const DropoutParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropoutParam& default_instance();

  static inline const DropoutParam* internal_default_instance() {
    return reinterpret_cast<const DropoutParam*>(
               &_DropoutParam_default_instance_);
  }

  void Swap(DropoutParam* other);

  // implements Message ----------------------------------------------

  inline DropoutParam* New() const PROTOBUF_FINAL { return New(NULL); }

  DropoutParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropoutParam& from);
  void MergeFrom(const DropoutParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropoutParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float dropout = 1;
  void clear_dropout();
  static const int kDropoutFieldNumber = 1;
  float dropout() const;
  void set_dropout(float value);

  // @@protoc_insertion_point(class_scope:DropoutParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float dropout_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatMulParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MatMulParam) */ {
 public:
  MatMulParam();
  virtual ~MatMulParam();

  MatMulParam(const MatMulParam& from);

  inline MatMulParam& operator=(const MatMulParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatMulParam& default_instance();

  static inline const MatMulParam* internal_default_instance() {
    return reinterpret_cast<const MatMulParam*>(
               &_MatMulParam_default_instance_);
  }

  void Swap(MatMulParam* other);

  // implements Message ----------------------------------------------

  inline MatMulParam* New() const PROTOBUF_FINAL { return New(NULL); }

  MatMulParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatMulParam& from);
  void MergeFrom(const MatMulParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatMulParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float alpha = 1;
  void clear_alpha();
  static const int kAlphaFieldNumber = 1;
  float alpha() const;
  void set_alpha(float value);

  // float beta = 2;
  void clear_beta();
  static const int kBetaFieldNumber = 2;
  float beta() const;
  void set_beta(float value);

  // @@protoc_insertion_point(class_scope:MatMulParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float alpha_;
  float beta_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeakyReluParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LeakyReluParam) */ {
 public:
  LeakyReluParam();
  virtual ~LeakyReluParam();

  LeakyReluParam(const LeakyReluParam& from);

  inline LeakyReluParam& operator=(const LeakyReluParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LeakyReluParam& default_instance();

  static inline const LeakyReluParam* internal_default_instance() {
    return reinterpret_cast<const LeakyReluParam*>(
               &_LeakyReluParam_default_instance_);
  }

  void Swap(LeakyReluParam* other);

  // implements Message ----------------------------------------------

  inline LeakyReluParam* New() const PROTOBUF_FINAL { return New(NULL); }

  LeakyReluParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LeakyReluParam& from);
  void MergeFrom(const LeakyReluParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LeakyReluParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float negative_slope = 1;
  void clear_negative_slope();
  static const int kNegativeSlopeFieldNumber = 1;
  float negative_slope() const;
  void set_negative_slope(float value);

  // @@protoc_insertion_point(class_scope:LeakyReluParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float negative_slope_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReduceParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ReduceParam) */ {
 public:
  ReduceParam();
  virtual ~ReduceParam();

  ReduceParam(const ReduceParam& from);

  inline ReduceParam& operator=(const ReduceParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReduceParam& default_instance();

  static inline const ReduceParam* internal_default_instance() {
    return reinterpret_cast<const ReduceParam*>(
               &_ReduceParam_default_instance_);
  }

  void Swap(ReduceParam* other);

  // implements Message ----------------------------------------------

  inline ReduceParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ReduceParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReduceParam& from);
  void MergeFrom(const ReduceParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReduceParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReduceParam_ReduceOp ReduceOp;
  static const ReduceOp ADD =
    ReduceParam_ReduceOp_ADD;
  static const ReduceOp MUL =
    ReduceParam_ReduceOp_MUL;
  static const ReduceOp MIN =
    ReduceParam_ReduceOp_MIN;
  static const ReduceOp MAX =
    ReduceParam_ReduceOp_MAX;
  static const ReduceOp AMAX =
    ReduceParam_ReduceOp_AMAX;
  static const ReduceOp AVG =
    ReduceParam_ReduceOp_AVG;
  static const ReduceOp NORM1 =
    ReduceParam_ReduceOp_NORM1;
  static const ReduceOp NORM2 =
    ReduceParam_ReduceOp_NORM2;
  static inline bool ReduceOp_IsValid(int value) {
    return ReduceParam_ReduceOp_IsValid(value);
  }
  static const ReduceOp ReduceOp_MIN =
    ReduceParam_ReduceOp_ReduceOp_MIN;
  static const ReduceOp ReduceOp_MAX =
    ReduceParam_ReduceOp_ReduceOp_MAX;
  static const int ReduceOp_ARRAYSIZE =
    ReduceParam_ReduceOp_ReduceOp_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReduceOp_descriptor() {
    return ReduceParam_ReduceOp_descriptor();
  }
  static inline const ::std::string& ReduceOp_Name(ReduceOp value) {
    return ReduceParam_ReduceOp_Name(value);
  }
  static inline bool ReduceOp_Parse(const ::std::string& name,
      ReduceOp* value) {
    return ReduceParam_ReduceOp_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ReduceParam.ReduceOp reduce_op = 1;
  void clear_reduce_op();
  static const int kReduceOpFieldNumber = 1;
  ::ReduceParam_ReduceOp reduce_op() const;
  void set_reduce_op(::ReduceParam_ReduceOp value);

  // int32 reduce_dim = 2;
  void clear_reduce_dim();
  static const int kReduceDimFieldNumber = 2;
  ::google::protobuf::int32 reduce_dim() const;
  void set_reduce_dim(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ReduceParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reduce_op_;
  ::google::protobuf::int32 reduce_dim_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnapshotParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SnapshotParam) */ {
 public:
  SnapshotParam();
  virtual ~SnapshotParam();

  SnapshotParam(const SnapshotParam& from);

  inline SnapshotParam& operator=(const SnapshotParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotParam& default_instance();

  static inline const SnapshotParam* internal_default_instance() {
    return reinterpret_cast<const SnapshotParam*>(
               &_SnapshotParam_default_instance_);
  }

  void Swap(SnapshotParam* other);

  // implements Message ----------------------------------------------

  inline SnapshotParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SnapshotParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnapshotParam& from);
  void MergeFrom(const SnapshotParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnapshotParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string snapshot_prefix = 2;
  void clear_snapshot_prefix();
  static const int kSnapshotPrefixFieldNumber = 2;
  const ::std::string& snapshot_prefix() const;
  void set_snapshot_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_snapshot_prefix(::std::string&& value);
  #endif
  void set_snapshot_prefix(const char* value);
  void set_snapshot_prefix(const char* value, size_t size);
  ::std::string* mutable_snapshot_prefix();
  ::std::string* release_snapshot_prefix();
  void set_allocated_snapshot_prefix(::std::string* snapshot_prefix);

  // int32 snapshot_interval = 1;
  void clear_snapshot_interval();
  static const int kSnapshotIntervalFieldNumber = 1;
  ::google::protobuf::int32 snapshot_interval() const;
  void set_snapshot_interval(::google::protobuf::int32 value);

  // int32 per_image_height = 3;
  void clear_per_image_height();
  static const int kPerImageHeightFieldNumber = 3;
  ::google::protobuf::int32 per_image_height() const;
  void set_per_image_height(::google::protobuf::int32 value);

  // int32 per_image_width = 4;
  void clear_per_image_width();
  static const int kPerImageWidthFieldNumber = 4;
  ::google::protobuf::int32 per_image_width() const;
  void set_per_image_width(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SnapshotParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr snapshot_prefix_;
  ::google::protobuf::int32 snapshot_interval_;
  ::google::protobuf::int32 per_image_height_;
  ::google::protobuf::int32 per_image_width_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlaceHolderParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlaceHolderParam) */ {
 public:
  PlaceHolderParam();
  virtual ~PlaceHolderParam();

  PlaceHolderParam(const PlaceHolderParam& from);

  inline PlaceHolderParam& operator=(const PlaceHolderParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceHolderParam& default_instance();

  static inline const PlaceHolderParam* internal_default_instance() {
    return reinterpret_cast<const PlaceHolderParam*>(
               &_PlaceHolderParam_default_instance_);
  }

  void Swap(PlaceHolderParam* other);

  // implements Message ----------------------------------------------

  inline PlaceHolderParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PlaceHolderParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaceHolderParam& from);
  void MergeFrom(const PlaceHolderParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaceHolderParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TensorParam tensor_param = 1;
  bool has_tensor_param() const;
  void clear_tensor_param();
  static const int kTensorParamFieldNumber = 1;
  const ::TensorParam& tensor_param() const;
  ::TensorParam* mutable_tensor_param();
  ::TensorParam* release_tensor_param();
  void set_allocated_tensor_param(::TensorParam* tensor_param);

  // @@protoc_insertion_point(class_scope:PlaceHolderParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TensorParam* tensor_param_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VariableParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VariableParam) */ {
 public:
  VariableParam();
  virtual ~VariableParam();

  VariableParam(const VariableParam& from);

  inline VariableParam& operator=(const VariableParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VariableParam& default_instance();

  static inline const VariableParam* internal_default_instance() {
    return reinterpret_cast<const VariableParam*>(
               &_VariableParam_default_instance_);
  }

  void Swap(VariableParam* other);

  // implements Message ----------------------------------------------

  inline VariableParam* New() const PROTOBUF_FINAL { return New(NULL); }

  VariableParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VariableParam& from);
  void MergeFrom(const VariableParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VariableParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string solver_name = 2;
  void clear_solver_name();
  static const int kSolverNameFieldNumber = 2;
  const ::std::string& solver_name() const;
  void set_solver_name(const ::std::string& value);
  #if LANG_CXX11
  void set_solver_name(::std::string&& value);
  #endif
  void set_solver_name(const char* value);
  void set_solver_name(const char* value, size_t size);
  ::std::string* mutable_solver_name();
  ::std::string* release_solver_name();
  void set_allocated_solver_name(::std::string* solver_name);

  // .InitParam init_param = 1;
  bool has_init_param() const;
  void clear_init_param();
  static const int kInitParamFieldNumber = 1;
  const ::InitParam& init_param() const;
  ::InitParam* mutable_init_param();
  ::InitParam* release_init_param();
  void set_allocated_init_param(::InitParam* init_param);

  // .TensorData weights = 3;
  bool has_weights() const;
  void clear_weights();
  static const int kWeightsFieldNumber = 3;
  const ::TensorData& weights() const;
  ::TensorData* mutable_weights();
  ::TensorData* release_weights();
  void set_allocated_weights(::TensorData* weights);

  // @@protoc_insertion_point(class_scope:VariableParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr solver_name_;
  ::InitParam* init_param_;
  ::TensorData* weights_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LossParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LossParam) */ {
 public:
  LossParam();
  virtual ~LossParam();

  LossParam(const LossParam& from);

  inline LossParam& operator=(const LossParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LossParam& default_instance();

  static inline const LossParam* internal_default_instance() {
    return reinterpret_cast<const LossParam*>(
               &_LossParam_default_instance_);
  }

  void Swap(LossParam* other);

  // implements Message ----------------------------------------------

  inline LossParam* New() const PROTOBUF_FINAL { return New(NULL); }

  LossParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LossParam& from);
  void MergeFrom(const LossParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LossParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .SoftmaxLossParam softmax_loss_param = 1;
  bool has_softmax_loss_param() const;
  void clear_softmax_loss_param();
  static const int kSoftmaxLossParamFieldNumber = 1;
  const ::SoftmaxLossParam& softmax_loss_param() const;
  ::SoftmaxLossParam* mutable_softmax_loss_param();
  ::SoftmaxLossParam* release_softmax_loss_param();
  void set_allocated_softmax_loss_param(::SoftmaxLossParam* softmax_loss_param);

  // .EuclideanLossParam euclidean_loss_param = 2;
  bool has_euclidean_loss_param() const;
  void clear_euclidean_loss_param();
  static const int kEuclideanLossParamFieldNumber = 2;
  const ::EuclideanLossParam& euclidean_loss_param() const;
  ::EuclideanLossParam* mutable_euclidean_loss_param();
  ::EuclideanLossParam* release_euclidean_loss_param();
  void set_allocated_euclidean_loss_param(::EuclideanLossParam* euclidean_loss_param);

  // @@protoc_insertion_point(class_scope:LossParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SoftmaxLossParam* softmax_loss_param_;
  ::EuclideanLossParam* euclidean_loss_param_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataGeneratorParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DataGeneratorParam) */ {
 public:
  DataGeneratorParam();
  virtual ~DataGeneratorParam();

  DataGeneratorParam(const DataGeneratorParam& from);

  inline DataGeneratorParam& operator=(const DataGeneratorParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataGeneratorParam& default_instance();

  static inline const DataGeneratorParam* internal_default_instance() {
    return reinterpret_cast<const DataGeneratorParam*>(
               &_DataGeneratorParam_default_instance_);
  }

  void Swap(DataGeneratorParam* other);

  // implements Message ----------------------------------------------

  inline DataGeneratorParam* New() const PROTOBUF_FINAL { return New(NULL); }

  DataGeneratorParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DataGeneratorParam& from);
  void MergeFrom(const DataGeneratorParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DataGeneratorParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 num_samples = 1;
  void clear_num_samples();
  static const int kNumSamplesFieldNumber = 1;
  ::google::protobuf::int32 num_samples() const;
  void set_num_samples(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DataGeneratorParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 num_samples_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivationParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActivationParam) */ {
 public:
  ActivationParam();
  virtual ~ActivationParam();

  ActivationParam(const ActivationParam& from);

  inline ActivationParam& operator=(const ActivationParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivationParam& default_instance();

  static inline const ActivationParam* internal_default_instance() {
    return reinterpret_cast<const ActivationParam*>(
               &_ActivationParam_default_instance_);
  }

  void Swap(ActivationParam* other);

  // implements Message ----------------------------------------------

  inline ActivationParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivationParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivationParam& from);
  void MergeFrom(const ActivationParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivationParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ActivationParam_Type Type;
  static const Type CUDNN_ACTIVATION_SIGMOID =
    ActivationParam_Type_CUDNN_ACTIVATION_SIGMOID;
  static const Type CUDNN_ACTIVATION_RELU =
    ActivationParam_Type_CUDNN_ACTIVATION_RELU;
  static const Type CUDNN_ACTIVATION_TANH =
    ActivationParam_Type_CUDNN_ACTIVATION_TANH;
  static const Type CUDNN_ACTIVATION_CLIPPED_RELU =
    ActivationParam_Type_CUDNN_ACTIVATION_CLIPPED_RELU;
  static const Type CUDNN_ACTIVATION_ELU =
    ActivationParam_Type_CUDNN_ACTIVATION_ELU;
  static inline bool Type_IsValid(int value) {
    return ActivationParam_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ActivationParam_Type_Type_MIN;
  static const Type Type_MAX =
    ActivationParam_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ActivationParam_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return ActivationParam_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return ActivationParam_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return ActivationParam_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ActivationParam.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ActivationParam_Type type() const;
  void set_type(::ActivationParam_Type value);

  // float coef = 2;
  void clear_coef();
  static const int kCoefFieldNumber = 2;
  float coef() const;
  void set_coef(float value);

  // @@protoc_insertion_point(class_scope:ActivationParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  float coef_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImageReaderParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ImageReaderParam) */ {
 public:
  ImageReaderParam();
  virtual ~ImageReaderParam();

  ImageReaderParam(const ImageReaderParam& from);

  inline ImageReaderParam& operator=(const ImageReaderParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ImageReaderParam& default_instance();

  static inline const ImageReaderParam* internal_default_instance() {
    return reinterpret_cast<const ImageReaderParam*>(
               &_ImageReaderParam_default_instance_);
  }

  void Swap(ImageReaderParam* other);

  // implements Message ----------------------------------------------

  inline ImageReaderParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ImageReaderParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ImageReaderParam& from);
  void MergeFrom(const ImageReaderParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ImageReaderParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ImageReaderParam_Type Type;
  static const Type GRAY_ONLY =
    ImageReaderParam_Type_GRAY_ONLY;
  static const Type COLOR_IF_AVAILABLE =
    ImageReaderParam_Type_COLOR_IF_AVAILABLE;
  static inline bool Type_IsValid(int value) {
    return ImageReaderParam_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ImageReaderParam_Type_Type_MIN;
  static const Type Type_MAX =
    ImageReaderParam_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ImageReaderParam_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return ImageReaderParam_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return ImageReaderParam_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return ImageReaderParam_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string file_name = 1;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // .ImageReaderParam.Type type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::ImageReaderParam_Type type() const;
  void set_type(::ImageReaderParam_Type value);

  // @@protoc_insertion_point(class_scope:ImageReaderParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GeneratorParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GeneratorParam) */ {
 public:
  GeneratorParam();
  virtual ~GeneratorParam();

  GeneratorParam(const GeneratorParam& from);

  inline GeneratorParam& operator=(const GeneratorParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneratorParam& default_instance();

  static inline const GeneratorParam* internal_default_instance() {
    return reinterpret_cast<const GeneratorParam*>(
               &_GeneratorParam_default_instance_);
  }

  void Swap(GeneratorParam* other);

  // implements Message ----------------------------------------------

  inline GeneratorParam* New() const PROTOBUF_FINAL { return New(NULL); }

  GeneratorParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GeneratorParam& from);
  void MergeFrom(const GeneratorParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GeneratorParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .MnistParam mnist_param = 1;
  bool has_mnist_param() const;
  void clear_mnist_param();
  static const int kMnistParamFieldNumber = 1;
  const ::MnistParam& mnist_param() const;
  ::MnistParam* mutable_mnist_param();
  ::MnistParam* release_mnist_param();
  void set_allocated_mnist_param(::MnistParam* mnist_param);

  // .DataGeneratorParam data_generator_param = 2;
  bool has_data_generator_param() const;
  void clear_data_generator_param();
  static const int kDataGeneratorParamFieldNumber = 2;
  const ::DataGeneratorParam& data_generator_param() const;
  ::DataGeneratorParam* mutable_data_generator_param();
  ::DataGeneratorParam* release_data_generator_param();
  void set_allocated_data_generator_param(::DataGeneratorParam* data_generator_param);

  // .ImageReaderParam image_reader_param = 3;
  bool has_image_reader_param() const;
  void clear_image_reader_param();
  static const int kImageReaderParamFieldNumber = 3;
  const ::ImageReaderParam& image_reader_param() const;
  ::ImageReaderParam* mutable_image_reader_param();
  ::ImageReaderParam* release_image_reader_param();
  void set_allocated_image_reader_param(::ImageReaderParam* image_reader_param);

  // @@protoc_insertion_point(class_scope:GeneratorParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::MnistParam* mnist_param_;
  ::DataGeneratorParam* data_generator_param_;
  ::ImageReaderParam* image_reader_param_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MnistParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MnistParam) */ {
 public:
  MnistParam();
  virtual ~MnistParam();

  MnistParam(const MnistParam& from);

  inline MnistParam& operator=(const MnistParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MnistParam& default_instance();

  static inline const MnistParam* internal_default_instance() {
    return reinterpret_cast<const MnistParam*>(
               &_MnistParam_default_instance_);
  }

  void Swap(MnistParam* other);

  // implements Message ----------------------------------------------

  inline MnistParam* New() const PROTOBUF_FINAL { return New(NULL); }

  MnistParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MnistParam& from);
  void MergeFrom(const MnistParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MnistParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MnistParam_ReaderType ReaderType;
  static const ReaderType TRAIN =
    MnistParam_ReaderType_TRAIN;
  static const ReaderType TEST =
    MnistParam_ReaderType_TEST;
  static inline bool ReaderType_IsValid(int value) {
    return MnistParam_ReaderType_IsValid(value);
  }
  static const ReaderType ReaderType_MIN =
    MnistParam_ReaderType_ReaderType_MIN;
  static const ReaderType ReaderType_MAX =
    MnistParam_ReaderType_ReaderType_MAX;
  static const int ReaderType_ARRAYSIZE =
    MnistParam_ReaderType_ReaderType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReaderType_descriptor() {
    return MnistParam_ReaderType_descriptor();
  }
  static inline const ::std::string& ReaderType_Name(ReaderType value) {
    return MnistParam_ReaderType_Name(value);
  }
  static inline bool ReaderType_Parse(const ::std::string& name,
      ReaderType* value) {
    return MnistParam_ReaderType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string folder_path = 1;
  void clear_folder_path();
  static const int kFolderPathFieldNumber = 1;
  const ::std::string& folder_path() const;
  void set_folder_path(const ::std::string& value);
  #if LANG_CXX11
  void set_folder_path(::std::string&& value);
  #endif
  void set_folder_path(const char* value);
  void set_folder_path(const char* value, size_t size);
  ::std::string* mutable_folder_path();
  ::std::string* release_folder_path();
  void set_allocated_folder_path(::std::string* folder_path);

  // .MnistParam.ReaderType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::MnistParam_ReaderType type() const;
  void set_type(::MnistParam_ReaderType value);

  // int32 batch_size = 3;
  void clear_batch_size();
  static const int kBatchSizeFieldNumber = 3;
  ::google::protobuf::int32 batch_size() const;
  void set_batch_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:MnistParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr folder_path_;
  int type_;
  ::google::protobuf::int32 batch_size_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CastFloatParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CastFloatParam) */ {
 public:
  CastFloatParam();
  virtual ~CastFloatParam();

  CastFloatParam(const CastFloatParam& from);

  inline CastFloatParam& operator=(const CastFloatParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CastFloatParam& default_instance();

  static inline const CastFloatParam* internal_default_instance() {
    return reinterpret_cast<const CastFloatParam*>(
               &_CastFloatParam_default_instance_);
  }

  void Swap(CastFloatParam* other);

  // implements Message ----------------------------------------------

  inline CastFloatParam* New() const PROTOBUF_FINAL { return New(NULL); }

  CastFloatParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CastFloatParam& from);
  void MergeFrom(const CastFloatParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CastFloatParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CastFloatParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NodeParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NodeParam) */ {
 public:
  NodeParam();
  virtual ~NodeParam();

  NodeParam(const NodeParam& from);

  inline NodeParam& operator=(const NodeParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeParam& default_instance();

  static inline const NodeParam* internal_default_instance() {
    return reinterpret_cast<const NodeParam*>(
               &_NodeParam_default_instance_);
  }

  void Swap(NodeParam* other);

  // implements Message ----------------------------------------------

  inline NodeParam* New() const PROTOBUF_FINAL { return New(NULL); }

  NodeParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NodeParam& from);
  void MergeFrom(const NodeParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NodeParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string input = 2;
  int input_size() const;
  void clear_input();
  static const int kInputFieldNumber = 2;
  const ::std::string& input(int index) const;
  ::std::string* mutable_input(int index);
  void set_input(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_input(int index, ::std::string&& value);
  #endif
  void set_input(int index, const char* value);
  void set_input(int index, const char* value, size_t size);
  ::std::string* add_input();
  void add_input(const ::std::string& value);
  #if LANG_CXX11
  void add_input(::std::string&& value);
  #endif
  void add_input(const char* value);
  void add_input(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& input() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_input();

  // repeated string output = 3;
  int output_size() const;
  void clear_output();
  static const int kOutputFieldNumber = 3;
  const ::std::string& output(int index) const;
  ::std::string* mutable_output(int index);
  void set_output(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_output(int index, ::std::string&& value);
  #endif
  void set_output(int index, const char* value);
  void set_output(int index, const char* value, size_t size);
  ::std::string* add_output();
  void add_output(const ::std::string& value);
  #if LANG_CXX11
  void add_output(::std::string&& value);
  #endif
  void add_output(const char* value);
  void add_output(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& output() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_output();

  // repeated string phase = 4;
  int phase_size() const;
  void clear_phase();
  static const int kPhaseFieldNumber = 4;
  const ::std::string& phase(int index) const;
  ::std::string* mutable_phase(int index);
  void set_phase(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_phase(int index, ::std::string&& value);
  #endif
  void set_phase(int index, const char* value);
  void set_phase(int index, const char* value, size_t size);
  ::std::string* add_phase();
  void add_phase(const ::std::string& value);
  #if LANG_CXX11
  void add_phase(::std::string&& value);
  #endif
  void add_phase(const char* value);
  void add_phase(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& phase() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_phase();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .LossParam loss_param = 50;
  bool has_loss_param() const;
  void clear_loss_param();
  static const int kLossParamFieldNumber = 50;
  const ::LossParam& loss_param() const;
  ::LossParam* mutable_loss_param();
  ::LossParam* release_loss_param();
  void set_allocated_loss_param(::LossParam* loss_param);

  // .GeneratorParam generator_param = 51;
  bool has_generator_param() const;
  void clear_generator_param();
  static const int kGeneratorParamFieldNumber = 51;
  const ::GeneratorParam& generator_param() const;
  ::GeneratorParam* mutable_generator_param();
  ::GeneratorParam* release_generator_param();
  void set_allocated_generator_param(::GeneratorParam* generator_param);

  // .VariableParam variable_param = 100;
  bool has_variable_param() const;
  void clear_variable_param();
  static const int kVariableParamFieldNumber = 100;
  const ::VariableParam& variable_param() const;
  ::VariableParam* mutable_variable_param();
  ::VariableParam* release_variable_param();
  void set_allocated_variable_param(::VariableParam* variable_param);

  // .PlaceHolderParam place_holder_param = 101;
  bool has_place_holder_param() const;
  void clear_place_holder_param();
  static const int kPlaceHolderParamFieldNumber = 101;
  const ::PlaceHolderParam& place_holder_param() const;
  ::PlaceHolderParam* mutable_place_holder_param();
  ::PlaceHolderParam* release_place_holder_param();
  void set_allocated_place_holder_param(::PlaceHolderParam* place_holder_param);

  // .PhaseplexerParam phaseplexer_param = 102;
  bool has_phaseplexer_param() const;
  void clear_phaseplexer_param();
  static const int kPhaseplexerParamFieldNumber = 102;
  const ::PhaseplexerParam& phaseplexer_param() const;
  ::PhaseplexerParam* mutable_phaseplexer_param();
  ::PhaseplexerParam* release_phaseplexer_param();
  void set_allocated_phaseplexer_param(::PhaseplexerParam* phaseplexer_param);

  // .AddParam add_param = 103;
  bool has_add_param() const;
  void clear_add_param();
  static const int kAddParamFieldNumber = 103;
  const ::AddParam& add_param() const;
  ::AddParam* mutable_add_param();
  ::AddParam* release_add_param();
  void set_allocated_add_param(::AddParam* add_param);

  // .BiasAddParam bias_add_param = 104;
  bool has_bias_add_param() const;
  void clear_bias_add_param();
  static const int kBiasAddParamFieldNumber = 104;
  const ::BiasAddParam& bias_add_param() const;
  ::BiasAddParam* mutable_bias_add_param();
  ::BiasAddParam* release_bias_add_param();
  void set_allocated_bias_add_param(::BiasAddParam* bias_add_param);

  // .Conv2dParam conv_2d_param = 105;
  bool has_conv_2d_param() const;
  void clear_conv_2d_param();
  static const int kConv2DParamFieldNumber = 105;
  const ::Conv2dParam& conv_2d_param() const;
  ::Conv2dParam* mutable_conv_2d_param();
  ::Conv2dParam* release_conv_2d_param();
  void set_allocated_conv_2d_param(::Conv2dParam* conv_2d_param);

  // .TransposedConv2dParam transposed_conv_2d_param = 106;
  bool has_transposed_conv_2d_param() const;
  void clear_transposed_conv_2d_param();
  static const int kTransposedConv2DParamFieldNumber = 106;
  const ::TransposedConv2dParam& transposed_conv_2d_param() const;
  ::TransposedConv2dParam* mutable_transposed_conv_2d_param();
  ::TransposedConv2dParam* release_transposed_conv_2d_param();
  void set_allocated_transposed_conv_2d_param(::TransposedConv2dParam* transposed_conv_2d_param);

  // .DropoutParam dropout_param = 107;
  bool has_dropout_param() const;
  void clear_dropout_param();
  static const int kDropoutParamFieldNumber = 107;
  const ::DropoutParam& dropout_param() const;
  ::DropoutParam* mutable_dropout_param();
  ::DropoutParam* release_dropout_param();
  void set_allocated_dropout_param(::DropoutParam* dropout_param);

  // .LeakyReluParam leaky_relu_param = 108;
  bool has_leaky_relu_param() const;
  void clear_leaky_relu_param();
  static const int kLeakyReluParamFieldNumber = 108;
  const ::LeakyReluParam& leaky_relu_param() const;
  ::LeakyReluParam* mutable_leaky_relu_param();
  ::LeakyReluParam* release_leaky_relu_param();
  void set_allocated_leaky_relu_param(::LeakyReluParam* leaky_relu_param);

  // .SoftmaxParam softmax_param = 109;
  bool has_softmax_param() const;
  void clear_softmax_param();
  static const int kSoftmaxParamFieldNumber = 109;
  const ::SoftmaxParam& softmax_param() const;
  ::SoftmaxParam* mutable_softmax_param();
  ::SoftmaxParam* release_softmax_param();
  void set_allocated_softmax_param(::SoftmaxParam* softmax_param);

  // .SquareParam square_param = 110;
  bool has_square_param() const;
  void clear_square_param();
  static const int kSquareParamFieldNumber = 110;
  const ::SquareParam& square_param() const;
  ::SquareParam* mutable_square_param();
  ::SquareParam* release_square_param();
  void set_allocated_square_param(::SquareParam* square_param);

  // .MatMulParam matmul_param = 111;
  bool has_matmul_param() const;
  void clear_matmul_param();
  static const int kMatmulParamFieldNumber = 111;
  const ::MatMulParam& matmul_param() const;
  ::MatMulParam* mutable_matmul_param();
  ::MatMulParam* release_matmul_param();
  void set_allocated_matmul_param(::MatMulParam* matmul_param);

  // .PoolingParam pooling_param = 112;
  bool has_pooling_param() const;
  void clear_pooling_param();
  static const int kPoolingParamFieldNumber = 112;
  const ::PoolingParam& pooling_param() const;
  ::PoolingParam* mutable_pooling_param();
  ::PoolingParam* release_pooling_param();
  void set_allocated_pooling_param(::PoolingParam* pooling_param);

  // .ReduceParam reduce_param = 113;
  bool has_reduce_param() const;
  void clear_reduce_param();
  static const int kReduceParamFieldNumber = 113;
  const ::ReduceParam& reduce_param() const;
  ::ReduceParam* mutable_reduce_param();
  ::ReduceParam* release_reduce_param();
  void set_allocated_reduce_param(::ReduceParam* reduce_param);

  // .EqualParam equal_param = 114;
  bool has_equal_param() const;
  void clear_equal_param();
  static const int kEqualParamFieldNumber = 114;
  const ::EqualParam& equal_param() const;
  ::EqualParam* mutable_equal_param();
  ::EqualParam* release_equal_param();
  void set_allocated_equal_param(::EqualParam* equal_param);

  // .PrintParam print_param = 115;
  bool has_print_param() const;
  void clear_print_param();
  static const int kPrintParamFieldNumber = 115;
  const ::PrintParam& print_param() const;
  ::PrintParam* mutable_print_param();
  ::PrintParam* release_print_param();
  void set_allocated_print_param(::PrintParam* print_param);

  // .CastFloatParam cast_float_param = 116;
  bool has_cast_float_param() const;
  void clear_cast_float_param();
  static const int kCastFloatParamFieldNumber = 116;
  const ::CastFloatParam& cast_float_param() const;
  ::CastFloatParam* mutable_cast_float_param();
  ::CastFloatParam* release_cast_float_param();
  void set_allocated_cast_float_param(::CastFloatParam* cast_float_param);

  // .AccumulatorParam accumulator_param = 117;
  bool has_accumulator_param() const;
  void clear_accumulator_param();
  static const int kAccumulatorParamFieldNumber = 117;
  const ::AccumulatorParam& accumulator_param() const;
  ::AccumulatorParam* mutable_accumulator_param();
  ::AccumulatorParam* release_accumulator_param();
  void set_allocated_accumulator_param(::AccumulatorParam* accumulator_param);

  // .DisplayParam display_param = 118;
  bool has_display_param() const;
  void clear_display_param();
  static const int kDisplayParamFieldNumber = 118;
  const ::DisplayParam& display_param() const;
  ::DisplayParam* mutable_display_param();
  ::DisplayParam* release_display_param();
  void set_allocated_display_param(::DisplayParam* display_param);

  // .ActivationParam activation_param = 119;
  bool has_activation_param() const;
  void clear_activation_param();
  static const int kActivationParamFieldNumber = 119;
  const ::ActivationParam& activation_param() const;
  ::ActivationParam* mutable_activation_param();
  ::ActivationParam* release_activation_param();
  void set_allocated_activation_param(::ActivationParam* activation_param);

  // @@protoc_insertion_point(class_scope:NodeParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> input_;
  ::google::protobuf::RepeatedPtrField< ::std::string> output_;
  ::google::protobuf::RepeatedPtrField< ::std::string> phase_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::LossParam* loss_param_;
  ::GeneratorParam* generator_param_;
  ::VariableParam* variable_param_;
  ::PlaceHolderParam* place_holder_param_;
  ::PhaseplexerParam* phaseplexer_param_;
  ::AddParam* add_param_;
  ::BiasAddParam* bias_add_param_;
  ::Conv2dParam* conv_2d_param_;
  ::TransposedConv2dParam* transposed_conv_2d_param_;
  ::DropoutParam* dropout_param_;
  ::LeakyReluParam* leaky_relu_param_;
  ::SoftmaxParam* softmax_param_;
  ::SquareParam* square_param_;
  ::MatMulParam* matmul_param_;
  ::PoolingParam* pooling_param_;
  ::ReduceParam* reduce_param_;
  ::EqualParam* equal_param_;
  ::PrintParam* print_param_;
  ::CastFloatParam* cast_float_param_;
  ::AccumulatorParam* accumulator_param_;
  ::DisplayParam* display_param_;
  ::ActivationParam* activation_param_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SquareParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SquareParam) */ {
 public:
  SquareParam();
  virtual ~SquareParam();

  SquareParam(const SquareParam& from);

  inline SquareParam& operator=(const SquareParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SquareParam& default_instance();

  static inline const SquareParam* internal_default_instance() {
    return reinterpret_cast<const SquareParam*>(
               &_SquareParam_default_instance_);
  }

  void Swap(SquareParam* other);

  // implements Message ----------------------------------------------

  inline SquareParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SquareParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SquareParam& from);
  void MergeFrom(const SquareParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SquareParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SquareParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EuclideanLossParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EuclideanLossParam) */ {
 public:
  EuclideanLossParam();
  virtual ~EuclideanLossParam();

  EuclideanLossParam(const EuclideanLossParam& from);

  inline EuclideanLossParam& operator=(const EuclideanLossParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EuclideanLossParam& default_instance();

  static inline const EuclideanLossParam* internal_default_instance() {
    return reinterpret_cast<const EuclideanLossParam*>(
               &_EuclideanLossParam_default_instance_);
  }

  void Swap(EuclideanLossParam* other);

  // implements Message ----------------------------------------------

  inline EuclideanLossParam* New() const PROTOBUF_FINAL { return New(NULL); }

  EuclideanLossParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EuclideanLossParam& from);
  void MergeFrom(const EuclideanLossParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EuclideanLossParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:EuclideanLossParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SoftmaxLossParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SoftmaxLossParam) */ {
 public:
  SoftmaxLossParam();
  virtual ~SoftmaxLossParam();

  SoftmaxLossParam(const SoftmaxLossParam& from);

  inline SoftmaxLossParam& operator=(const SoftmaxLossParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoftmaxLossParam& default_instance();

  static inline const SoftmaxLossParam* internal_default_instance() {
    return reinterpret_cast<const SoftmaxLossParam*>(
               &_SoftmaxLossParam_default_instance_);
  }

  void Swap(SoftmaxLossParam* other);

  // implements Message ----------------------------------------------

  inline SoftmaxLossParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SoftmaxLossParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SoftmaxLossParam& from);
  void MergeFrom(const SoftmaxLossParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SoftmaxLossParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float alpha = 1;
  void clear_alpha();
  static const int kAlphaFieldNumber = 1;
  float alpha() const;
  void set_alpha(float value);

  // float beta = 2;
  void clear_beta();
  static const int kBetaFieldNumber = 2;
  float beta() const;
  void set_beta(float value);

  // @@protoc_insertion_point(class_scope:SoftmaxLossParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float alpha_;
  float beta_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SoftmaxParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SoftmaxParam) */ {
 public:
  SoftmaxParam();
  virtual ~SoftmaxParam();

  SoftmaxParam(const SoftmaxParam& from);

  inline SoftmaxParam& operator=(const SoftmaxParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoftmaxParam& default_instance();

  static inline const SoftmaxParam* internal_default_instance() {
    return reinterpret_cast<const SoftmaxParam*>(
               &_SoftmaxParam_default_instance_);
  }

  void Swap(SoftmaxParam* other);

  // implements Message ----------------------------------------------

  inline SoftmaxParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SoftmaxParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SoftmaxParam& from);
  void MergeFrom(const SoftmaxParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SoftmaxParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float alpha = 1;
  void clear_alpha();
  static const int kAlphaFieldNumber = 1;
  float alpha() const;
  void set_alpha(float value);

  // float beta = 2;
  void clear_beta();
  static const int kBetaFieldNumber = 2;
  float beta() const;
  void set_beta(float value);

  // @@protoc_insertion_point(class_scope:SoftmaxParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float alpha_;
  float beta_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitFillParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitFillParam) */ {
 public:
  InitFillParam();
  virtual ~InitFillParam();

  InitFillParam(const InitFillParam& from);

  inline InitFillParam& operator=(const InitFillParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitFillParam& default_instance();

  static inline const InitFillParam* internal_default_instance() {
    return reinterpret_cast<const InitFillParam*>(
               &_InitFillParam_default_instance_);
  }

  void Swap(InitFillParam* other);

  // implements Message ----------------------------------------------

  inline InitFillParam* New() const PROTOBUF_FINAL { return New(NULL); }

  InitFillParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitFillParam& from);
  void MergeFrom(const InitFillParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitFillParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:InitFillParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float value_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitIndexFillParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitIndexFillParam) */ {
 public:
  InitIndexFillParam();
  virtual ~InitIndexFillParam();

  InitIndexFillParam(const InitIndexFillParam& from);

  inline InitIndexFillParam& operator=(const InitIndexFillParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitIndexFillParam& default_instance();

  static inline const InitIndexFillParam* internal_default_instance() {
    return reinterpret_cast<const InitIndexFillParam*>(
               &_InitIndexFillParam_default_instance_);
  }

  void Swap(InitIndexFillParam* other);

  // implements Message ----------------------------------------------

  inline InitIndexFillParam* New() const PROTOBUF_FINAL { return New(NULL); }

  InitIndexFillParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitIndexFillParam& from);
  void MergeFrom(const InitIndexFillParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitIndexFillParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float offset = 1;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  float offset() const;
  void set_offset(float value);

  // @@protoc_insertion_point(class_scope:InitIndexFillParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float offset_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitRandomUniformParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitRandomUniformParam) */ {
 public:
  InitRandomUniformParam();
  virtual ~InitRandomUniformParam();

  InitRandomUniformParam(const InitRandomUniformParam& from);

  inline InitRandomUniformParam& operator=(const InitRandomUniformParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitRandomUniformParam& default_instance();

  static inline const InitRandomUniformParam* internal_default_instance() {
    return reinterpret_cast<const InitRandomUniformParam*>(
               &_InitRandomUniformParam_default_instance_);
  }

  void Swap(InitRandomUniformParam* other);

  // implements Message ----------------------------------------------

  inline InitRandomUniformParam* New() const PROTOBUF_FINAL { return New(NULL); }

  InitRandomUniformParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitRandomUniformParam& from);
  void MergeFrom(const InitRandomUniformParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitRandomUniformParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  float min() const;
  void set_min(float value);

  // float max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  float max() const;
  void set_max(float value);

  // @@protoc_insertion_point(class_scope:InitRandomUniformParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float min_;
  float max_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitStepParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitStepParam) */ {
 public:
  InitStepParam();
  virtual ~InitStepParam();

  InitStepParam(const InitStepParam& from);

  inline InitStepParam& operator=(const InitStepParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitStepParam& default_instance();

  static inline const InitStepParam* internal_default_instance() {
    return reinterpret_cast<const InitStepParam*>(
               &_InitStepParam_default_instance_);
  }

  void Swap(InitStepParam* other);

  // implements Message ----------------------------------------------

  inline InitStepParam* New() const PROTOBUF_FINAL { return New(NULL); }

  InitStepParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitStepParam& from);
  void MergeFrom(const InitStepParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitStepParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  float min() const;
  void set_min(float value);

  // float max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  float max() const;
  void set_max(float value);

  // @@protoc_insertion_point(class_scope:InitStepParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float min_;
  float max_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitParam) */ {
 public:
  InitParam();
  virtual ~InitParam();

  InitParam(const InitParam& from);

  inline InitParam& operator=(const InitParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitParam& default_instance();

  static inline const InitParam* internal_default_instance() {
    return reinterpret_cast<const InitParam*>(
               &_InitParam_default_instance_);
  }

  void Swap(InitParam* other);

  // implements Message ----------------------------------------------

  inline InitParam* New() const PROTOBUF_FINAL { return New(NULL); }

  InitParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitParam& from);
  void MergeFrom(const InitParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TensorParam tensor_param = 1;
  bool has_tensor_param() const;
  void clear_tensor_param();
  static const int kTensorParamFieldNumber = 1;
  const ::TensorParam& tensor_param() const;
  ::TensorParam* mutable_tensor_param();
  ::TensorParam* release_tensor_param();
  void set_allocated_tensor_param(::TensorParam* tensor_param);

  // .TensorData init_data = 2;
  bool has_init_data() const;
  void clear_init_data();
  static const int kInitDataFieldNumber = 2;
  const ::TensorData& init_data() const;
  ::TensorData* mutable_init_data();
  ::TensorData* release_init_data();
  void set_allocated_init_data(::TensorData* init_data);

  // .InitFillParam fill_param = 3;
  bool has_fill_param() const;
  void clear_fill_param();
  static const int kFillParamFieldNumber = 3;
  const ::InitFillParam& fill_param() const;
  ::InitFillParam* mutable_fill_param();
  ::InitFillParam* release_fill_param();
  void set_allocated_fill_param(::InitFillParam* fill_param);

  // .InitIndexFillParam index_fill_param = 4;
  bool has_index_fill_param() const;
  void clear_index_fill_param();
  static const int kIndexFillParamFieldNumber = 4;
  const ::InitIndexFillParam& index_fill_param() const;
  ::InitIndexFillParam* mutable_index_fill_param();
  ::InitIndexFillParam* release_index_fill_param();
  void set_allocated_index_fill_param(::InitIndexFillParam* index_fill_param);

  // .InitRandomUniformParam random_uniform_param = 5;
  bool has_random_uniform_param() const;
  void clear_random_uniform_param();
  static const int kRandomUniformParamFieldNumber = 5;
  const ::InitRandomUniformParam& random_uniform_param() const;
  ::InitRandomUniformParam* mutable_random_uniform_param();
  ::InitRandomUniformParam* release_random_uniform_param();
  void set_allocated_random_uniform_param(::InitRandomUniformParam* random_uniform_param);

  // .InitStepParam step_param = 6;
  bool has_step_param() const;
  void clear_step_param();
  static const int kStepParamFieldNumber = 6;
  const ::InitStepParam& step_param() const;
  ::InitStepParam* mutable_step_param();
  ::InitStepParam* release_step_param();
  void set_allocated_step_param(::InitStepParam* step_param);

  // @@protoc_insertion_point(class_scope:InitParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TensorParam* tensor_param_;
  ::TensorData* init_data_;
  ::InitFillParam* fill_param_;
  ::InitIndexFillParam* index_fill_param_;
  ::InitRandomUniformParam* random_uniform_param_;
  ::InitStepParam* step_param_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SGDSolverParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SGDSolverParam) */ {
 public:
  SGDSolverParam();
  virtual ~SGDSolverParam();

  SGDSolverParam(const SGDSolverParam& from);

  inline SGDSolverParam& operator=(const SGDSolverParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SGDSolverParam& default_instance();

  static inline const SGDSolverParam* internal_default_instance() {
    return reinterpret_cast<const SGDSolverParam*>(
               &_SGDSolverParam_default_instance_);
  }

  void Swap(SGDSolverParam* other);

  // implements Message ----------------------------------------------

  inline SGDSolverParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SGDSolverParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SGDSolverParam& from);
  void MergeFrom(const SGDSolverParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SGDSolverParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float learning_rate = 1;
  void clear_learning_rate();
  static const int kLearningRateFieldNumber = 1;
  float learning_rate() const;
  void set_learning_rate(float value);

  // float momentum = 2;
  void clear_momentum();
  static const int kMomentumFieldNumber = 2;
  float momentum() const;
  void set_momentum(float value);

  // @@protoc_insertion_point(class_scope:SGDSolverParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float learning_rate_;
  float momentum_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GainSolverParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GainSolverParam) */ {
 public:
  GainSolverParam();
  virtual ~GainSolverParam();

  GainSolverParam(const GainSolverParam& from);

  inline GainSolverParam& operator=(const GainSolverParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GainSolverParam& default_instance();

  static inline const GainSolverParam* internal_default_instance() {
    return reinterpret_cast<const GainSolverParam*>(
               &_GainSolverParam_default_instance_);
  }

  void Swap(GainSolverParam* other);

  // implements Message ----------------------------------------------

  inline GainSolverParam* New() const PROTOBUF_FINAL { return New(NULL); }

  GainSolverParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GainSolverParam& from);
  void MergeFrom(const GainSolverParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GainSolverParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float learning_rate = 1;
  void clear_learning_rate();
  static const int kLearningRateFieldNumber = 1;
  float learning_rate() const;
  void set_learning_rate(float value);

  // float momentum = 2;
  void clear_momentum();
  static const int kMomentumFieldNumber = 2;
  float momentum() const;
  void set_momentum(float value);

  // float max_gain = 3;
  void clear_max_gain();
  static const int kMaxGainFieldNumber = 3;
  float max_gain() const;
  void set_max_gain(float value);

  // float min_gain = 4;
  void clear_min_gain();
  static const int kMinGainFieldNumber = 4;
  float min_gain() const;
  void set_min_gain(float value);

  // float gain_plus = 5;
  void clear_gain_plus();
  static const int kGainPlusFieldNumber = 5;
  float gain_plus() const;
  void set_gain_plus(float value);

  // float gain_mult = 6;
  void clear_gain_mult();
  static const int kGainMultFieldNumber = 6;
  float gain_mult() const;
  void set_gain_mult(float value);

  // @@protoc_insertion_point(class_scope:GainSolverParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float learning_rate_;
  float momentum_;
  float max_gain_;
  float min_gain_;
  float gain_plus_;
  float gain_mult_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdaDeltaSolverParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AdaDeltaSolverParam) */ {
 public:
  AdaDeltaSolverParam();
  virtual ~AdaDeltaSolverParam();

  AdaDeltaSolverParam(const AdaDeltaSolverParam& from);

  inline AdaDeltaSolverParam& operator=(const AdaDeltaSolverParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdaDeltaSolverParam& default_instance();

  static inline const AdaDeltaSolverParam* internal_default_instance() {
    return reinterpret_cast<const AdaDeltaSolverParam*>(
               &_AdaDeltaSolverParam_default_instance_);
  }

  void Swap(AdaDeltaSolverParam* other);

  // implements Message ----------------------------------------------

  inline AdaDeltaSolverParam* New() const PROTOBUF_FINAL { return New(NULL); }

  AdaDeltaSolverParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdaDeltaSolverParam& from);
  void MergeFrom(const AdaDeltaSolverParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdaDeltaSolverParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float learning_rate = 1;
  void clear_learning_rate();
  static const int kLearningRateFieldNumber = 1;
  float learning_rate() const;
  void set_learning_rate(float value);

  // float momentum = 2;
  void clear_momentum();
  static const int kMomentumFieldNumber = 2;
  float momentum() const;
  void set_momentum(float value);

  // float delta = 3;
  void clear_delta();
  static const int kDeltaFieldNumber = 3;
  float delta() const;
  void set_delta(float value);

  // @@protoc_insertion_point(class_scope:AdaDeltaSolverParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float learning_rate_;
  float momentum_;
  float delta_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdamSolverParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AdamSolverParam) */ {
 public:
  AdamSolverParam();
  virtual ~AdamSolverParam();

  AdamSolverParam(const AdamSolverParam& from);

  inline AdamSolverParam& operator=(const AdamSolverParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdamSolverParam& default_instance();

  static inline const AdamSolverParam* internal_default_instance() {
    return reinterpret_cast<const AdamSolverParam*>(
               &_AdamSolverParam_default_instance_);
  }

  void Swap(AdamSolverParam* other);

  // implements Message ----------------------------------------------

  inline AdamSolverParam* New() const PROTOBUF_FINAL { return New(NULL); }

  AdamSolverParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdamSolverParam& from);
  void MergeFrom(const AdamSolverParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdamSolverParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float learning_rate = 1;
  void clear_learning_rate();
  static const int kLearningRateFieldNumber = 1;
  float learning_rate() const;
  void set_learning_rate(float value);

  // float beta1 = 2;
  void clear_beta1();
  static const int kBeta1FieldNumber = 2;
  float beta1() const;
  void set_beta1(float value);

  // float beta2 = 3;
  void clear_beta2();
  static const int kBeta2FieldNumber = 3;
  float beta2() const;
  void set_beta2(float value);

  // float eps = 4;
  void clear_eps();
  static const int kEpsFieldNumber = 4;
  float eps() const;
  void set_eps(float value);

  // @@protoc_insertion_point(class_scope:AdamSolverParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float learning_rate_;
  float beta1_;
  float beta2_;
  float eps_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SolverParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SolverParam) */ {
 public:
  SolverParam();
  virtual ~SolverParam();

  SolverParam(const SolverParam& from);

  inline SolverParam& operator=(const SolverParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SolverParam& default_instance();

  static inline const SolverParam* internal_default_instance() {
    return reinterpret_cast<const SolverParam*>(
               &_SolverParam_default_instance_);
  }

  void Swap(SolverParam* other);

  // implements Message ----------------------------------------------

  inline SolverParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SolverParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SolverParam& from);
  void MergeFrom(const SolverParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SolverParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .SGDSolverParam sgd_solver = 2;
  bool has_sgd_solver() const;
  void clear_sgd_solver();
  static const int kSgdSolverFieldNumber = 2;
  const ::SGDSolverParam& sgd_solver() const;
  ::SGDSolverParam* mutable_sgd_solver();
  ::SGDSolverParam* release_sgd_solver();
  void set_allocated_sgd_solver(::SGDSolverParam* sgd_solver);

  // .GainSolverParam gain_solver = 3;
  bool has_gain_solver() const;
  void clear_gain_solver();
  static const int kGainSolverFieldNumber = 3;
  const ::GainSolverParam& gain_solver() const;
  ::GainSolverParam* mutable_gain_solver();
  ::GainSolverParam* release_gain_solver();
  void set_allocated_gain_solver(::GainSolverParam* gain_solver);

  // .AdamSolverParam adam_solver = 4;
  bool has_adam_solver() const;
  void clear_adam_solver();
  static const int kAdamSolverFieldNumber = 4;
  const ::AdamSolverParam& adam_solver() const;
  ::AdamSolverParam* mutable_adam_solver();
  ::AdamSolverParam* release_adam_solver();
  void set_allocated_adam_solver(::AdamSolverParam* adam_solver);

  // .AdaDeltaSolverParam adadelta_solver = 5;
  bool has_adadelta_solver() const;
  void clear_adadelta_solver();
  static const int kAdadeltaSolverFieldNumber = 5;
  const ::AdaDeltaSolverParam& adadelta_solver() const;
  ::AdaDeltaSolverParam* mutable_adadelta_solver();
  ::AdaDeltaSolverParam* release_adadelta_solver();
  void set_allocated_adadelta_solver(::AdaDeltaSolverParam* adadelta_solver);

  // @@protoc_insertion_point(class_scope:SolverParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::SGDSolverParam* sgd_solver_;
  ::GainSolverParam* gain_solver_;
  ::AdamSolverParam* adam_solver_;
  ::AdaDeltaSolverParam* adadelta_solver_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PhaseParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PhaseParam) */ {
 public:
  PhaseParam();
  virtual ~PhaseParam();

  PhaseParam(const PhaseParam& from);

  inline PhaseParam& operator=(const PhaseParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhaseParam& default_instance();

  static inline const PhaseParam* internal_default_instance() {
    return reinterpret_cast<const PhaseParam*>(
               &_PhaseParam_default_instance_);
  }

  void Swap(PhaseParam* other);

  // implements Message ----------------------------------------------

  inline PhaseParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PhaseParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PhaseParam& from);
  void MergeFrom(const PhaseParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PhaseParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PhaseParam_PhaseBehaviour PhaseBehaviour;
  static const PhaseBehaviour TRAIN =
    PhaseParam_PhaseBehaviour_TRAIN;
  static const PhaseBehaviour VALIDATION =
    PhaseParam_PhaseBehaviour_VALIDATION;
  static const PhaseBehaviour INFERENCE =
    PhaseParam_PhaseBehaviour_INFERENCE;
  static inline bool PhaseBehaviour_IsValid(int value) {
    return PhaseParam_PhaseBehaviour_IsValid(value);
  }
  static const PhaseBehaviour PhaseBehaviour_MIN =
    PhaseParam_PhaseBehaviour_PhaseBehaviour_MIN;
  static const PhaseBehaviour PhaseBehaviour_MAX =
    PhaseParam_PhaseBehaviour_PhaseBehaviour_MAX;
  static const int PhaseBehaviour_ARRAYSIZE =
    PhaseParam_PhaseBehaviour_PhaseBehaviour_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PhaseBehaviour_descriptor() {
    return PhaseParam_PhaseBehaviour_descriptor();
  }
  static inline const ::std::string& PhaseBehaviour_Name(PhaseBehaviour value) {
    return PhaseParam_PhaseBehaviour_Name(value);
  }
  static inline bool PhaseBehaviour_Parse(const ::std::string& name,
      PhaseBehaviour* value) {
    return PhaseParam_PhaseBehaviour_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string phase = 1;
  void clear_phase();
  static const int kPhaseFieldNumber = 1;
  const ::std::string& phase() const;
  void set_phase(const ::std::string& value);
  #if LANG_CXX11
  void set_phase(::std::string&& value);
  #endif
  void set_phase(const char* value);
  void set_phase(const char* value, size_t size);
  ::std::string* mutable_phase();
  ::std::string* release_phase();
  void set_allocated_phase(::std::string* phase);

  // .PhaseParam.PhaseBehaviour behaviour = 2;
  void clear_behaviour();
  static const int kBehaviourFieldNumber = 2;
  ::PhaseParam_PhaseBehaviour behaviour() const;
  void set_behaviour(::PhaseParam_PhaseBehaviour value);

  // @@protoc_insertion_point(class_scope:PhaseParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phase_;
  int behaviour_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GraphParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GraphParam) */ {
 public:
  GraphParam();
  virtual ~GraphParam();

  GraphParam(const GraphParam& from);

  inline GraphParam& operator=(const GraphParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GraphParam& default_instance();

  static inline const GraphParam* internal_default_instance() {
    return reinterpret_cast<const GraphParam*>(
               &_GraphParam_default_instance_);
  }

  void Swap(GraphParam* other);

  // implements Message ----------------------------------------------

  inline GraphParam* New() const PROTOBUF_FINAL { return New(NULL); }

  GraphParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GraphParam& from);
  void MergeFrom(const GraphParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GraphParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NodeParam node = 1;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  const ::NodeParam& node(int index) const;
  ::NodeParam* mutable_node(int index);
  ::NodeParam* add_node();
  ::google::protobuf::RepeatedPtrField< ::NodeParam >*
      mutable_node();
  const ::google::protobuf::RepeatedPtrField< ::NodeParam >&
      node() const;

  // repeated .SolverParam solver = 2;
  int solver_size() const;
  void clear_solver();
  static const int kSolverFieldNumber = 2;
  const ::SolverParam& solver(int index) const;
  ::SolverParam* mutable_solver(int index);
  ::SolverParam* add_solver();
  ::google::protobuf::RepeatedPtrField< ::SolverParam >*
      mutable_solver();
  const ::google::protobuf::RepeatedPtrField< ::SolverParam >&
      solver() const;

  // repeated .PhaseParam phase = 3;
  int phase_size() const;
  void clear_phase();
  static const int kPhaseFieldNumber = 3;
  const ::PhaseParam& phase(int index) const;
  ::PhaseParam* mutable_phase(int index);
  ::PhaseParam* add_phase();
  ::google::protobuf::RepeatedPtrField< ::PhaseParam >*
      mutable_phase();
  const ::google::protobuf::RepeatedPtrField< ::PhaseParam >&
      phase() const;

  // @@protoc_insertion_point(class_scope:GraphParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NodeParam > node_;
  ::google::protobuf::RepeatedPtrField< ::SolverParam > solver_;
  ::google::protobuf::RepeatedPtrField< ::PhaseParam > phase_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorData

// repeated float weight = 1;
inline int TensorData::weight_size() const {
  return weight_.size();
}
inline void TensorData::clear_weight() {
  weight_.Clear();
}
inline float TensorData::weight(int index) const {
  // @@protoc_insertion_point(field_get:TensorData.weight)
  return weight_.Get(index);
}
inline void TensorData::set_weight(int index, float value) {
  weight_.Set(index, value);
  // @@protoc_insertion_point(field_set:TensorData.weight)
}
inline void TensorData::add_weight(float value) {
  weight_.Add(value);
  // @@protoc_insertion_point(field_add:TensorData.weight)
}
inline const ::google::protobuf::RepeatedField< float >&
TensorData::weight() const {
  // @@protoc_insertion_point(field_list:TensorData.weight)
  return weight_;
}
inline ::google::protobuf::RepeatedField< float >*
TensorData::mutable_weight() {
  // @@protoc_insertion_point(field_mutable_list:TensorData.weight)
  return &weight_;
}

// -------------------------------------------------------------------

// TensorParam

// .TensorParam.TensorType type = 1;
inline void TensorParam::clear_type() {
  type_ = 0;
}
inline ::TensorParam_TensorType TensorParam::type() const {
  // @@protoc_insertion_point(field_get:TensorParam.type)
  return static_cast< ::TensorParam_TensorType >(type_);
}
inline void TensorParam::set_type(::TensorParam_TensorType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:TensorParam.type)
}

// repeated int32 dims = 2;
inline int TensorParam::dims_size() const {
  return dims_.size();
}
inline void TensorParam::clear_dims() {
  dims_.Clear();
}
inline ::google::protobuf::int32 TensorParam::dims(int index) const {
  // @@protoc_insertion_point(field_get:TensorParam.dims)
  return dims_.Get(index);
}
inline void TensorParam::set_dims(int index, ::google::protobuf::int32 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:TensorParam.dims)
}
inline void TensorParam::add_dims(::google::protobuf::int32 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:TensorParam.dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TensorParam::dims() const {
  // @@protoc_insertion_point(field_list:TensorParam.dims)
  return dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TensorParam::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:TensorParam.dims)
  return &dims_;
}

// -------------------------------------------------------------------

// PhaseplexerParam

// repeated string phase = 1;
inline int PhaseplexerParam::phase_size() const {
  return phase_.size();
}
inline void PhaseplexerParam::clear_phase() {
  phase_.Clear();
}
inline const ::std::string& PhaseplexerParam::phase(int index) const {
  // @@protoc_insertion_point(field_get:PhaseplexerParam.phase)
  return phase_.Get(index);
}
inline ::std::string* PhaseplexerParam::mutable_phase(int index) {
  // @@protoc_insertion_point(field_mutable:PhaseplexerParam.phase)
  return phase_.Mutable(index);
}
inline void PhaseplexerParam::set_phase(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PhaseplexerParam.phase)
  phase_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void PhaseplexerParam::set_phase(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:PhaseplexerParam.phase)
  phase_.Mutable(index)->assign(std::move(value));
}
#endif
inline void PhaseplexerParam::set_phase(int index, const char* value) {
  phase_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PhaseplexerParam.phase)
}
inline void PhaseplexerParam::set_phase(int index, const char* value, size_t size) {
  phase_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PhaseplexerParam.phase)
}
inline ::std::string* PhaseplexerParam::add_phase() {
  // @@protoc_insertion_point(field_add_mutable:PhaseplexerParam.phase)
  return phase_.Add();
}
inline void PhaseplexerParam::add_phase(const ::std::string& value) {
  phase_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PhaseplexerParam.phase)
}
#if LANG_CXX11
inline void PhaseplexerParam::add_phase(::std::string&& value) {
  phase_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:PhaseplexerParam.phase)
}
#endif
inline void PhaseplexerParam::add_phase(const char* value) {
  phase_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PhaseplexerParam.phase)
}
inline void PhaseplexerParam::add_phase(const char* value, size_t size) {
  phase_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PhaseplexerParam.phase)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PhaseplexerParam::phase() const {
  // @@protoc_insertion_point(field_list:PhaseplexerParam.phase)
  return phase_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PhaseplexerParam::mutable_phase() {
  // @@protoc_insertion_point(field_mutable_list:PhaseplexerParam.phase)
  return &phase_;
}

// -------------------------------------------------------------------

// AccumulatorParam

// .AccumulatorParam.ResetTime reset_time = 1;
inline void AccumulatorParam::clear_reset_time() {
  reset_time_ = 0;
}
inline ::AccumulatorParam_ResetTime AccumulatorParam::reset_time() const {
  // @@protoc_insertion_point(field_get:AccumulatorParam.reset_time)
  return static_cast< ::AccumulatorParam_ResetTime >(reset_time_);
}
inline void AccumulatorParam::set_reset_time(::AccumulatorParam_ResetTime value) {
  
  reset_time_ = value;
  // @@protoc_insertion_point(field_set:AccumulatorParam.reset_time)
}

// -------------------------------------------------------------------

// PrintParam

// int32 num_inputs = 1;
inline void PrintParam::clear_num_inputs() {
  num_inputs_ = 0;
}
inline ::google::protobuf::int32 PrintParam::num_inputs() const {
  // @@protoc_insertion_point(field_get:PrintParam.num_inputs)
  return num_inputs_;
}
inline void PrintParam::set_num_inputs(::google::protobuf::int32 value) {
  
  num_inputs_ = value;
  // @@protoc_insertion_point(field_set:PrintParam.num_inputs)
}

// string message = 2;
inline void PrintParam::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PrintParam::message() const {
  // @@protoc_insertion_point(field_get:PrintParam.message)
  return message_.GetNoArena();
}
inline void PrintParam::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PrintParam.message)
}
#if LANG_CXX11
inline void PrintParam::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PrintParam.message)
}
#endif
inline void PrintParam::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PrintParam.message)
}
inline void PrintParam::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PrintParam.message)
}
inline ::std::string* PrintParam::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:PrintParam.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PrintParam::release_message() {
  // @@protoc_insertion_point(field_release:PrintParam.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PrintParam::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:PrintParam.message)
}

// .PrintParam.PrintTime print_time = 3;
inline void PrintParam::clear_print_time() {
  print_time_ = 0;
}
inline ::PrintParam_PrintTime PrintParam::print_time() const {
  // @@protoc_insertion_point(field_get:PrintParam.print_time)
  return static_cast< ::PrintParam_PrintTime >(print_time_);
}
inline void PrintParam::set_print_time(::PrintParam_PrintTime value) {
  
  print_time_ = value;
  // @@protoc_insertion_point(field_set:PrintParam.print_time)
}

// .PrintParam.PrintType print_type = 4;
inline void PrintParam::clear_print_type() {
  print_type_ = 0;
}
inline ::PrintParam_PrintType PrintParam::print_type() const {
  // @@protoc_insertion_point(field_get:PrintParam.print_type)
  return static_cast< ::PrintParam_PrintType >(print_type_);
}
inline void PrintParam::set_print_type(::PrintParam_PrintType value) {
  
  print_type_ = value;
  // @@protoc_insertion_point(field_set:PrintParam.print_type)
}

// -------------------------------------------------------------------

// AddParam

// float alpha = 1;
inline void AddParam::clear_alpha() {
  alpha_ = 0;
}
inline float AddParam::alpha() const {
  // @@protoc_insertion_point(field_get:AddParam.alpha)
  return alpha_;
}
inline void AddParam::set_alpha(float value) {
  
  alpha_ = value;
  // @@protoc_insertion_point(field_set:AddParam.alpha)
}

// float beta = 2;
inline void AddParam::clear_beta() {
  beta_ = 0;
}
inline float AddParam::beta() const {
  // @@protoc_insertion_point(field_get:AddParam.beta)
  return beta_;
}
inline void AddParam::set_beta(float value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:AddParam.beta)
}

// -------------------------------------------------------------------

// DisplayParam

// int32 delay_msec = 1;
inline void DisplayParam::clear_delay_msec() {
  delay_msec_ = 0;
}
inline ::google::protobuf::int32 DisplayParam::delay_msec() const {
  // @@protoc_insertion_point(field_get:DisplayParam.delay_msec)
  return delay_msec_;
}
inline void DisplayParam::set_delay_msec(::google::protobuf::int32 value) {
  
  delay_msec_ = value;
  // @@protoc_insertion_point(field_set:DisplayParam.delay_msec)
}

// -------------------------------------------------------------------

// EqualParam

// -------------------------------------------------------------------

// BiasAddParam

// -------------------------------------------------------------------

// PoolingParam

// int32 window_h = 1;
inline void PoolingParam::clear_window_h() {
  window_h_ = 0;
}
inline ::google::protobuf::int32 PoolingParam::window_h() const {
  // @@protoc_insertion_point(field_get:PoolingParam.window_h)
  return window_h_;
}
inline void PoolingParam::set_window_h(::google::protobuf::int32 value) {
  
  window_h_ = value;
  // @@protoc_insertion_point(field_set:PoolingParam.window_h)
}

// int32 window_w = 2;
inline void PoolingParam::clear_window_w() {
  window_w_ = 0;
}
inline ::google::protobuf::int32 PoolingParam::window_w() const {
  // @@protoc_insertion_point(field_get:PoolingParam.window_w)
  return window_w_;
}
inline void PoolingParam::set_window_w(::google::protobuf::int32 value) {
  
  window_w_ = value;
  // @@protoc_insertion_point(field_set:PoolingParam.window_w)
}

// int32 h_pad = 3;
inline void PoolingParam::clear_h_pad() {
  h_pad_ = 0;
}
inline ::google::protobuf::int32 PoolingParam::h_pad() const {
  // @@protoc_insertion_point(field_get:PoolingParam.h_pad)
  return h_pad_;
}
inline void PoolingParam::set_h_pad(::google::protobuf::int32 value) {
  
  h_pad_ = value;
  // @@protoc_insertion_point(field_set:PoolingParam.h_pad)
}

// int32 v_pad = 4;
inline void PoolingParam::clear_v_pad() {
  v_pad_ = 0;
}
inline ::google::protobuf::int32 PoolingParam::v_pad() const {
  // @@protoc_insertion_point(field_get:PoolingParam.v_pad)
  return v_pad_;
}
inline void PoolingParam::set_v_pad(::google::protobuf::int32 value) {
  
  v_pad_ = value;
  // @@protoc_insertion_point(field_set:PoolingParam.v_pad)
}

// int32 h_stride = 5;
inline void PoolingParam::clear_h_stride() {
  h_stride_ = 0;
}
inline ::google::protobuf::int32 PoolingParam::h_stride() const {
  // @@protoc_insertion_point(field_get:PoolingParam.h_stride)
  return h_stride_;
}
inline void PoolingParam::set_h_stride(::google::protobuf::int32 value) {
  
  h_stride_ = value;
  // @@protoc_insertion_point(field_set:PoolingParam.h_stride)
}

// int32 v_stride = 6;
inline void PoolingParam::clear_v_stride() {
  v_stride_ = 0;
}
inline ::google::protobuf::int32 PoolingParam::v_stride() const {
  // @@protoc_insertion_point(field_get:PoolingParam.v_stride)
  return v_stride_;
}
inline void PoolingParam::set_v_stride(::google::protobuf::int32 value) {
  
  v_stride_ = value;
  // @@protoc_insertion_point(field_set:PoolingParam.v_stride)
}

// -------------------------------------------------------------------

// TransposedConv2dParam

// .TensorParam tensor_param = 1;
inline bool TransposedConv2dParam::has_tensor_param() const {
  return this != internal_default_instance() && tensor_param_ != NULL;
}
inline void TransposedConv2dParam::clear_tensor_param() {
  if (GetArenaNoVirtual() == NULL && tensor_param_ != NULL) delete tensor_param_;
  tensor_param_ = NULL;
}
inline const ::TensorParam& TransposedConv2dParam::tensor_param() const {
  // @@protoc_insertion_point(field_get:TransposedConv2dParam.tensor_param)
  return tensor_param_ != NULL ? *tensor_param_
                         : *::TensorParam::internal_default_instance();
}
inline ::TensorParam* TransposedConv2dParam::mutable_tensor_param() {
  
  if (tensor_param_ == NULL) {
    tensor_param_ = new ::TensorParam;
  }
  // @@protoc_insertion_point(field_mutable:TransposedConv2dParam.tensor_param)
  return tensor_param_;
}
inline ::TensorParam* TransposedConv2dParam::release_tensor_param() {
  // @@protoc_insertion_point(field_release:TransposedConv2dParam.tensor_param)
  
  ::TensorParam* temp = tensor_param_;
  tensor_param_ = NULL;
  return temp;
}
inline void TransposedConv2dParam::set_allocated_tensor_param(::TensorParam* tensor_param) {
  delete tensor_param_;
  tensor_param_ = tensor_param;
  if (tensor_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:TransposedConv2dParam.tensor_param)
}

// int32 pad_h = 2;
inline void TransposedConv2dParam::clear_pad_h() {
  pad_h_ = 0;
}
inline ::google::protobuf::int32 TransposedConv2dParam::pad_h() const {
  // @@protoc_insertion_point(field_get:TransposedConv2dParam.pad_h)
  return pad_h_;
}
inline void TransposedConv2dParam::set_pad_h(::google::protobuf::int32 value) {
  
  pad_h_ = value;
  // @@protoc_insertion_point(field_set:TransposedConv2dParam.pad_h)
}

// int32 pad_w = 3;
inline void TransposedConv2dParam::clear_pad_w() {
  pad_w_ = 0;
}
inline ::google::protobuf::int32 TransposedConv2dParam::pad_w() const {
  // @@protoc_insertion_point(field_get:TransposedConv2dParam.pad_w)
  return pad_w_;
}
inline void TransposedConv2dParam::set_pad_w(::google::protobuf::int32 value) {
  
  pad_w_ = value;
  // @@protoc_insertion_point(field_set:TransposedConv2dParam.pad_w)
}

// int32 u = 4;
inline void TransposedConv2dParam::clear_u() {
  u_ = 0;
}
inline ::google::protobuf::int32 TransposedConv2dParam::u() const {
  // @@protoc_insertion_point(field_get:TransposedConv2dParam.u)
  return u_;
}
inline void TransposedConv2dParam::set_u(::google::protobuf::int32 value) {
  
  u_ = value;
  // @@protoc_insertion_point(field_set:TransposedConv2dParam.u)
}

// int32 v = 5;
inline void TransposedConv2dParam::clear_v() {
  v_ = 0;
}
inline ::google::protobuf::int32 TransposedConv2dParam::v() const {
  // @@protoc_insertion_point(field_get:TransposedConv2dParam.v)
  return v_;
}
inline void TransposedConv2dParam::set_v(::google::protobuf::int32 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:TransposedConv2dParam.v)
}

// int32 dilation_h = 6;
inline void TransposedConv2dParam::clear_dilation_h() {
  dilation_h_ = 0;
}
inline ::google::protobuf::int32 TransposedConv2dParam::dilation_h() const {
  // @@protoc_insertion_point(field_get:TransposedConv2dParam.dilation_h)
  return dilation_h_;
}
inline void TransposedConv2dParam::set_dilation_h(::google::protobuf::int32 value) {
  
  dilation_h_ = value;
  // @@protoc_insertion_point(field_set:TransposedConv2dParam.dilation_h)
}

// int32 dilation_w = 7;
inline void TransposedConv2dParam::clear_dilation_w() {
  dilation_w_ = 0;
}
inline ::google::protobuf::int32 TransposedConv2dParam::dilation_w() const {
  // @@protoc_insertion_point(field_get:TransposedConv2dParam.dilation_w)
  return dilation_w_;
}
inline void TransposedConv2dParam::set_dilation_w(::google::protobuf::int32 value) {
  
  dilation_w_ = value;
  // @@protoc_insertion_point(field_set:TransposedConv2dParam.dilation_w)
}

// -------------------------------------------------------------------

// Conv2dParam

// int32 pad_h = 1;
inline void Conv2dParam::clear_pad_h() {
  pad_h_ = 0;
}
inline ::google::protobuf::int32 Conv2dParam::pad_h() const {
  // @@protoc_insertion_point(field_get:Conv2dParam.pad_h)
  return pad_h_;
}
inline void Conv2dParam::set_pad_h(::google::protobuf::int32 value) {
  
  pad_h_ = value;
  // @@protoc_insertion_point(field_set:Conv2dParam.pad_h)
}

// int32 pad_w = 2;
inline void Conv2dParam::clear_pad_w() {
  pad_w_ = 0;
}
inline ::google::protobuf::int32 Conv2dParam::pad_w() const {
  // @@protoc_insertion_point(field_get:Conv2dParam.pad_w)
  return pad_w_;
}
inline void Conv2dParam::set_pad_w(::google::protobuf::int32 value) {
  
  pad_w_ = value;
  // @@protoc_insertion_point(field_set:Conv2dParam.pad_w)
}

// int32 u = 3;
inline void Conv2dParam::clear_u() {
  u_ = 0;
}
inline ::google::protobuf::int32 Conv2dParam::u() const {
  // @@protoc_insertion_point(field_get:Conv2dParam.u)
  return u_;
}
inline void Conv2dParam::set_u(::google::protobuf::int32 value) {
  
  u_ = value;
  // @@protoc_insertion_point(field_set:Conv2dParam.u)
}

// int32 v = 4;
inline void Conv2dParam::clear_v() {
  v_ = 0;
}
inline ::google::protobuf::int32 Conv2dParam::v() const {
  // @@protoc_insertion_point(field_get:Conv2dParam.v)
  return v_;
}
inline void Conv2dParam::set_v(::google::protobuf::int32 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:Conv2dParam.v)
}

// int32 dilation_h = 5;
inline void Conv2dParam::clear_dilation_h() {
  dilation_h_ = 0;
}
inline ::google::protobuf::int32 Conv2dParam::dilation_h() const {
  // @@protoc_insertion_point(field_get:Conv2dParam.dilation_h)
  return dilation_h_;
}
inline void Conv2dParam::set_dilation_h(::google::protobuf::int32 value) {
  
  dilation_h_ = value;
  // @@protoc_insertion_point(field_set:Conv2dParam.dilation_h)
}

// int32 dilation_w = 6;
inline void Conv2dParam::clear_dilation_w() {
  dilation_w_ = 0;
}
inline ::google::protobuf::int32 Conv2dParam::dilation_w() const {
  // @@protoc_insertion_point(field_get:Conv2dParam.dilation_w)
  return dilation_w_;
}
inline void Conv2dParam::set_dilation_w(::google::protobuf::int32 value) {
  
  dilation_w_ = value;
  // @@protoc_insertion_point(field_set:Conv2dParam.dilation_w)
}

// -------------------------------------------------------------------

// DropoutParam

// float dropout = 1;
inline void DropoutParam::clear_dropout() {
  dropout_ = 0;
}
inline float DropoutParam::dropout() const {
  // @@protoc_insertion_point(field_get:DropoutParam.dropout)
  return dropout_;
}
inline void DropoutParam::set_dropout(float value) {
  
  dropout_ = value;
  // @@protoc_insertion_point(field_set:DropoutParam.dropout)
}

// -------------------------------------------------------------------

// MatMulParam

// float alpha = 1;
inline void MatMulParam::clear_alpha() {
  alpha_ = 0;
}
inline float MatMulParam::alpha() const {
  // @@protoc_insertion_point(field_get:MatMulParam.alpha)
  return alpha_;
}
inline void MatMulParam::set_alpha(float value) {
  
  alpha_ = value;
  // @@protoc_insertion_point(field_set:MatMulParam.alpha)
}

// float beta = 2;
inline void MatMulParam::clear_beta() {
  beta_ = 0;
}
inline float MatMulParam::beta() const {
  // @@protoc_insertion_point(field_get:MatMulParam.beta)
  return beta_;
}
inline void MatMulParam::set_beta(float value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:MatMulParam.beta)
}

// -------------------------------------------------------------------

// LeakyReluParam

// float negative_slope = 1;
inline void LeakyReluParam::clear_negative_slope() {
  negative_slope_ = 0;
}
inline float LeakyReluParam::negative_slope() const {
  // @@protoc_insertion_point(field_get:LeakyReluParam.negative_slope)
  return negative_slope_;
}
inline void LeakyReluParam::set_negative_slope(float value) {
  
  negative_slope_ = value;
  // @@protoc_insertion_point(field_set:LeakyReluParam.negative_slope)
}

// -------------------------------------------------------------------

// ReduceParam

// .ReduceParam.ReduceOp reduce_op = 1;
inline void ReduceParam::clear_reduce_op() {
  reduce_op_ = 0;
}
inline ::ReduceParam_ReduceOp ReduceParam::reduce_op() const {
  // @@protoc_insertion_point(field_get:ReduceParam.reduce_op)
  return static_cast< ::ReduceParam_ReduceOp >(reduce_op_);
}
inline void ReduceParam::set_reduce_op(::ReduceParam_ReduceOp value) {
  
  reduce_op_ = value;
  // @@protoc_insertion_point(field_set:ReduceParam.reduce_op)
}

// int32 reduce_dim = 2;
inline void ReduceParam::clear_reduce_dim() {
  reduce_dim_ = 0;
}
inline ::google::protobuf::int32 ReduceParam::reduce_dim() const {
  // @@protoc_insertion_point(field_get:ReduceParam.reduce_dim)
  return reduce_dim_;
}
inline void ReduceParam::set_reduce_dim(::google::protobuf::int32 value) {
  
  reduce_dim_ = value;
  // @@protoc_insertion_point(field_set:ReduceParam.reduce_dim)
}

// -------------------------------------------------------------------

// SnapshotParam

// int32 snapshot_interval = 1;
inline void SnapshotParam::clear_snapshot_interval() {
  snapshot_interval_ = 0;
}
inline ::google::protobuf::int32 SnapshotParam::snapshot_interval() const {
  // @@protoc_insertion_point(field_get:SnapshotParam.snapshot_interval)
  return snapshot_interval_;
}
inline void SnapshotParam::set_snapshot_interval(::google::protobuf::int32 value) {
  
  snapshot_interval_ = value;
  // @@protoc_insertion_point(field_set:SnapshotParam.snapshot_interval)
}

// string snapshot_prefix = 2;
inline void SnapshotParam::clear_snapshot_prefix() {
  snapshot_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SnapshotParam::snapshot_prefix() const {
  // @@protoc_insertion_point(field_get:SnapshotParam.snapshot_prefix)
  return snapshot_prefix_.GetNoArena();
}
inline void SnapshotParam::set_snapshot_prefix(const ::std::string& value) {
  
  snapshot_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SnapshotParam.snapshot_prefix)
}
#if LANG_CXX11
inline void SnapshotParam::set_snapshot_prefix(::std::string&& value) {
  
  snapshot_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SnapshotParam.snapshot_prefix)
}
#endif
inline void SnapshotParam::set_snapshot_prefix(const char* value) {
  
  snapshot_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SnapshotParam.snapshot_prefix)
}
inline void SnapshotParam::set_snapshot_prefix(const char* value, size_t size) {
  
  snapshot_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SnapshotParam.snapshot_prefix)
}
inline ::std::string* SnapshotParam::mutable_snapshot_prefix() {
  
  // @@protoc_insertion_point(field_mutable:SnapshotParam.snapshot_prefix)
  return snapshot_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnapshotParam::release_snapshot_prefix() {
  // @@protoc_insertion_point(field_release:SnapshotParam.snapshot_prefix)
  
  return snapshot_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnapshotParam::set_allocated_snapshot_prefix(::std::string* snapshot_prefix) {
  if (snapshot_prefix != NULL) {
    
  } else {
    
  }
  snapshot_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snapshot_prefix);
  // @@protoc_insertion_point(field_set_allocated:SnapshotParam.snapshot_prefix)
}

// int32 per_image_height = 3;
inline void SnapshotParam::clear_per_image_height() {
  per_image_height_ = 0;
}
inline ::google::protobuf::int32 SnapshotParam::per_image_height() const {
  // @@protoc_insertion_point(field_get:SnapshotParam.per_image_height)
  return per_image_height_;
}
inline void SnapshotParam::set_per_image_height(::google::protobuf::int32 value) {
  
  per_image_height_ = value;
  // @@protoc_insertion_point(field_set:SnapshotParam.per_image_height)
}

// int32 per_image_width = 4;
inline void SnapshotParam::clear_per_image_width() {
  per_image_width_ = 0;
}
inline ::google::protobuf::int32 SnapshotParam::per_image_width() const {
  // @@protoc_insertion_point(field_get:SnapshotParam.per_image_width)
  return per_image_width_;
}
inline void SnapshotParam::set_per_image_width(::google::protobuf::int32 value) {
  
  per_image_width_ = value;
  // @@protoc_insertion_point(field_set:SnapshotParam.per_image_width)
}

// -------------------------------------------------------------------

// PlaceHolderParam

// .TensorParam tensor_param = 1;
inline bool PlaceHolderParam::has_tensor_param() const {
  return this != internal_default_instance() && tensor_param_ != NULL;
}
inline void PlaceHolderParam::clear_tensor_param() {
  if (GetArenaNoVirtual() == NULL && tensor_param_ != NULL) delete tensor_param_;
  tensor_param_ = NULL;
}
inline const ::TensorParam& PlaceHolderParam::tensor_param() const {
  // @@protoc_insertion_point(field_get:PlaceHolderParam.tensor_param)
  return tensor_param_ != NULL ? *tensor_param_
                         : *::TensorParam::internal_default_instance();
}
inline ::TensorParam* PlaceHolderParam::mutable_tensor_param() {
  
  if (tensor_param_ == NULL) {
    tensor_param_ = new ::TensorParam;
  }
  // @@protoc_insertion_point(field_mutable:PlaceHolderParam.tensor_param)
  return tensor_param_;
}
inline ::TensorParam* PlaceHolderParam::release_tensor_param() {
  // @@protoc_insertion_point(field_release:PlaceHolderParam.tensor_param)
  
  ::TensorParam* temp = tensor_param_;
  tensor_param_ = NULL;
  return temp;
}
inline void PlaceHolderParam::set_allocated_tensor_param(::TensorParam* tensor_param) {
  delete tensor_param_;
  tensor_param_ = tensor_param;
  if (tensor_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PlaceHolderParam.tensor_param)
}

// -------------------------------------------------------------------

// VariableParam

// .InitParam init_param = 1;
inline bool VariableParam::has_init_param() const {
  return this != internal_default_instance() && init_param_ != NULL;
}
inline void VariableParam::clear_init_param() {
  if (GetArenaNoVirtual() == NULL && init_param_ != NULL) delete init_param_;
  init_param_ = NULL;
}
inline const ::InitParam& VariableParam::init_param() const {
  // @@protoc_insertion_point(field_get:VariableParam.init_param)
  return init_param_ != NULL ? *init_param_
                         : *::InitParam::internal_default_instance();
}
inline ::InitParam* VariableParam::mutable_init_param() {
  
  if (init_param_ == NULL) {
    init_param_ = new ::InitParam;
  }
  // @@protoc_insertion_point(field_mutable:VariableParam.init_param)
  return init_param_;
}
inline ::InitParam* VariableParam::release_init_param() {
  // @@protoc_insertion_point(field_release:VariableParam.init_param)
  
  ::InitParam* temp = init_param_;
  init_param_ = NULL;
  return temp;
}
inline void VariableParam::set_allocated_init_param(::InitParam* init_param) {
  delete init_param_;
  init_param_ = init_param;
  if (init_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:VariableParam.init_param)
}

// string solver_name = 2;
inline void VariableParam::clear_solver_name() {
  solver_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VariableParam::solver_name() const {
  // @@protoc_insertion_point(field_get:VariableParam.solver_name)
  return solver_name_.GetNoArena();
}
inline void VariableParam::set_solver_name(const ::std::string& value) {
  
  solver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:VariableParam.solver_name)
}
#if LANG_CXX11
inline void VariableParam::set_solver_name(::std::string&& value) {
  
  solver_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:VariableParam.solver_name)
}
#endif
inline void VariableParam::set_solver_name(const char* value) {
  
  solver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:VariableParam.solver_name)
}
inline void VariableParam::set_solver_name(const char* value, size_t size) {
  
  solver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:VariableParam.solver_name)
}
inline ::std::string* VariableParam::mutable_solver_name() {
  
  // @@protoc_insertion_point(field_mutable:VariableParam.solver_name)
  return solver_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VariableParam::release_solver_name() {
  // @@protoc_insertion_point(field_release:VariableParam.solver_name)
  
  return solver_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VariableParam::set_allocated_solver_name(::std::string* solver_name) {
  if (solver_name != NULL) {
    
  } else {
    
  }
  solver_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), solver_name);
  // @@protoc_insertion_point(field_set_allocated:VariableParam.solver_name)
}

// .TensorData weights = 3;
inline bool VariableParam::has_weights() const {
  return this != internal_default_instance() && weights_ != NULL;
}
inline void VariableParam::clear_weights() {
  if (GetArenaNoVirtual() == NULL && weights_ != NULL) delete weights_;
  weights_ = NULL;
}
inline const ::TensorData& VariableParam::weights() const {
  // @@protoc_insertion_point(field_get:VariableParam.weights)
  return weights_ != NULL ? *weights_
                         : *::TensorData::internal_default_instance();
}
inline ::TensorData* VariableParam::mutable_weights() {
  
  if (weights_ == NULL) {
    weights_ = new ::TensorData;
  }
  // @@protoc_insertion_point(field_mutable:VariableParam.weights)
  return weights_;
}
inline ::TensorData* VariableParam::release_weights() {
  // @@protoc_insertion_point(field_release:VariableParam.weights)
  
  ::TensorData* temp = weights_;
  weights_ = NULL;
  return temp;
}
inline void VariableParam::set_allocated_weights(::TensorData* weights) {
  delete weights_;
  weights_ = weights;
  if (weights) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:VariableParam.weights)
}

// -------------------------------------------------------------------

// LossParam

// .SoftmaxLossParam softmax_loss_param = 1;
inline bool LossParam::has_softmax_loss_param() const {
  return this != internal_default_instance() && softmax_loss_param_ != NULL;
}
inline void LossParam::clear_softmax_loss_param() {
  if (GetArenaNoVirtual() == NULL && softmax_loss_param_ != NULL) delete softmax_loss_param_;
  softmax_loss_param_ = NULL;
}
inline const ::SoftmaxLossParam& LossParam::softmax_loss_param() const {
  // @@protoc_insertion_point(field_get:LossParam.softmax_loss_param)
  return softmax_loss_param_ != NULL ? *softmax_loss_param_
                         : *::SoftmaxLossParam::internal_default_instance();
}
inline ::SoftmaxLossParam* LossParam::mutable_softmax_loss_param() {
  
  if (softmax_loss_param_ == NULL) {
    softmax_loss_param_ = new ::SoftmaxLossParam;
  }
  // @@protoc_insertion_point(field_mutable:LossParam.softmax_loss_param)
  return softmax_loss_param_;
}
inline ::SoftmaxLossParam* LossParam::release_softmax_loss_param() {
  // @@protoc_insertion_point(field_release:LossParam.softmax_loss_param)
  
  ::SoftmaxLossParam* temp = softmax_loss_param_;
  softmax_loss_param_ = NULL;
  return temp;
}
inline void LossParam::set_allocated_softmax_loss_param(::SoftmaxLossParam* softmax_loss_param) {
  delete softmax_loss_param_;
  softmax_loss_param_ = softmax_loss_param;
  if (softmax_loss_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LossParam.softmax_loss_param)
}

// .EuclideanLossParam euclidean_loss_param = 2;
inline bool LossParam::has_euclidean_loss_param() const {
  return this != internal_default_instance() && euclidean_loss_param_ != NULL;
}
inline void LossParam::clear_euclidean_loss_param() {
  if (GetArenaNoVirtual() == NULL && euclidean_loss_param_ != NULL) delete euclidean_loss_param_;
  euclidean_loss_param_ = NULL;
}
inline const ::EuclideanLossParam& LossParam::euclidean_loss_param() const {
  // @@protoc_insertion_point(field_get:LossParam.euclidean_loss_param)
  return euclidean_loss_param_ != NULL ? *euclidean_loss_param_
                         : *::EuclideanLossParam::internal_default_instance();
}
inline ::EuclideanLossParam* LossParam::mutable_euclidean_loss_param() {
  
  if (euclidean_loss_param_ == NULL) {
    euclidean_loss_param_ = new ::EuclideanLossParam;
  }
  // @@protoc_insertion_point(field_mutable:LossParam.euclidean_loss_param)
  return euclidean_loss_param_;
}
inline ::EuclideanLossParam* LossParam::release_euclidean_loss_param() {
  // @@protoc_insertion_point(field_release:LossParam.euclidean_loss_param)
  
  ::EuclideanLossParam* temp = euclidean_loss_param_;
  euclidean_loss_param_ = NULL;
  return temp;
}
inline void LossParam::set_allocated_euclidean_loss_param(::EuclideanLossParam* euclidean_loss_param) {
  delete euclidean_loss_param_;
  euclidean_loss_param_ = euclidean_loss_param;
  if (euclidean_loss_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LossParam.euclidean_loss_param)
}

// -------------------------------------------------------------------

// DataGeneratorParam

// int32 num_samples = 1;
inline void DataGeneratorParam::clear_num_samples() {
  num_samples_ = 0;
}
inline ::google::protobuf::int32 DataGeneratorParam::num_samples() const {
  // @@protoc_insertion_point(field_get:DataGeneratorParam.num_samples)
  return num_samples_;
}
inline void DataGeneratorParam::set_num_samples(::google::protobuf::int32 value) {
  
  num_samples_ = value;
  // @@protoc_insertion_point(field_set:DataGeneratorParam.num_samples)
}

// -------------------------------------------------------------------

// ActivationParam

// .ActivationParam.Type type = 1;
inline void ActivationParam::clear_type() {
  type_ = 0;
}
inline ::ActivationParam_Type ActivationParam::type() const {
  // @@protoc_insertion_point(field_get:ActivationParam.type)
  return static_cast< ::ActivationParam_Type >(type_);
}
inline void ActivationParam::set_type(::ActivationParam_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ActivationParam.type)
}

// float coef = 2;
inline void ActivationParam::clear_coef() {
  coef_ = 0;
}
inline float ActivationParam::coef() const {
  // @@protoc_insertion_point(field_get:ActivationParam.coef)
  return coef_;
}
inline void ActivationParam::set_coef(float value) {
  
  coef_ = value;
  // @@protoc_insertion_point(field_set:ActivationParam.coef)
}

// -------------------------------------------------------------------

// ImageReaderParam

// string file_name = 1;
inline void ImageReaderParam::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ImageReaderParam::file_name() const {
  // @@protoc_insertion_point(field_get:ImageReaderParam.file_name)
  return file_name_.GetNoArena();
}
inline void ImageReaderParam::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ImageReaderParam.file_name)
}
#if LANG_CXX11
inline void ImageReaderParam::set_file_name(::std::string&& value) {
  
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ImageReaderParam.file_name)
}
#endif
inline void ImageReaderParam::set_file_name(const char* value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ImageReaderParam.file_name)
}
inline void ImageReaderParam::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ImageReaderParam.file_name)
}
inline ::std::string* ImageReaderParam::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:ImageReaderParam.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImageReaderParam::release_file_name() {
  // @@protoc_insertion_point(field_release:ImageReaderParam.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageReaderParam::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:ImageReaderParam.file_name)
}

// .ImageReaderParam.Type type = 2;
inline void ImageReaderParam::clear_type() {
  type_ = 0;
}
inline ::ImageReaderParam_Type ImageReaderParam::type() const {
  // @@protoc_insertion_point(field_get:ImageReaderParam.type)
  return static_cast< ::ImageReaderParam_Type >(type_);
}
inline void ImageReaderParam::set_type(::ImageReaderParam_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ImageReaderParam.type)
}

// -------------------------------------------------------------------

// GeneratorParam

// .MnistParam mnist_param = 1;
inline bool GeneratorParam::has_mnist_param() const {
  return this != internal_default_instance() && mnist_param_ != NULL;
}
inline void GeneratorParam::clear_mnist_param() {
  if (GetArenaNoVirtual() == NULL && mnist_param_ != NULL) delete mnist_param_;
  mnist_param_ = NULL;
}
inline const ::MnistParam& GeneratorParam::mnist_param() const {
  // @@protoc_insertion_point(field_get:GeneratorParam.mnist_param)
  return mnist_param_ != NULL ? *mnist_param_
                         : *::MnistParam::internal_default_instance();
}
inline ::MnistParam* GeneratorParam::mutable_mnist_param() {
  
  if (mnist_param_ == NULL) {
    mnist_param_ = new ::MnistParam;
  }
  // @@protoc_insertion_point(field_mutable:GeneratorParam.mnist_param)
  return mnist_param_;
}
inline ::MnistParam* GeneratorParam::release_mnist_param() {
  // @@protoc_insertion_point(field_release:GeneratorParam.mnist_param)
  
  ::MnistParam* temp = mnist_param_;
  mnist_param_ = NULL;
  return temp;
}
inline void GeneratorParam::set_allocated_mnist_param(::MnistParam* mnist_param) {
  delete mnist_param_;
  mnist_param_ = mnist_param;
  if (mnist_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:GeneratorParam.mnist_param)
}

// .DataGeneratorParam data_generator_param = 2;
inline bool GeneratorParam::has_data_generator_param() const {
  return this != internal_default_instance() && data_generator_param_ != NULL;
}
inline void GeneratorParam::clear_data_generator_param() {
  if (GetArenaNoVirtual() == NULL && data_generator_param_ != NULL) delete data_generator_param_;
  data_generator_param_ = NULL;
}
inline const ::DataGeneratorParam& GeneratorParam::data_generator_param() const {
  // @@protoc_insertion_point(field_get:GeneratorParam.data_generator_param)
  return data_generator_param_ != NULL ? *data_generator_param_
                         : *::DataGeneratorParam::internal_default_instance();
}
inline ::DataGeneratorParam* GeneratorParam::mutable_data_generator_param() {
  
  if (data_generator_param_ == NULL) {
    data_generator_param_ = new ::DataGeneratorParam;
  }
  // @@protoc_insertion_point(field_mutable:GeneratorParam.data_generator_param)
  return data_generator_param_;
}
inline ::DataGeneratorParam* GeneratorParam::release_data_generator_param() {
  // @@protoc_insertion_point(field_release:GeneratorParam.data_generator_param)
  
  ::DataGeneratorParam* temp = data_generator_param_;
  data_generator_param_ = NULL;
  return temp;
}
inline void GeneratorParam::set_allocated_data_generator_param(::DataGeneratorParam* data_generator_param) {
  delete data_generator_param_;
  data_generator_param_ = data_generator_param;
  if (data_generator_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:GeneratorParam.data_generator_param)
}

// .ImageReaderParam image_reader_param = 3;
inline bool GeneratorParam::has_image_reader_param() const {
  return this != internal_default_instance() && image_reader_param_ != NULL;
}
inline void GeneratorParam::clear_image_reader_param() {
  if (GetArenaNoVirtual() == NULL && image_reader_param_ != NULL) delete image_reader_param_;
  image_reader_param_ = NULL;
}
inline const ::ImageReaderParam& GeneratorParam::image_reader_param() const {
  // @@protoc_insertion_point(field_get:GeneratorParam.image_reader_param)
  return image_reader_param_ != NULL ? *image_reader_param_
                         : *::ImageReaderParam::internal_default_instance();
}
inline ::ImageReaderParam* GeneratorParam::mutable_image_reader_param() {
  
  if (image_reader_param_ == NULL) {
    image_reader_param_ = new ::ImageReaderParam;
  }
  // @@protoc_insertion_point(field_mutable:GeneratorParam.image_reader_param)
  return image_reader_param_;
}
inline ::ImageReaderParam* GeneratorParam::release_image_reader_param() {
  // @@protoc_insertion_point(field_release:GeneratorParam.image_reader_param)
  
  ::ImageReaderParam* temp = image_reader_param_;
  image_reader_param_ = NULL;
  return temp;
}
inline void GeneratorParam::set_allocated_image_reader_param(::ImageReaderParam* image_reader_param) {
  delete image_reader_param_;
  image_reader_param_ = image_reader_param;
  if (image_reader_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:GeneratorParam.image_reader_param)
}

// -------------------------------------------------------------------

// MnistParam

// string folder_path = 1;
inline void MnistParam::clear_folder_path() {
  folder_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MnistParam::folder_path() const {
  // @@protoc_insertion_point(field_get:MnistParam.folder_path)
  return folder_path_.GetNoArena();
}
inline void MnistParam::set_folder_path(const ::std::string& value) {
  
  folder_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MnistParam.folder_path)
}
#if LANG_CXX11
inline void MnistParam::set_folder_path(::std::string&& value) {
  
  folder_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MnistParam.folder_path)
}
#endif
inline void MnistParam::set_folder_path(const char* value) {
  
  folder_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MnistParam.folder_path)
}
inline void MnistParam::set_folder_path(const char* value, size_t size) {
  
  folder_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MnistParam.folder_path)
}
inline ::std::string* MnistParam::mutable_folder_path() {
  
  // @@protoc_insertion_point(field_mutable:MnistParam.folder_path)
  return folder_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MnistParam::release_folder_path() {
  // @@protoc_insertion_point(field_release:MnistParam.folder_path)
  
  return folder_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MnistParam::set_allocated_folder_path(::std::string* folder_path) {
  if (folder_path != NULL) {
    
  } else {
    
  }
  folder_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), folder_path);
  // @@protoc_insertion_point(field_set_allocated:MnistParam.folder_path)
}

// .MnistParam.ReaderType type = 2;
inline void MnistParam::clear_type() {
  type_ = 0;
}
inline ::MnistParam_ReaderType MnistParam::type() const {
  // @@protoc_insertion_point(field_get:MnistParam.type)
  return static_cast< ::MnistParam_ReaderType >(type_);
}
inline void MnistParam::set_type(::MnistParam_ReaderType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:MnistParam.type)
}

// int32 batch_size = 3;
inline void MnistParam::clear_batch_size() {
  batch_size_ = 0;
}
inline ::google::protobuf::int32 MnistParam::batch_size() const {
  // @@protoc_insertion_point(field_get:MnistParam.batch_size)
  return batch_size_;
}
inline void MnistParam::set_batch_size(::google::protobuf::int32 value) {
  
  batch_size_ = value;
  // @@protoc_insertion_point(field_set:MnistParam.batch_size)
}

// -------------------------------------------------------------------

// CastFloatParam

// -------------------------------------------------------------------

// NodeParam

// string name = 1;
inline void NodeParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NodeParam::name() const {
  // @@protoc_insertion_point(field_get:NodeParam.name)
  return name_.GetNoArena();
}
inline void NodeParam::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeParam.name)
}
#if LANG_CXX11
inline void NodeParam::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeParam.name)
}
#endif
inline void NodeParam::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeParam.name)
}
inline void NodeParam::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeParam.name)
}
inline ::std::string* NodeParam::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NodeParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeParam::release_name() {
  // @@protoc_insertion_point(field_release:NodeParam.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NodeParam.name)
}

// repeated string input = 2;
inline int NodeParam::input_size() const {
  return input_.size();
}
inline void NodeParam::clear_input() {
  input_.Clear();
}
inline const ::std::string& NodeParam::input(int index) const {
  // @@protoc_insertion_point(field_get:NodeParam.input)
  return input_.Get(index);
}
inline ::std::string* NodeParam::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:NodeParam.input)
  return input_.Mutable(index);
}
inline void NodeParam::set_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NodeParam.input)
  input_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void NodeParam::set_input(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NodeParam.input)
  input_.Mutable(index)->assign(std::move(value));
}
#endif
inline void NodeParam::set_input(int index, const char* value) {
  input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NodeParam.input)
}
inline void NodeParam::set_input(int index, const char* value, size_t size) {
  input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NodeParam.input)
}
inline ::std::string* NodeParam::add_input() {
  // @@protoc_insertion_point(field_add_mutable:NodeParam.input)
  return input_.Add();
}
inline void NodeParam::add_input(const ::std::string& value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NodeParam.input)
}
#if LANG_CXX11
inline void NodeParam::add_input(::std::string&& value) {
  input_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:NodeParam.input)
}
#endif
inline void NodeParam::add_input(const char* value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NodeParam.input)
}
inline void NodeParam::add_input(const char* value, size_t size) {
  input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NodeParam.input)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeParam::input() const {
  // @@protoc_insertion_point(field_list:NodeParam.input)
  return input_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NodeParam::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:NodeParam.input)
  return &input_;
}

// repeated string output = 3;
inline int NodeParam::output_size() const {
  return output_.size();
}
inline void NodeParam::clear_output() {
  output_.Clear();
}
inline const ::std::string& NodeParam::output(int index) const {
  // @@protoc_insertion_point(field_get:NodeParam.output)
  return output_.Get(index);
}
inline ::std::string* NodeParam::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:NodeParam.output)
  return output_.Mutable(index);
}
inline void NodeParam::set_output(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NodeParam.output)
  output_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void NodeParam::set_output(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NodeParam.output)
  output_.Mutable(index)->assign(std::move(value));
}
#endif
inline void NodeParam::set_output(int index, const char* value) {
  output_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NodeParam.output)
}
inline void NodeParam::set_output(int index, const char* value, size_t size) {
  output_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NodeParam.output)
}
inline ::std::string* NodeParam::add_output() {
  // @@protoc_insertion_point(field_add_mutable:NodeParam.output)
  return output_.Add();
}
inline void NodeParam::add_output(const ::std::string& value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NodeParam.output)
}
#if LANG_CXX11
inline void NodeParam::add_output(::std::string&& value) {
  output_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:NodeParam.output)
}
#endif
inline void NodeParam::add_output(const char* value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NodeParam.output)
}
inline void NodeParam::add_output(const char* value, size_t size) {
  output_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NodeParam.output)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeParam::output() const {
  // @@protoc_insertion_point(field_list:NodeParam.output)
  return output_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NodeParam::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:NodeParam.output)
  return &output_;
}

// repeated string phase = 4;
inline int NodeParam::phase_size() const {
  return phase_.size();
}
inline void NodeParam::clear_phase() {
  phase_.Clear();
}
inline const ::std::string& NodeParam::phase(int index) const {
  // @@protoc_insertion_point(field_get:NodeParam.phase)
  return phase_.Get(index);
}
inline ::std::string* NodeParam::mutable_phase(int index) {
  // @@protoc_insertion_point(field_mutable:NodeParam.phase)
  return phase_.Mutable(index);
}
inline void NodeParam::set_phase(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NodeParam.phase)
  phase_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void NodeParam::set_phase(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NodeParam.phase)
  phase_.Mutable(index)->assign(std::move(value));
}
#endif
inline void NodeParam::set_phase(int index, const char* value) {
  phase_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NodeParam.phase)
}
inline void NodeParam::set_phase(int index, const char* value, size_t size) {
  phase_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NodeParam.phase)
}
inline ::std::string* NodeParam::add_phase() {
  // @@protoc_insertion_point(field_add_mutable:NodeParam.phase)
  return phase_.Add();
}
inline void NodeParam::add_phase(const ::std::string& value) {
  phase_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NodeParam.phase)
}
#if LANG_CXX11
inline void NodeParam::add_phase(::std::string&& value) {
  phase_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:NodeParam.phase)
}
#endif
inline void NodeParam::add_phase(const char* value) {
  phase_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NodeParam.phase)
}
inline void NodeParam::add_phase(const char* value, size_t size) {
  phase_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NodeParam.phase)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeParam::phase() const {
  // @@protoc_insertion_point(field_list:NodeParam.phase)
  return phase_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NodeParam::mutable_phase() {
  // @@protoc_insertion_point(field_mutable_list:NodeParam.phase)
  return &phase_;
}

// .LossParam loss_param = 50;
inline bool NodeParam::has_loss_param() const {
  return this != internal_default_instance() && loss_param_ != NULL;
}
inline void NodeParam::clear_loss_param() {
  if (GetArenaNoVirtual() == NULL && loss_param_ != NULL) delete loss_param_;
  loss_param_ = NULL;
}
inline const ::LossParam& NodeParam::loss_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.loss_param)
  return loss_param_ != NULL ? *loss_param_
                         : *::LossParam::internal_default_instance();
}
inline ::LossParam* NodeParam::mutable_loss_param() {
  
  if (loss_param_ == NULL) {
    loss_param_ = new ::LossParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.loss_param)
  return loss_param_;
}
inline ::LossParam* NodeParam::release_loss_param() {
  // @@protoc_insertion_point(field_release:NodeParam.loss_param)
  
  ::LossParam* temp = loss_param_;
  loss_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_loss_param(::LossParam* loss_param) {
  delete loss_param_;
  loss_param_ = loss_param;
  if (loss_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.loss_param)
}

// .GeneratorParam generator_param = 51;
inline bool NodeParam::has_generator_param() const {
  return this != internal_default_instance() && generator_param_ != NULL;
}
inline void NodeParam::clear_generator_param() {
  if (GetArenaNoVirtual() == NULL && generator_param_ != NULL) delete generator_param_;
  generator_param_ = NULL;
}
inline const ::GeneratorParam& NodeParam::generator_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.generator_param)
  return generator_param_ != NULL ? *generator_param_
                         : *::GeneratorParam::internal_default_instance();
}
inline ::GeneratorParam* NodeParam::mutable_generator_param() {
  
  if (generator_param_ == NULL) {
    generator_param_ = new ::GeneratorParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.generator_param)
  return generator_param_;
}
inline ::GeneratorParam* NodeParam::release_generator_param() {
  // @@protoc_insertion_point(field_release:NodeParam.generator_param)
  
  ::GeneratorParam* temp = generator_param_;
  generator_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_generator_param(::GeneratorParam* generator_param) {
  delete generator_param_;
  generator_param_ = generator_param;
  if (generator_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.generator_param)
}

// .VariableParam variable_param = 100;
inline bool NodeParam::has_variable_param() const {
  return this != internal_default_instance() && variable_param_ != NULL;
}
inline void NodeParam::clear_variable_param() {
  if (GetArenaNoVirtual() == NULL && variable_param_ != NULL) delete variable_param_;
  variable_param_ = NULL;
}
inline const ::VariableParam& NodeParam::variable_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.variable_param)
  return variable_param_ != NULL ? *variable_param_
                         : *::VariableParam::internal_default_instance();
}
inline ::VariableParam* NodeParam::mutable_variable_param() {
  
  if (variable_param_ == NULL) {
    variable_param_ = new ::VariableParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.variable_param)
  return variable_param_;
}
inline ::VariableParam* NodeParam::release_variable_param() {
  // @@protoc_insertion_point(field_release:NodeParam.variable_param)
  
  ::VariableParam* temp = variable_param_;
  variable_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_variable_param(::VariableParam* variable_param) {
  delete variable_param_;
  variable_param_ = variable_param;
  if (variable_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.variable_param)
}

// .PlaceHolderParam place_holder_param = 101;
inline bool NodeParam::has_place_holder_param() const {
  return this != internal_default_instance() && place_holder_param_ != NULL;
}
inline void NodeParam::clear_place_holder_param() {
  if (GetArenaNoVirtual() == NULL && place_holder_param_ != NULL) delete place_holder_param_;
  place_holder_param_ = NULL;
}
inline const ::PlaceHolderParam& NodeParam::place_holder_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.place_holder_param)
  return place_holder_param_ != NULL ? *place_holder_param_
                         : *::PlaceHolderParam::internal_default_instance();
}
inline ::PlaceHolderParam* NodeParam::mutable_place_holder_param() {
  
  if (place_holder_param_ == NULL) {
    place_holder_param_ = new ::PlaceHolderParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.place_holder_param)
  return place_holder_param_;
}
inline ::PlaceHolderParam* NodeParam::release_place_holder_param() {
  // @@protoc_insertion_point(field_release:NodeParam.place_holder_param)
  
  ::PlaceHolderParam* temp = place_holder_param_;
  place_holder_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_place_holder_param(::PlaceHolderParam* place_holder_param) {
  delete place_holder_param_;
  place_holder_param_ = place_holder_param;
  if (place_holder_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.place_holder_param)
}

// .PhaseplexerParam phaseplexer_param = 102;
inline bool NodeParam::has_phaseplexer_param() const {
  return this != internal_default_instance() && phaseplexer_param_ != NULL;
}
inline void NodeParam::clear_phaseplexer_param() {
  if (GetArenaNoVirtual() == NULL && phaseplexer_param_ != NULL) delete phaseplexer_param_;
  phaseplexer_param_ = NULL;
}
inline const ::PhaseplexerParam& NodeParam::phaseplexer_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.phaseplexer_param)
  return phaseplexer_param_ != NULL ? *phaseplexer_param_
                         : *::PhaseplexerParam::internal_default_instance();
}
inline ::PhaseplexerParam* NodeParam::mutable_phaseplexer_param() {
  
  if (phaseplexer_param_ == NULL) {
    phaseplexer_param_ = new ::PhaseplexerParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.phaseplexer_param)
  return phaseplexer_param_;
}
inline ::PhaseplexerParam* NodeParam::release_phaseplexer_param() {
  // @@protoc_insertion_point(field_release:NodeParam.phaseplexer_param)
  
  ::PhaseplexerParam* temp = phaseplexer_param_;
  phaseplexer_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_phaseplexer_param(::PhaseplexerParam* phaseplexer_param) {
  delete phaseplexer_param_;
  phaseplexer_param_ = phaseplexer_param;
  if (phaseplexer_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.phaseplexer_param)
}

// .AddParam add_param = 103;
inline bool NodeParam::has_add_param() const {
  return this != internal_default_instance() && add_param_ != NULL;
}
inline void NodeParam::clear_add_param() {
  if (GetArenaNoVirtual() == NULL && add_param_ != NULL) delete add_param_;
  add_param_ = NULL;
}
inline const ::AddParam& NodeParam::add_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.add_param)
  return add_param_ != NULL ? *add_param_
                         : *::AddParam::internal_default_instance();
}
inline ::AddParam* NodeParam::mutable_add_param() {
  
  if (add_param_ == NULL) {
    add_param_ = new ::AddParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.add_param)
  return add_param_;
}
inline ::AddParam* NodeParam::release_add_param() {
  // @@protoc_insertion_point(field_release:NodeParam.add_param)
  
  ::AddParam* temp = add_param_;
  add_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_add_param(::AddParam* add_param) {
  delete add_param_;
  add_param_ = add_param;
  if (add_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.add_param)
}

// .BiasAddParam bias_add_param = 104;
inline bool NodeParam::has_bias_add_param() const {
  return this != internal_default_instance() && bias_add_param_ != NULL;
}
inline void NodeParam::clear_bias_add_param() {
  if (GetArenaNoVirtual() == NULL && bias_add_param_ != NULL) delete bias_add_param_;
  bias_add_param_ = NULL;
}
inline const ::BiasAddParam& NodeParam::bias_add_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.bias_add_param)
  return bias_add_param_ != NULL ? *bias_add_param_
                         : *::BiasAddParam::internal_default_instance();
}
inline ::BiasAddParam* NodeParam::mutable_bias_add_param() {
  
  if (bias_add_param_ == NULL) {
    bias_add_param_ = new ::BiasAddParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.bias_add_param)
  return bias_add_param_;
}
inline ::BiasAddParam* NodeParam::release_bias_add_param() {
  // @@protoc_insertion_point(field_release:NodeParam.bias_add_param)
  
  ::BiasAddParam* temp = bias_add_param_;
  bias_add_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_bias_add_param(::BiasAddParam* bias_add_param) {
  delete bias_add_param_;
  bias_add_param_ = bias_add_param;
  if (bias_add_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.bias_add_param)
}

// .Conv2dParam conv_2d_param = 105;
inline bool NodeParam::has_conv_2d_param() const {
  return this != internal_default_instance() && conv_2d_param_ != NULL;
}
inline void NodeParam::clear_conv_2d_param() {
  if (GetArenaNoVirtual() == NULL && conv_2d_param_ != NULL) delete conv_2d_param_;
  conv_2d_param_ = NULL;
}
inline const ::Conv2dParam& NodeParam::conv_2d_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.conv_2d_param)
  return conv_2d_param_ != NULL ? *conv_2d_param_
                         : *::Conv2dParam::internal_default_instance();
}
inline ::Conv2dParam* NodeParam::mutable_conv_2d_param() {
  
  if (conv_2d_param_ == NULL) {
    conv_2d_param_ = new ::Conv2dParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.conv_2d_param)
  return conv_2d_param_;
}
inline ::Conv2dParam* NodeParam::release_conv_2d_param() {
  // @@protoc_insertion_point(field_release:NodeParam.conv_2d_param)
  
  ::Conv2dParam* temp = conv_2d_param_;
  conv_2d_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_conv_2d_param(::Conv2dParam* conv_2d_param) {
  delete conv_2d_param_;
  conv_2d_param_ = conv_2d_param;
  if (conv_2d_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.conv_2d_param)
}

// .TransposedConv2dParam transposed_conv_2d_param = 106;
inline bool NodeParam::has_transposed_conv_2d_param() const {
  return this != internal_default_instance() && transposed_conv_2d_param_ != NULL;
}
inline void NodeParam::clear_transposed_conv_2d_param() {
  if (GetArenaNoVirtual() == NULL && transposed_conv_2d_param_ != NULL) delete transposed_conv_2d_param_;
  transposed_conv_2d_param_ = NULL;
}
inline const ::TransposedConv2dParam& NodeParam::transposed_conv_2d_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.transposed_conv_2d_param)
  return transposed_conv_2d_param_ != NULL ? *transposed_conv_2d_param_
                         : *::TransposedConv2dParam::internal_default_instance();
}
inline ::TransposedConv2dParam* NodeParam::mutable_transposed_conv_2d_param() {
  
  if (transposed_conv_2d_param_ == NULL) {
    transposed_conv_2d_param_ = new ::TransposedConv2dParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.transposed_conv_2d_param)
  return transposed_conv_2d_param_;
}
inline ::TransposedConv2dParam* NodeParam::release_transposed_conv_2d_param() {
  // @@protoc_insertion_point(field_release:NodeParam.transposed_conv_2d_param)
  
  ::TransposedConv2dParam* temp = transposed_conv_2d_param_;
  transposed_conv_2d_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_transposed_conv_2d_param(::TransposedConv2dParam* transposed_conv_2d_param) {
  delete transposed_conv_2d_param_;
  transposed_conv_2d_param_ = transposed_conv_2d_param;
  if (transposed_conv_2d_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.transposed_conv_2d_param)
}

// .DropoutParam dropout_param = 107;
inline bool NodeParam::has_dropout_param() const {
  return this != internal_default_instance() && dropout_param_ != NULL;
}
inline void NodeParam::clear_dropout_param() {
  if (GetArenaNoVirtual() == NULL && dropout_param_ != NULL) delete dropout_param_;
  dropout_param_ = NULL;
}
inline const ::DropoutParam& NodeParam::dropout_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.dropout_param)
  return dropout_param_ != NULL ? *dropout_param_
                         : *::DropoutParam::internal_default_instance();
}
inline ::DropoutParam* NodeParam::mutable_dropout_param() {
  
  if (dropout_param_ == NULL) {
    dropout_param_ = new ::DropoutParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.dropout_param)
  return dropout_param_;
}
inline ::DropoutParam* NodeParam::release_dropout_param() {
  // @@protoc_insertion_point(field_release:NodeParam.dropout_param)
  
  ::DropoutParam* temp = dropout_param_;
  dropout_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_dropout_param(::DropoutParam* dropout_param) {
  delete dropout_param_;
  dropout_param_ = dropout_param;
  if (dropout_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.dropout_param)
}

// .LeakyReluParam leaky_relu_param = 108;
inline bool NodeParam::has_leaky_relu_param() const {
  return this != internal_default_instance() && leaky_relu_param_ != NULL;
}
inline void NodeParam::clear_leaky_relu_param() {
  if (GetArenaNoVirtual() == NULL && leaky_relu_param_ != NULL) delete leaky_relu_param_;
  leaky_relu_param_ = NULL;
}
inline const ::LeakyReluParam& NodeParam::leaky_relu_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.leaky_relu_param)
  return leaky_relu_param_ != NULL ? *leaky_relu_param_
                         : *::LeakyReluParam::internal_default_instance();
}
inline ::LeakyReluParam* NodeParam::mutable_leaky_relu_param() {
  
  if (leaky_relu_param_ == NULL) {
    leaky_relu_param_ = new ::LeakyReluParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.leaky_relu_param)
  return leaky_relu_param_;
}
inline ::LeakyReluParam* NodeParam::release_leaky_relu_param() {
  // @@protoc_insertion_point(field_release:NodeParam.leaky_relu_param)
  
  ::LeakyReluParam* temp = leaky_relu_param_;
  leaky_relu_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_leaky_relu_param(::LeakyReluParam* leaky_relu_param) {
  delete leaky_relu_param_;
  leaky_relu_param_ = leaky_relu_param;
  if (leaky_relu_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.leaky_relu_param)
}

// .SoftmaxParam softmax_param = 109;
inline bool NodeParam::has_softmax_param() const {
  return this != internal_default_instance() && softmax_param_ != NULL;
}
inline void NodeParam::clear_softmax_param() {
  if (GetArenaNoVirtual() == NULL && softmax_param_ != NULL) delete softmax_param_;
  softmax_param_ = NULL;
}
inline const ::SoftmaxParam& NodeParam::softmax_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.softmax_param)
  return softmax_param_ != NULL ? *softmax_param_
                         : *::SoftmaxParam::internal_default_instance();
}
inline ::SoftmaxParam* NodeParam::mutable_softmax_param() {
  
  if (softmax_param_ == NULL) {
    softmax_param_ = new ::SoftmaxParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.softmax_param)
  return softmax_param_;
}
inline ::SoftmaxParam* NodeParam::release_softmax_param() {
  // @@protoc_insertion_point(field_release:NodeParam.softmax_param)
  
  ::SoftmaxParam* temp = softmax_param_;
  softmax_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_softmax_param(::SoftmaxParam* softmax_param) {
  delete softmax_param_;
  softmax_param_ = softmax_param;
  if (softmax_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.softmax_param)
}

// .SquareParam square_param = 110;
inline bool NodeParam::has_square_param() const {
  return this != internal_default_instance() && square_param_ != NULL;
}
inline void NodeParam::clear_square_param() {
  if (GetArenaNoVirtual() == NULL && square_param_ != NULL) delete square_param_;
  square_param_ = NULL;
}
inline const ::SquareParam& NodeParam::square_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.square_param)
  return square_param_ != NULL ? *square_param_
                         : *::SquareParam::internal_default_instance();
}
inline ::SquareParam* NodeParam::mutable_square_param() {
  
  if (square_param_ == NULL) {
    square_param_ = new ::SquareParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.square_param)
  return square_param_;
}
inline ::SquareParam* NodeParam::release_square_param() {
  // @@protoc_insertion_point(field_release:NodeParam.square_param)
  
  ::SquareParam* temp = square_param_;
  square_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_square_param(::SquareParam* square_param) {
  delete square_param_;
  square_param_ = square_param;
  if (square_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.square_param)
}

// .MatMulParam matmul_param = 111;
inline bool NodeParam::has_matmul_param() const {
  return this != internal_default_instance() && matmul_param_ != NULL;
}
inline void NodeParam::clear_matmul_param() {
  if (GetArenaNoVirtual() == NULL && matmul_param_ != NULL) delete matmul_param_;
  matmul_param_ = NULL;
}
inline const ::MatMulParam& NodeParam::matmul_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.matmul_param)
  return matmul_param_ != NULL ? *matmul_param_
                         : *::MatMulParam::internal_default_instance();
}
inline ::MatMulParam* NodeParam::mutable_matmul_param() {
  
  if (matmul_param_ == NULL) {
    matmul_param_ = new ::MatMulParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.matmul_param)
  return matmul_param_;
}
inline ::MatMulParam* NodeParam::release_matmul_param() {
  // @@protoc_insertion_point(field_release:NodeParam.matmul_param)
  
  ::MatMulParam* temp = matmul_param_;
  matmul_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_matmul_param(::MatMulParam* matmul_param) {
  delete matmul_param_;
  matmul_param_ = matmul_param;
  if (matmul_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.matmul_param)
}

// .PoolingParam pooling_param = 112;
inline bool NodeParam::has_pooling_param() const {
  return this != internal_default_instance() && pooling_param_ != NULL;
}
inline void NodeParam::clear_pooling_param() {
  if (GetArenaNoVirtual() == NULL && pooling_param_ != NULL) delete pooling_param_;
  pooling_param_ = NULL;
}
inline const ::PoolingParam& NodeParam::pooling_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.pooling_param)
  return pooling_param_ != NULL ? *pooling_param_
                         : *::PoolingParam::internal_default_instance();
}
inline ::PoolingParam* NodeParam::mutable_pooling_param() {
  
  if (pooling_param_ == NULL) {
    pooling_param_ = new ::PoolingParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.pooling_param)
  return pooling_param_;
}
inline ::PoolingParam* NodeParam::release_pooling_param() {
  // @@protoc_insertion_point(field_release:NodeParam.pooling_param)
  
  ::PoolingParam* temp = pooling_param_;
  pooling_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_pooling_param(::PoolingParam* pooling_param) {
  delete pooling_param_;
  pooling_param_ = pooling_param;
  if (pooling_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.pooling_param)
}

// .ReduceParam reduce_param = 113;
inline bool NodeParam::has_reduce_param() const {
  return this != internal_default_instance() && reduce_param_ != NULL;
}
inline void NodeParam::clear_reduce_param() {
  if (GetArenaNoVirtual() == NULL && reduce_param_ != NULL) delete reduce_param_;
  reduce_param_ = NULL;
}
inline const ::ReduceParam& NodeParam::reduce_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.reduce_param)
  return reduce_param_ != NULL ? *reduce_param_
                         : *::ReduceParam::internal_default_instance();
}
inline ::ReduceParam* NodeParam::mutable_reduce_param() {
  
  if (reduce_param_ == NULL) {
    reduce_param_ = new ::ReduceParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.reduce_param)
  return reduce_param_;
}
inline ::ReduceParam* NodeParam::release_reduce_param() {
  // @@protoc_insertion_point(field_release:NodeParam.reduce_param)
  
  ::ReduceParam* temp = reduce_param_;
  reduce_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_reduce_param(::ReduceParam* reduce_param) {
  delete reduce_param_;
  reduce_param_ = reduce_param;
  if (reduce_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.reduce_param)
}

// .EqualParam equal_param = 114;
inline bool NodeParam::has_equal_param() const {
  return this != internal_default_instance() && equal_param_ != NULL;
}
inline void NodeParam::clear_equal_param() {
  if (GetArenaNoVirtual() == NULL && equal_param_ != NULL) delete equal_param_;
  equal_param_ = NULL;
}
inline const ::EqualParam& NodeParam::equal_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.equal_param)
  return equal_param_ != NULL ? *equal_param_
                         : *::EqualParam::internal_default_instance();
}
inline ::EqualParam* NodeParam::mutable_equal_param() {
  
  if (equal_param_ == NULL) {
    equal_param_ = new ::EqualParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.equal_param)
  return equal_param_;
}
inline ::EqualParam* NodeParam::release_equal_param() {
  // @@protoc_insertion_point(field_release:NodeParam.equal_param)
  
  ::EqualParam* temp = equal_param_;
  equal_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_equal_param(::EqualParam* equal_param) {
  delete equal_param_;
  equal_param_ = equal_param;
  if (equal_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.equal_param)
}

// .PrintParam print_param = 115;
inline bool NodeParam::has_print_param() const {
  return this != internal_default_instance() && print_param_ != NULL;
}
inline void NodeParam::clear_print_param() {
  if (GetArenaNoVirtual() == NULL && print_param_ != NULL) delete print_param_;
  print_param_ = NULL;
}
inline const ::PrintParam& NodeParam::print_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.print_param)
  return print_param_ != NULL ? *print_param_
                         : *::PrintParam::internal_default_instance();
}
inline ::PrintParam* NodeParam::mutable_print_param() {
  
  if (print_param_ == NULL) {
    print_param_ = new ::PrintParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.print_param)
  return print_param_;
}
inline ::PrintParam* NodeParam::release_print_param() {
  // @@protoc_insertion_point(field_release:NodeParam.print_param)
  
  ::PrintParam* temp = print_param_;
  print_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_print_param(::PrintParam* print_param) {
  delete print_param_;
  print_param_ = print_param;
  if (print_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.print_param)
}

// .CastFloatParam cast_float_param = 116;
inline bool NodeParam::has_cast_float_param() const {
  return this != internal_default_instance() && cast_float_param_ != NULL;
}
inline void NodeParam::clear_cast_float_param() {
  if (GetArenaNoVirtual() == NULL && cast_float_param_ != NULL) delete cast_float_param_;
  cast_float_param_ = NULL;
}
inline const ::CastFloatParam& NodeParam::cast_float_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.cast_float_param)
  return cast_float_param_ != NULL ? *cast_float_param_
                         : *::CastFloatParam::internal_default_instance();
}
inline ::CastFloatParam* NodeParam::mutable_cast_float_param() {
  
  if (cast_float_param_ == NULL) {
    cast_float_param_ = new ::CastFloatParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.cast_float_param)
  return cast_float_param_;
}
inline ::CastFloatParam* NodeParam::release_cast_float_param() {
  // @@protoc_insertion_point(field_release:NodeParam.cast_float_param)
  
  ::CastFloatParam* temp = cast_float_param_;
  cast_float_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_cast_float_param(::CastFloatParam* cast_float_param) {
  delete cast_float_param_;
  cast_float_param_ = cast_float_param;
  if (cast_float_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.cast_float_param)
}

// .AccumulatorParam accumulator_param = 117;
inline bool NodeParam::has_accumulator_param() const {
  return this != internal_default_instance() && accumulator_param_ != NULL;
}
inline void NodeParam::clear_accumulator_param() {
  if (GetArenaNoVirtual() == NULL && accumulator_param_ != NULL) delete accumulator_param_;
  accumulator_param_ = NULL;
}
inline const ::AccumulatorParam& NodeParam::accumulator_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.accumulator_param)
  return accumulator_param_ != NULL ? *accumulator_param_
                         : *::AccumulatorParam::internal_default_instance();
}
inline ::AccumulatorParam* NodeParam::mutable_accumulator_param() {
  
  if (accumulator_param_ == NULL) {
    accumulator_param_ = new ::AccumulatorParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.accumulator_param)
  return accumulator_param_;
}
inline ::AccumulatorParam* NodeParam::release_accumulator_param() {
  // @@protoc_insertion_point(field_release:NodeParam.accumulator_param)
  
  ::AccumulatorParam* temp = accumulator_param_;
  accumulator_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_accumulator_param(::AccumulatorParam* accumulator_param) {
  delete accumulator_param_;
  accumulator_param_ = accumulator_param;
  if (accumulator_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.accumulator_param)
}

// .DisplayParam display_param = 118;
inline bool NodeParam::has_display_param() const {
  return this != internal_default_instance() && display_param_ != NULL;
}
inline void NodeParam::clear_display_param() {
  if (GetArenaNoVirtual() == NULL && display_param_ != NULL) delete display_param_;
  display_param_ = NULL;
}
inline const ::DisplayParam& NodeParam::display_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.display_param)
  return display_param_ != NULL ? *display_param_
                         : *::DisplayParam::internal_default_instance();
}
inline ::DisplayParam* NodeParam::mutable_display_param() {
  
  if (display_param_ == NULL) {
    display_param_ = new ::DisplayParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.display_param)
  return display_param_;
}
inline ::DisplayParam* NodeParam::release_display_param() {
  // @@protoc_insertion_point(field_release:NodeParam.display_param)
  
  ::DisplayParam* temp = display_param_;
  display_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_display_param(::DisplayParam* display_param) {
  delete display_param_;
  display_param_ = display_param;
  if (display_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.display_param)
}

// .ActivationParam activation_param = 119;
inline bool NodeParam::has_activation_param() const {
  return this != internal_default_instance() && activation_param_ != NULL;
}
inline void NodeParam::clear_activation_param() {
  if (GetArenaNoVirtual() == NULL && activation_param_ != NULL) delete activation_param_;
  activation_param_ = NULL;
}
inline const ::ActivationParam& NodeParam::activation_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.activation_param)
  return activation_param_ != NULL ? *activation_param_
                         : *::ActivationParam::internal_default_instance();
}
inline ::ActivationParam* NodeParam::mutable_activation_param() {
  
  if (activation_param_ == NULL) {
    activation_param_ = new ::ActivationParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.activation_param)
  return activation_param_;
}
inline ::ActivationParam* NodeParam::release_activation_param() {
  // @@protoc_insertion_point(field_release:NodeParam.activation_param)
  
  ::ActivationParam* temp = activation_param_;
  activation_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_activation_param(::ActivationParam* activation_param) {
  delete activation_param_;
  activation_param_ = activation_param;
  if (activation_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.activation_param)
}

// -------------------------------------------------------------------

// SquareParam

// -------------------------------------------------------------------

// EuclideanLossParam

// -------------------------------------------------------------------

// SoftmaxLossParam

// float alpha = 1;
inline void SoftmaxLossParam::clear_alpha() {
  alpha_ = 0;
}
inline float SoftmaxLossParam::alpha() const {
  // @@protoc_insertion_point(field_get:SoftmaxLossParam.alpha)
  return alpha_;
}
inline void SoftmaxLossParam::set_alpha(float value) {
  
  alpha_ = value;
  // @@protoc_insertion_point(field_set:SoftmaxLossParam.alpha)
}

// float beta = 2;
inline void SoftmaxLossParam::clear_beta() {
  beta_ = 0;
}
inline float SoftmaxLossParam::beta() const {
  // @@protoc_insertion_point(field_get:SoftmaxLossParam.beta)
  return beta_;
}
inline void SoftmaxLossParam::set_beta(float value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:SoftmaxLossParam.beta)
}

// -------------------------------------------------------------------

// SoftmaxParam

// float alpha = 1;
inline void SoftmaxParam::clear_alpha() {
  alpha_ = 0;
}
inline float SoftmaxParam::alpha() const {
  // @@protoc_insertion_point(field_get:SoftmaxParam.alpha)
  return alpha_;
}
inline void SoftmaxParam::set_alpha(float value) {
  
  alpha_ = value;
  // @@protoc_insertion_point(field_set:SoftmaxParam.alpha)
}

// float beta = 2;
inline void SoftmaxParam::clear_beta() {
  beta_ = 0;
}
inline float SoftmaxParam::beta() const {
  // @@protoc_insertion_point(field_get:SoftmaxParam.beta)
  return beta_;
}
inline void SoftmaxParam::set_beta(float value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:SoftmaxParam.beta)
}

// -------------------------------------------------------------------

// InitFillParam

// float value = 1;
inline void InitFillParam::clear_value() {
  value_ = 0;
}
inline float InitFillParam::value() const {
  // @@protoc_insertion_point(field_get:InitFillParam.value)
  return value_;
}
inline void InitFillParam::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:InitFillParam.value)
}

// -------------------------------------------------------------------

// InitIndexFillParam

// float offset = 1;
inline void InitIndexFillParam::clear_offset() {
  offset_ = 0;
}
inline float InitIndexFillParam::offset() const {
  // @@protoc_insertion_point(field_get:InitIndexFillParam.offset)
  return offset_;
}
inline void InitIndexFillParam::set_offset(float value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:InitIndexFillParam.offset)
}

// -------------------------------------------------------------------

// InitRandomUniformParam

// float min = 1;
inline void InitRandomUniformParam::clear_min() {
  min_ = 0;
}
inline float InitRandomUniformParam::min() const {
  // @@protoc_insertion_point(field_get:InitRandomUniformParam.min)
  return min_;
}
inline void InitRandomUniformParam::set_min(float value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:InitRandomUniformParam.min)
}

// float max = 2;
inline void InitRandomUniformParam::clear_max() {
  max_ = 0;
}
inline float InitRandomUniformParam::max() const {
  // @@protoc_insertion_point(field_get:InitRandomUniformParam.max)
  return max_;
}
inline void InitRandomUniformParam::set_max(float value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:InitRandomUniformParam.max)
}

// -------------------------------------------------------------------

// InitStepParam

// float min = 1;
inline void InitStepParam::clear_min() {
  min_ = 0;
}
inline float InitStepParam::min() const {
  // @@protoc_insertion_point(field_get:InitStepParam.min)
  return min_;
}
inline void InitStepParam::set_min(float value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:InitStepParam.min)
}

// float max = 2;
inline void InitStepParam::clear_max() {
  max_ = 0;
}
inline float InitStepParam::max() const {
  // @@protoc_insertion_point(field_get:InitStepParam.max)
  return max_;
}
inline void InitStepParam::set_max(float value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:InitStepParam.max)
}

// -------------------------------------------------------------------

// InitParam

// .TensorParam tensor_param = 1;
inline bool InitParam::has_tensor_param() const {
  return this != internal_default_instance() && tensor_param_ != NULL;
}
inline void InitParam::clear_tensor_param() {
  if (GetArenaNoVirtual() == NULL && tensor_param_ != NULL) delete tensor_param_;
  tensor_param_ = NULL;
}
inline const ::TensorParam& InitParam::tensor_param() const {
  // @@protoc_insertion_point(field_get:InitParam.tensor_param)
  return tensor_param_ != NULL ? *tensor_param_
                         : *::TensorParam::internal_default_instance();
}
inline ::TensorParam* InitParam::mutable_tensor_param() {
  
  if (tensor_param_ == NULL) {
    tensor_param_ = new ::TensorParam;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.tensor_param)
  return tensor_param_;
}
inline ::TensorParam* InitParam::release_tensor_param() {
  // @@protoc_insertion_point(field_release:InitParam.tensor_param)
  
  ::TensorParam* temp = tensor_param_;
  tensor_param_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_tensor_param(::TensorParam* tensor_param) {
  delete tensor_param_;
  tensor_param_ = tensor_param;
  if (tensor_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.tensor_param)
}

// .TensorData init_data = 2;
inline bool InitParam::has_init_data() const {
  return this != internal_default_instance() && init_data_ != NULL;
}
inline void InitParam::clear_init_data() {
  if (GetArenaNoVirtual() == NULL && init_data_ != NULL) delete init_data_;
  init_data_ = NULL;
}
inline const ::TensorData& InitParam::init_data() const {
  // @@protoc_insertion_point(field_get:InitParam.init_data)
  return init_data_ != NULL ? *init_data_
                         : *::TensorData::internal_default_instance();
}
inline ::TensorData* InitParam::mutable_init_data() {
  
  if (init_data_ == NULL) {
    init_data_ = new ::TensorData;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.init_data)
  return init_data_;
}
inline ::TensorData* InitParam::release_init_data() {
  // @@protoc_insertion_point(field_release:InitParam.init_data)
  
  ::TensorData* temp = init_data_;
  init_data_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_init_data(::TensorData* init_data) {
  delete init_data_;
  init_data_ = init_data;
  if (init_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.init_data)
}

// .InitFillParam fill_param = 3;
inline bool InitParam::has_fill_param() const {
  return this != internal_default_instance() && fill_param_ != NULL;
}
inline void InitParam::clear_fill_param() {
  if (GetArenaNoVirtual() == NULL && fill_param_ != NULL) delete fill_param_;
  fill_param_ = NULL;
}
inline const ::InitFillParam& InitParam::fill_param() const {
  // @@protoc_insertion_point(field_get:InitParam.fill_param)
  return fill_param_ != NULL ? *fill_param_
                         : *::InitFillParam::internal_default_instance();
}
inline ::InitFillParam* InitParam::mutable_fill_param() {
  
  if (fill_param_ == NULL) {
    fill_param_ = new ::InitFillParam;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.fill_param)
  return fill_param_;
}
inline ::InitFillParam* InitParam::release_fill_param() {
  // @@protoc_insertion_point(field_release:InitParam.fill_param)
  
  ::InitFillParam* temp = fill_param_;
  fill_param_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_fill_param(::InitFillParam* fill_param) {
  delete fill_param_;
  fill_param_ = fill_param;
  if (fill_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.fill_param)
}

// .InitIndexFillParam index_fill_param = 4;
inline bool InitParam::has_index_fill_param() const {
  return this != internal_default_instance() && index_fill_param_ != NULL;
}
inline void InitParam::clear_index_fill_param() {
  if (GetArenaNoVirtual() == NULL && index_fill_param_ != NULL) delete index_fill_param_;
  index_fill_param_ = NULL;
}
inline const ::InitIndexFillParam& InitParam::index_fill_param() const {
  // @@protoc_insertion_point(field_get:InitParam.index_fill_param)
  return index_fill_param_ != NULL ? *index_fill_param_
                         : *::InitIndexFillParam::internal_default_instance();
}
inline ::InitIndexFillParam* InitParam::mutable_index_fill_param() {
  
  if (index_fill_param_ == NULL) {
    index_fill_param_ = new ::InitIndexFillParam;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.index_fill_param)
  return index_fill_param_;
}
inline ::InitIndexFillParam* InitParam::release_index_fill_param() {
  // @@protoc_insertion_point(field_release:InitParam.index_fill_param)
  
  ::InitIndexFillParam* temp = index_fill_param_;
  index_fill_param_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_index_fill_param(::InitIndexFillParam* index_fill_param) {
  delete index_fill_param_;
  index_fill_param_ = index_fill_param;
  if (index_fill_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.index_fill_param)
}

// .InitRandomUniformParam random_uniform_param = 5;
inline bool InitParam::has_random_uniform_param() const {
  return this != internal_default_instance() && random_uniform_param_ != NULL;
}
inline void InitParam::clear_random_uniform_param() {
  if (GetArenaNoVirtual() == NULL && random_uniform_param_ != NULL) delete random_uniform_param_;
  random_uniform_param_ = NULL;
}
inline const ::InitRandomUniformParam& InitParam::random_uniform_param() const {
  // @@protoc_insertion_point(field_get:InitParam.random_uniform_param)
  return random_uniform_param_ != NULL ? *random_uniform_param_
                         : *::InitRandomUniformParam::internal_default_instance();
}
inline ::InitRandomUniformParam* InitParam::mutable_random_uniform_param() {
  
  if (random_uniform_param_ == NULL) {
    random_uniform_param_ = new ::InitRandomUniformParam;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.random_uniform_param)
  return random_uniform_param_;
}
inline ::InitRandomUniformParam* InitParam::release_random_uniform_param() {
  // @@protoc_insertion_point(field_release:InitParam.random_uniform_param)
  
  ::InitRandomUniformParam* temp = random_uniform_param_;
  random_uniform_param_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_random_uniform_param(::InitRandomUniformParam* random_uniform_param) {
  delete random_uniform_param_;
  random_uniform_param_ = random_uniform_param;
  if (random_uniform_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.random_uniform_param)
}

// .InitStepParam step_param = 6;
inline bool InitParam::has_step_param() const {
  return this != internal_default_instance() && step_param_ != NULL;
}
inline void InitParam::clear_step_param() {
  if (GetArenaNoVirtual() == NULL && step_param_ != NULL) delete step_param_;
  step_param_ = NULL;
}
inline const ::InitStepParam& InitParam::step_param() const {
  // @@protoc_insertion_point(field_get:InitParam.step_param)
  return step_param_ != NULL ? *step_param_
                         : *::InitStepParam::internal_default_instance();
}
inline ::InitStepParam* InitParam::mutable_step_param() {
  
  if (step_param_ == NULL) {
    step_param_ = new ::InitStepParam;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.step_param)
  return step_param_;
}
inline ::InitStepParam* InitParam::release_step_param() {
  // @@protoc_insertion_point(field_release:InitParam.step_param)
  
  ::InitStepParam* temp = step_param_;
  step_param_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_step_param(::InitStepParam* step_param) {
  delete step_param_;
  step_param_ = step_param;
  if (step_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.step_param)
}

// -------------------------------------------------------------------

// SGDSolverParam

// float learning_rate = 1;
inline void SGDSolverParam::clear_learning_rate() {
  learning_rate_ = 0;
}
inline float SGDSolverParam::learning_rate() const {
  // @@protoc_insertion_point(field_get:SGDSolverParam.learning_rate)
  return learning_rate_;
}
inline void SGDSolverParam::set_learning_rate(float value) {
  
  learning_rate_ = value;
  // @@protoc_insertion_point(field_set:SGDSolverParam.learning_rate)
}

// float momentum = 2;
inline void SGDSolverParam::clear_momentum() {
  momentum_ = 0;
}
inline float SGDSolverParam::momentum() const {
  // @@protoc_insertion_point(field_get:SGDSolverParam.momentum)
  return momentum_;
}
inline void SGDSolverParam::set_momentum(float value) {
  
  momentum_ = value;
  // @@protoc_insertion_point(field_set:SGDSolverParam.momentum)
}

// -------------------------------------------------------------------

// GainSolverParam

// float learning_rate = 1;
inline void GainSolverParam::clear_learning_rate() {
  learning_rate_ = 0;
}
inline float GainSolverParam::learning_rate() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.learning_rate)
  return learning_rate_;
}
inline void GainSolverParam::set_learning_rate(float value) {
  
  learning_rate_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.learning_rate)
}

// float momentum = 2;
inline void GainSolverParam::clear_momentum() {
  momentum_ = 0;
}
inline float GainSolverParam::momentum() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.momentum)
  return momentum_;
}
inline void GainSolverParam::set_momentum(float value) {
  
  momentum_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.momentum)
}

// float max_gain = 3;
inline void GainSolverParam::clear_max_gain() {
  max_gain_ = 0;
}
inline float GainSolverParam::max_gain() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.max_gain)
  return max_gain_;
}
inline void GainSolverParam::set_max_gain(float value) {
  
  max_gain_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.max_gain)
}

// float min_gain = 4;
inline void GainSolverParam::clear_min_gain() {
  min_gain_ = 0;
}
inline float GainSolverParam::min_gain() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.min_gain)
  return min_gain_;
}
inline void GainSolverParam::set_min_gain(float value) {
  
  min_gain_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.min_gain)
}

// float gain_plus = 5;
inline void GainSolverParam::clear_gain_plus() {
  gain_plus_ = 0;
}
inline float GainSolverParam::gain_plus() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.gain_plus)
  return gain_plus_;
}
inline void GainSolverParam::set_gain_plus(float value) {
  
  gain_plus_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.gain_plus)
}

// float gain_mult = 6;
inline void GainSolverParam::clear_gain_mult() {
  gain_mult_ = 0;
}
inline float GainSolverParam::gain_mult() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.gain_mult)
  return gain_mult_;
}
inline void GainSolverParam::set_gain_mult(float value) {
  
  gain_mult_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.gain_mult)
}

// -------------------------------------------------------------------

// AdaDeltaSolverParam

// float learning_rate = 1;
inline void AdaDeltaSolverParam::clear_learning_rate() {
  learning_rate_ = 0;
}
inline float AdaDeltaSolverParam::learning_rate() const {
  // @@protoc_insertion_point(field_get:AdaDeltaSolverParam.learning_rate)
  return learning_rate_;
}
inline void AdaDeltaSolverParam::set_learning_rate(float value) {
  
  learning_rate_ = value;
  // @@protoc_insertion_point(field_set:AdaDeltaSolverParam.learning_rate)
}

// float momentum = 2;
inline void AdaDeltaSolverParam::clear_momentum() {
  momentum_ = 0;
}
inline float AdaDeltaSolverParam::momentum() const {
  // @@protoc_insertion_point(field_get:AdaDeltaSolverParam.momentum)
  return momentum_;
}
inline void AdaDeltaSolverParam::set_momentum(float value) {
  
  momentum_ = value;
  // @@protoc_insertion_point(field_set:AdaDeltaSolverParam.momentum)
}

// float delta = 3;
inline void AdaDeltaSolverParam::clear_delta() {
  delta_ = 0;
}
inline float AdaDeltaSolverParam::delta() const {
  // @@protoc_insertion_point(field_get:AdaDeltaSolverParam.delta)
  return delta_;
}
inline void AdaDeltaSolverParam::set_delta(float value) {
  
  delta_ = value;
  // @@protoc_insertion_point(field_set:AdaDeltaSolverParam.delta)
}

// -------------------------------------------------------------------

// AdamSolverParam

// float learning_rate = 1;
inline void AdamSolverParam::clear_learning_rate() {
  learning_rate_ = 0;
}
inline float AdamSolverParam::learning_rate() const {
  // @@protoc_insertion_point(field_get:AdamSolverParam.learning_rate)
  return learning_rate_;
}
inline void AdamSolverParam::set_learning_rate(float value) {
  
  learning_rate_ = value;
  // @@protoc_insertion_point(field_set:AdamSolverParam.learning_rate)
}

// float beta1 = 2;
inline void AdamSolverParam::clear_beta1() {
  beta1_ = 0;
}
inline float AdamSolverParam::beta1() const {
  // @@protoc_insertion_point(field_get:AdamSolverParam.beta1)
  return beta1_;
}
inline void AdamSolverParam::set_beta1(float value) {
  
  beta1_ = value;
  // @@protoc_insertion_point(field_set:AdamSolverParam.beta1)
}

// float beta2 = 3;
inline void AdamSolverParam::clear_beta2() {
  beta2_ = 0;
}
inline float AdamSolverParam::beta2() const {
  // @@protoc_insertion_point(field_get:AdamSolverParam.beta2)
  return beta2_;
}
inline void AdamSolverParam::set_beta2(float value) {
  
  beta2_ = value;
  // @@protoc_insertion_point(field_set:AdamSolverParam.beta2)
}

// float eps = 4;
inline void AdamSolverParam::clear_eps() {
  eps_ = 0;
}
inline float AdamSolverParam::eps() const {
  // @@protoc_insertion_point(field_get:AdamSolverParam.eps)
  return eps_;
}
inline void AdamSolverParam::set_eps(float value) {
  
  eps_ = value;
  // @@protoc_insertion_point(field_set:AdamSolverParam.eps)
}

// -------------------------------------------------------------------

// SolverParam

// string name = 1;
inline void SolverParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SolverParam::name() const {
  // @@protoc_insertion_point(field_get:SolverParam.name)
  return name_.GetNoArena();
}
inline void SolverParam::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SolverParam.name)
}
#if LANG_CXX11
inline void SolverParam::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SolverParam.name)
}
#endif
inline void SolverParam::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SolverParam.name)
}
inline void SolverParam::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SolverParam.name)
}
inline ::std::string* SolverParam::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:SolverParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SolverParam::release_name() {
  // @@protoc_insertion_point(field_release:SolverParam.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SolverParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:SolverParam.name)
}

// .SGDSolverParam sgd_solver = 2;
inline bool SolverParam::has_sgd_solver() const {
  return this != internal_default_instance() && sgd_solver_ != NULL;
}
inline void SolverParam::clear_sgd_solver() {
  if (GetArenaNoVirtual() == NULL && sgd_solver_ != NULL) delete sgd_solver_;
  sgd_solver_ = NULL;
}
inline const ::SGDSolverParam& SolverParam::sgd_solver() const {
  // @@protoc_insertion_point(field_get:SolverParam.sgd_solver)
  return sgd_solver_ != NULL ? *sgd_solver_
                         : *::SGDSolverParam::internal_default_instance();
}
inline ::SGDSolverParam* SolverParam::mutable_sgd_solver() {
  
  if (sgd_solver_ == NULL) {
    sgd_solver_ = new ::SGDSolverParam;
  }
  // @@protoc_insertion_point(field_mutable:SolverParam.sgd_solver)
  return sgd_solver_;
}
inline ::SGDSolverParam* SolverParam::release_sgd_solver() {
  // @@protoc_insertion_point(field_release:SolverParam.sgd_solver)
  
  ::SGDSolverParam* temp = sgd_solver_;
  sgd_solver_ = NULL;
  return temp;
}
inline void SolverParam::set_allocated_sgd_solver(::SGDSolverParam* sgd_solver) {
  delete sgd_solver_;
  sgd_solver_ = sgd_solver;
  if (sgd_solver) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SolverParam.sgd_solver)
}

// .GainSolverParam gain_solver = 3;
inline bool SolverParam::has_gain_solver() const {
  return this != internal_default_instance() && gain_solver_ != NULL;
}
inline void SolverParam::clear_gain_solver() {
  if (GetArenaNoVirtual() == NULL && gain_solver_ != NULL) delete gain_solver_;
  gain_solver_ = NULL;
}
inline const ::GainSolverParam& SolverParam::gain_solver() const {
  // @@protoc_insertion_point(field_get:SolverParam.gain_solver)
  return gain_solver_ != NULL ? *gain_solver_
                         : *::GainSolverParam::internal_default_instance();
}
inline ::GainSolverParam* SolverParam::mutable_gain_solver() {
  
  if (gain_solver_ == NULL) {
    gain_solver_ = new ::GainSolverParam;
  }
  // @@protoc_insertion_point(field_mutable:SolverParam.gain_solver)
  return gain_solver_;
}
inline ::GainSolverParam* SolverParam::release_gain_solver() {
  // @@protoc_insertion_point(field_release:SolverParam.gain_solver)
  
  ::GainSolverParam* temp = gain_solver_;
  gain_solver_ = NULL;
  return temp;
}
inline void SolverParam::set_allocated_gain_solver(::GainSolverParam* gain_solver) {
  delete gain_solver_;
  gain_solver_ = gain_solver;
  if (gain_solver) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SolverParam.gain_solver)
}

// .AdamSolverParam adam_solver = 4;
inline bool SolverParam::has_adam_solver() const {
  return this != internal_default_instance() && adam_solver_ != NULL;
}
inline void SolverParam::clear_adam_solver() {
  if (GetArenaNoVirtual() == NULL && adam_solver_ != NULL) delete adam_solver_;
  adam_solver_ = NULL;
}
inline const ::AdamSolverParam& SolverParam::adam_solver() const {
  // @@protoc_insertion_point(field_get:SolverParam.adam_solver)
  return adam_solver_ != NULL ? *adam_solver_
                         : *::AdamSolverParam::internal_default_instance();
}
inline ::AdamSolverParam* SolverParam::mutable_adam_solver() {
  
  if (adam_solver_ == NULL) {
    adam_solver_ = new ::AdamSolverParam;
  }
  // @@protoc_insertion_point(field_mutable:SolverParam.adam_solver)
  return adam_solver_;
}
inline ::AdamSolverParam* SolverParam::release_adam_solver() {
  // @@protoc_insertion_point(field_release:SolverParam.adam_solver)
  
  ::AdamSolverParam* temp = adam_solver_;
  adam_solver_ = NULL;
  return temp;
}
inline void SolverParam::set_allocated_adam_solver(::AdamSolverParam* adam_solver) {
  delete adam_solver_;
  adam_solver_ = adam_solver;
  if (adam_solver) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SolverParam.adam_solver)
}

// .AdaDeltaSolverParam adadelta_solver = 5;
inline bool SolverParam::has_adadelta_solver() const {
  return this != internal_default_instance() && adadelta_solver_ != NULL;
}
inline void SolverParam::clear_adadelta_solver() {
  if (GetArenaNoVirtual() == NULL && adadelta_solver_ != NULL) delete adadelta_solver_;
  adadelta_solver_ = NULL;
}
inline const ::AdaDeltaSolverParam& SolverParam::adadelta_solver() const {
  // @@protoc_insertion_point(field_get:SolverParam.adadelta_solver)
  return adadelta_solver_ != NULL ? *adadelta_solver_
                         : *::AdaDeltaSolverParam::internal_default_instance();
}
inline ::AdaDeltaSolverParam* SolverParam::mutable_adadelta_solver() {
  
  if (adadelta_solver_ == NULL) {
    adadelta_solver_ = new ::AdaDeltaSolverParam;
  }
  // @@protoc_insertion_point(field_mutable:SolverParam.adadelta_solver)
  return adadelta_solver_;
}
inline ::AdaDeltaSolverParam* SolverParam::release_adadelta_solver() {
  // @@protoc_insertion_point(field_release:SolverParam.adadelta_solver)
  
  ::AdaDeltaSolverParam* temp = adadelta_solver_;
  adadelta_solver_ = NULL;
  return temp;
}
inline void SolverParam::set_allocated_adadelta_solver(::AdaDeltaSolverParam* adadelta_solver) {
  delete adadelta_solver_;
  adadelta_solver_ = adadelta_solver;
  if (adadelta_solver) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SolverParam.adadelta_solver)
}

// -------------------------------------------------------------------

// PhaseParam

// string phase = 1;
inline void PhaseParam::clear_phase() {
  phase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PhaseParam::phase() const {
  // @@protoc_insertion_point(field_get:PhaseParam.phase)
  return phase_.GetNoArena();
}
inline void PhaseParam::set_phase(const ::std::string& value) {
  
  phase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PhaseParam.phase)
}
#if LANG_CXX11
inline void PhaseParam::set_phase(::std::string&& value) {
  
  phase_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PhaseParam.phase)
}
#endif
inline void PhaseParam::set_phase(const char* value) {
  
  phase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PhaseParam.phase)
}
inline void PhaseParam::set_phase(const char* value, size_t size) {
  
  phase_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PhaseParam.phase)
}
inline ::std::string* PhaseParam::mutable_phase() {
  
  // @@protoc_insertion_point(field_mutable:PhaseParam.phase)
  return phase_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhaseParam::release_phase() {
  // @@protoc_insertion_point(field_release:PhaseParam.phase)
  
  return phase_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhaseParam::set_allocated_phase(::std::string* phase) {
  if (phase != NULL) {
    
  } else {
    
  }
  phase_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phase);
  // @@protoc_insertion_point(field_set_allocated:PhaseParam.phase)
}

// .PhaseParam.PhaseBehaviour behaviour = 2;
inline void PhaseParam::clear_behaviour() {
  behaviour_ = 0;
}
inline ::PhaseParam_PhaseBehaviour PhaseParam::behaviour() const {
  // @@protoc_insertion_point(field_get:PhaseParam.behaviour)
  return static_cast< ::PhaseParam_PhaseBehaviour >(behaviour_);
}
inline void PhaseParam::set_behaviour(::PhaseParam_PhaseBehaviour value) {
  
  behaviour_ = value;
  // @@protoc_insertion_point(field_set:PhaseParam.behaviour)
}

// -------------------------------------------------------------------

// GraphParam

// repeated .NodeParam node = 1;
inline int GraphParam::node_size() const {
  return node_.size();
}
inline void GraphParam::clear_node() {
  node_.Clear();
}
inline const ::NodeParam& GraphParam::node(int index) const {
  // @@protoc_insertion_point(field_get:GraphParam.node)
  return node_.Get(index);
}
inline ::NodeParam* GraphParam::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:GraphParam.node)
  return node_.Mutable(index);
}
inline ::NodeParam* GraphParam::add_node() {
  // @@protoc_insertion_point(field_add:GraphParam.node)
  return node_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NodeParam >*
GraphParam::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:GraphParam.node)
  return &node_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NodeParam >&
GraphParam::node() const {
  // @@protoc_insertion_point(field_list:GraphParam.node)
  return node_;
}

// repeated .SolverParam solver = 2;
inline int GraphParam::solver_size() const {
  return solver_.size();
}
inline void GraphParam::clear_solver() {
  solver_.Clear();
}
inline const ::SolverParam& GraphParam::solver(int index) const {
  // @@protoc_insertion_point(field_get:GraphParam.solver)
  return solver_.Get(index);
}
inline ::SolverParam* GraphParam::mutable_solver(int index) {
  // @@protoc_insertion_point(field_mutable:GraphParam.solver)
  return solver_.Mutable(index);
}
inline ::SolverParam* GraphParam::add_solver() {
  // @@protoc_insertion_point(field_add:GraphParam.solver)
  return solver_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SolverParam >*
GraphParam::mutable_solver() {
  // @@protoc_insertion_point(field_mutable_list:GraphParam.solver)
  return &solver_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SolverParam >&
GraphParam::solver() const {
  // @@protoc_insertion_point(field_list:GraphParam.solver)
  return solver_;
}

// repeated .PhaseParam phase = 3;
inline int GraphParam::phase_size() const {
  return phase_.size();
}
inline void GraphParam::clear_phase() {
  phase_.Clear();
}
inline const ::PhaseParam& GraphParam::phase(int index) const {
  // @@protoc_insertion_point(field_get:GraphParam.phase)
  return phase_.Get(index);
}
inline ::PhaseParam* GraphParam::mutable_phase(int index) {
  // @@protoc_insertion_point(field_mutable:GraphParam.phase)
  return phase_.Mutable(index);
}
inline ::PhaseParam* GraphParam::add_phase() {
  // @@protoc_insertion_point(field_add:GraphParam.phase)
  return phase_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PhaseParam >*
GraphParam::mutable_phase() {
  // @@protoc_insertion_point(field_mutable_list:GraphParam.phase)
  return &phase_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PhaseParam >&
GraphParam::phase() const {
  // @@protoc_insertion_point(field_list:GraphParam.phase)
  return phase_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TensorParam_TensorType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TensorParam_TensorType>() {
  return ::TensorParam_TensorType_descriptor();
}
template <> struct is_proto_enum< ::AccumulatorParam_ResetTime> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AccumulatorParam_ResetTime>() {
  return ::AccumulatorParam_ResetTime_descriptor();
}
template <> struct is_proto_enum< ::PrintParam_PrintTime> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PrintParam_PrintTime>() {
  return ::PrintParam_PrintTime_descriptor();
}
template <> struct is_proto_enum< ::PrintParam_PrintType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PrintParam_PrintType>() {
  return ::PrintParam_PrintType_descriptor();
}
template <> struct is_proto_enum< ::ReduceParam_ReduceOp> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ReduceParam_ReduceOp>() {
  return ::ReduceParam_ReduceOp_descriptor();
}
template <> struct is_proto_enum< ::ActivationParam_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ActivationParam_Type>() {
  return ::ActivationParam_Type_descriptor();
}
template <> struct is_proto_enum< ::ImageReaderParam_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ImageReaderParam_Type>() {
  return ::ImageReaderParam_Type_descriptor();
}
template <> struct is_proto_enum< ::MnistParam_ReaderType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MnistParam_ReaderType>() {
  return ::MnistParam_ReaderType_descriptor();
}
template <> struct is_proto_enum< ::PhaseParam_PhaseBehaviour> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PhaseParam_PhaseBehaviour>() {
  return ::PhaseParam_PhaseBehaviour_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_deepflow_2eproto__INCLUDED
