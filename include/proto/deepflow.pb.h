// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: deepflow.proto

#ifndef PROTOBUF_deepflow_2eproto__INCLUDED
#define PROTOBUF_deepflow_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class BlockParam;
class BlockParamDefaultTypeInternal;
extern BlockParamDefaultTypeInternal _BlockParam_default_instance_;
class GainSolverParam;
class GainSolverParamDefaultTypeInternal;
extern GainSolverParamDefaultTypeInternal _GainSolverParam_default_instance_;
class InitFillParam;
class InitFillParamDefaultTypeInternal;
extern InitFillParamDefaultTypeInternal _InitFillParam_default_instance_;
class InitIndexFillParam;
class InitIndexFillParamDefaultTypeInternal;
extern InitIndexFillParamDefaultTypeInternal _InitIndexFillParam_default_instance_;
class InitParam;
class InitParamDefaultTypeInternal;
extern InitParamDefaultTypeInternal _InitParam_default_instance_;
class InitRandomUniformParam;
class InitRandomUniformParamDefaultTypeInternal;
extern InitRandomUniformParamDefaultTypeInternal _InitRandomUniformParam_default_instance_;
class InitStepParam;
class InitStepParamDefaultTypeInternal;
extern InitStepParamDefaultTypeInternal _InitStepParam_default_instance_;
class LossParam;
class LossParamDefaultTypeInternal;
extern LossParamDefaultTypeInternal _LossParam_default_instance_;
class MnistReaderParam;
class MnistReaderParamDefaultTypeInternal;
extern MnistReaderParamDefaultTypeInternal _MnistReaderParam_default_instance_;
class NetworkParam;
class NetworkParamDefaultTypeInternal;
extern NetworkParamDefaultTypeInternal _NetworkParam_default_instance_;
class NodeParam;
class NodeParamDefaultTypeInternal;
extern NodeParamDefaultTypeInternal _NodeParam_default_instance_;
class OpAddParam;
class OpAddParamDefaultTypeInternal;
extern OpAddParamDefaultTypeInternal _OpAddParam_default_instance_;
class OpArgmaxParam;
class OpArgmaxParamDefaultTypeInternal;
extern OpArgmaxParamDefaultTypeInternal _OpArgmaxParam_default_instance_;
class OpBiasAddParam;
class OpBiasAddParamDefaultTypeInternal;
extern OpBiasAddParamDefaultTypeInternal _OpBiasAddParam_default_instance_;
class OpConv2dParam;
class OpConv2dParamDefaultTypeInternal;
extern OpConv2dParamDefaultTypeInternal _OpConv2dParam_default_instance_;
class OpDropoutParam;
class OpDropoutParamDefaultTypeInternal;
extern OpDropoutParamDefaultTypeInternal _OpDropoutParam_default_instance_;
class OpEqualParam;
class OpEqualParamDefaultTypeInternal;
extern OpEqualParamDefaultTypeInternal _OpEqualParam_default_instance_;
class OpMatMulParam;
class OpMatMulParamDefaultTypeInternal;
extern OpMatMulParamDefaultTypeInternal _OpMatMulParam_default_instance_;
class OpPoolingParam;
class OpPoolingParamDefaultTypeInternal;
extern OpPoolingParamDefaultTypeInternal _OpPoolingParam_default_instance_;
class OpReduceParam;
class OpReduceParamDefaultTypeInternal;
extern OpReduceParamDefaultTypeInternal _OpReduceParam_default_instance_;
class OpReluParam;
class OpReluParamDefaultTypeInternal;
extern OpReluParamDefaultTypeInternal _OpReluParam_default_instance_;
class OpSoftmaxParam;
class OpSoftmaxParamDefaultTypeInternal;
extern OpSoftmaxParamDefaultTypeInternal _OpSoftmaxParam_default_instance_;
class OpSquareParam;
class OpSquareParamDefaultTypeInternal;
extern OpSquareParamDefaultTypeInternal _OpSquareParam_default_instance_;
class PlaceHolderParam;
class PlaceHolderParamDefaultTypeInternal;
extern PlaceHolderParamDefaultTypeInternal _PlaceHolderParam_default_instance_;
class SGDSolverParam;
class SGDSolverParamDefaultTypeInternal;
extern SGDSolverParamDefaultTypeInternal _SGDSolverParam_default_instance_;
class SnapshotParam;
class SnapshotParamDefaultTypeInternal;
extern SnapshotParamDefaultTypeInternal _SnapshotParam_default_instance_;
class SoftmaxLossParam;
class SoftmaxLossParamDefaultTypeInternal;
extern SoftmaxLossParamDefaultTypeInternal _SoftmaxLossParam_default_instance_;
class SolverParam;
class SolverParamDefaultTypeInternal;
extern SolverParamDefaultTypeInternal _SolverParam_default_instance_;
class TensorParam;
class TensorParamDefaultTypeInternal;
extern TensorParamDefaultTypeInternal _TensorParam_default_instance_;
class VariableParam;
class VariableParamDefaultTypeInternal;
extern VariableParamDefaultTypeInternal _VariableParam_default_instance_;

namespace protobuf_deepflow_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_deepflow_2eproto

enum TensorParam_TensorType {
  TensorParam_TensorType_FLOAT = 0,
  TensorParam_TensorType_DOUBLE = 1,
  TensorParam_TensorType_HALF = 2,
  TensorParam_TensorType_INT8 = 3,
  TensorParam_TensorType_INT32 = 4,
  TensorParam_TensorType_INT8x4 = 5,
  TensorParam_TensorType_TensorParam_TensorType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TensorParam_TensorType_TensorParam_TensorType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TensorParam_TensorType_IsValid(int value);
const TensorParam_TensorType TensorParam_TensorType_TensorType_MIN = TensorParam_TensorType_FLOAT;
const TensorParam_TensorType TensorParam_TensorType_TensorType_MAX = TensorParam_TensorType_INT8x4;
const int TensorParam_TensorType_TensorType_ARRAYSIZE = TensorParam_TensorType_TensorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TensorParam_TensorType_descriptor();
inline const ::std::string& TensorParam_TensorType_Name(TensorParam_TensorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TensorParam_TensorType_descriptor(), value);
}
inline bool TensorParam_TensorType_Parse(
    const ::std::string& name, TensorParam_TensorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TensorParam_TensorType>(
    TensorParam_TensorType_descriptor(), name, value);
}
enum OpReduceParam_ReduceOp {
  OpReduceParam_ReduceOp_ADD = 0,
  OpReduceParam_ReduceOp_MUL = 1,
  OpReduceParam_ReduceOp_MIN = 2,
  OpReduceParam_ReduceOp_MAX = 3,
  OpReduceParam_ReduceOp_AMAX = 4,
  OpReduceParam_ReduceOp_AVG = 5,
  OpReduceParam_ReduceOp_NORM1 = 6,
  OpReduceParam_ReduceOp_NORM2 = 7,
  OpReduceParam_ReduceOp_OpReduceParam_ReduceOp_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpReduceParam_ReduceOp_OpReduceParam_ReduceOp_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpReduceParam_ReduceOp_IsValid(int value);
const OpReduceParam_ReduceOp OpReduceParam_ReduceOp_ReduceOp_MIN = OpReduceParam_ReduceOp_ADD;
const OpReduceParam_ReduceOp OpReduceParam_ReduceOp_ReduceOp_MAX = OpReduceParam_ReduceOp_NORM2;
const int OpReduceParam_ReduceOp_ReduceOp_ARRAYSIZE = OpReduceParam_ReduceOp_ReduceOp_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpReduceParam_ReduceOp_descriptor();
inline const ::std::string& OpReduceParam_ReduceOp_Name(OpReduceParam_ReduceOp value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpReduceParam_ReduceOp_descriptor(), value);
}
inline bool OpReduceParam_ReduceOp_Parse(
    const ::std::string& name, OpReduceParam_ReduceOp* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpReduceParam_ReduceOp>(
    OpReduceParam_ReduceOp_descriptor(), name, value);
}
enum MnistReaderParam_ReaderType {
  MnistReaderParam_ReaderType_TRAIN = 0,
  MnistReaderParam_ReaderType_TEST = 1,
  MnistReaderParam_ReaderType_MnistReaderParam_ReaderType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MnistReaderParam_ReaderType_MnistReaderParam_ReaderType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MnistReaderParam_ReaderType_IsValid(int value);
const MnistReaderParam_ReaderType MnistReaderParam_ReaderType_ReaderType_MIN = MnistReaderParam_ReaderType_TRAIN;
const MnistReaderParam_ReaderType MnistReaderParam_ReaderType_ReaderType_MAX = MnistReaderParam_ReaderType_TEST;
const int MnistReaderParam_ReaderType_ReaderType_ARRAYSIZE = MnistReaderParam_ReaderType_ReaderType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MnistReaderParam_ReaderType_descriptor();
inline const ::std::string& MnistReaderParam_ReaderType_Name(MnistReaderParam_ReaderType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MnistReaderParam_ReaderType_descriptor(), value);
}
inline bool MnistReaderParam_ReaderType_Parse(
    const ::std::string& name, MnistReaderParam_ReaderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MnistReaderParam_ReaderType>(
    MnistReaderParam_ReaderType_descriptor(), name, value);
}
// ===================================================================

class TensorParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TensorParam) */ {
 public:
  TensorParam();
  virtual ~TensorParam();

  TensorParam(const TensorParam& from);

  inline TensorParam& operator=(const TensorParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TensorParam& default_instance();

  static inline const TensorParam* internal_default_instance() {
    return reinterpret_cast<const TensorParam*>(
               &_TensorParam_default_instance_);
  }

  void Swap(TensorParam* other);

  // implements Message ----------------------------------------------

  inline TensorParam* New() const PROTOBUF_FINAL { return New(NULL); }

  TensorParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TensorParam& from);
  void MergeFrom(const TensorParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TensorParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TensorParam_TensorType TensorType;
  static const TensorType FLOAT =
    TensorParam_TensorType_FLOAT;
  static const TensorType DOUBLE =
    TensorParam_TensorType_DOUBLE;
  static const TensorType HALF =
    TensorParam_TensorType_HALF;
  static const TensorType INT8 =
    TensorParam_TensorType_INT8;
  static const TensorType INT32 =
    TensorParam_TensorType_INT32;
  static const TensorType INT8x4 =
    TensorParam_TensorType_INT8x4;
  static inline bool TensorType_IsValid(int value) {
    return TensorParam_TensorType_IsValid(value);
  }
  static const TensorType TensorType_MIN =
    TensorParam_TensorType_TensorType_MIN;
  static const TensorType TensorType_MAX =
    TensorParam_TensorType_TensorType_MAX;
  static const int TensorType_ARRAYSIZE =
    TensorParam_TensorType_TensorType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TensorType_descriptor() {
    return TensorParam_TensorType_descriptor();
  }
  static inline const ::std::string& TensorType_Name(TensorType value) {
    return TensorParam_TensorType_Name(value);
  }
  static inline bool TensorType_Parse(const ::std::string& name,
      TensorType* value) {
    return TensorParam_TensorType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 dims = 2;
  int dims_size() const;
  void clear_dims();
  static const int kDimsFieldNumber = 2;
  ::google::protobuf::int32 dims(int index) const;
  void set_dims(int index, ::google::protobuf::int32 value);
  void add_dims(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dims();

  // .TensorParam.TensorType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::TensorParam_TensorType type() const;
  void set_type(::TensorParam_TensorType value);

  // @@protoc_insertion_point(class_scope:TensorParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dims_;
  mutable int _dims_cached_byte_size_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpAddParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpAddParam) */ {
 public:
  OpAddParam();
  virtual ~OpAddParam();

  OpAddParam(const OpAddParam& from);

  inline OpAddParam& operator=(const OpAddParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpAddParam& default_instance();

  static inline const OpAddParam* internal_default_instance() {
    return reinterpret_cast<const OpAddParam*>(
               &_OpAddParam_default_instance_);
  }

  void Swap(OpAddParam* other);

  // implements Message ----------------------------------------------

  inline OpAddParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpAddParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpAddParam& from);
  void MergeFrom(const OpAddParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpAddParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float alpha = 1;
  void clear_alpha();
  static const int kAlphaFieldNumber = 1;
  float alpha() const;
  void set_alpha(float value);

  // float beta = 2;
  void clear_beta();
  static const int kBetaFieldNumber = 2;
  float beta() const;
  void set_beta(float value);

  // @@protoc_insertion_point(class_scope:OpAddParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float alpha_;
  float beta_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpEqualParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpEqualParam) */ {
 public:
  OpEqualParam();
  virtual ~OpEqualParam();

  OpEqualParam(const OpEqualParam& from);

  inline OpEqualParam& operator=(const OpEqualParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpEqualParam& default_instance();

  static inline const OpEqualParam* internal_default_instance() {
    return reinterpret_cast<const OpEqualParam*>(
               &_OpEqualParam_default_instance_);
  }

  void Swap(OpEqualParam* other);

  // implements Message ----------------------------------------------

  inline OpEqualParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpEqualParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpEqualParam& from);
  void MergeFrom(const OpEqualParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpEqualParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:OpEqualParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpBiasAddParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpBiasAddParam) */ {
 public:
  OpBiasAddParam();
  virtual ~OpBiasAddParam();

  OpBiasAddParam(const OpBiasAddParam& from);

  inline OpBiasAddParam& operator=(const OpBiasAddParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpBiasAddParam& default_instance();

  static inline const OpBiasAddParam* internal_default_instance() {
    return reinterpret_cast<const OpBiasAddParam*>(
               &_OpBiasAddParam_default_instance_);
  }

  void Swap(OpBiasAddParam* other);

  // implements Message ----------------------------------------------

  inline OpBiasAddParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpBiasAddParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpBiasAddParam& from);
  void MergeFrom(const OpBiasAddParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpBiasAddParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:OpBiasAddParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpPoolingParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpPoolingParam) */ {
 public:
  OpPoolingParam();
  virtual ~OpPoolingParam();

  OpPoolingParam(const OpPoolingParam& from);

  inline OpPoolingParam& operator=(const OpPoolingParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpPoolingParam& default_instance();

  static inline const OpPoolingParam* internal_default_instance() {
    return reinterpret_cast<const OpPoolingParam*>(
               &_OpPoolingParam_default_instance_);
  }

  void Swap(OpPoolingParam* other);

  // implements Message ----------------------------------------------

  inline OpPoolingParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpPoolingParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpPoolingParam& from);
  void MergeFrom(const OpPoolingParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpPoolingParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 window_h = 1;
  void clear_window_h();
  static const int kWindowHFieldNumber = 1;
  ::google::protobuf::int32 window_h() const;
  void set_window_h(::google::protobuf::int32 value);

  // int32 window_w = 2;
  void clear_window_w();
  static const int kWindowWFieldNumber = 2;
  ::google::protobuf::int32 window_w() const;
  void set_window_w(::google::protobuf::int32 value);

  // int32 h_pad = 3;
  void clear_h_pad();
  static const int kHPadFieldNumber = 3;
  ::google::protobuf::int32 h_pad() const;
  void set_h_pad(::google::protobuf::int32 value);

  // int32 v_pad = 4;
  void clear_v_pad();
  static const int kVPadFieldNumber = 4;
  ::google::protobuf::int32 v_pad() const;
  void set_v_pad(::google::protobuf::int32 value);

  // int32 h_stride = 5;
  void clear_h_stride();
  static const int kHStrideFieldNumber = 5;
  ::google::protobuf::int32 h_stride() const;
  void set_h_stride(::google::protobuf::int32 value);

  // int32 v_stride = 6;
  void clear_v_stride();
  static const int kVStrideFieldNumber = 6;
  ::google::protobuf::int32 v_stride() const;
  void set_v_stride(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OpPoolingParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 window_h_;
  ::google::protobuf::int32 window_w_;
  ::google::protobuf::int32 h_pad_;
  ::google::protobuf::int32 v_pad_;
  ::google::protobuf::int32 h_stride_;
  ::google::protobuf::int32 v_stride_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpConv2dParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpConv2dParam) */ {
 public:
  OpConv2dParam();
  virtual ~OpConv2dParam();

  OpConv2dParam(const OpConv2dParam& from);

  inline OpConv2dParam& operator=(const OpConv2dParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpConv2dParam& default_instance();

  static inline const OpConv2dParam* internal_default_instance() {
    return reinterpret_cast<const OpConv2dParam*>(
               &_OpConv2dParam_default_instance_);
  }

  void Swap(OpConv2dParam* other);

  // implements Message ----------------------------------------------

  inline OpConv2dParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpConv2dParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpConv2dParam& from);
  void MergeFrom(const OpConv2dParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpConv2dParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 pad_h = 1;
  void clear_pad_h();
  static const int kPadHFieldNumber = 1;
  ::google::protobuf::int32 pad_h() const;
  void set_pad_h(::google::protobuf::int32 value);

  // int32 pad_w = 2;
  void clear_pad_w();
  static const int kPadWFieldNumber = 2;
  ::google::protobuf::int32 pad_w() const;
  void set_pad_w(::google::protobuf::int32 value);

  // int32 u = 3;
  void clear_u();
  static const int kUFieldNumber = 3;
  ::google::protobuf::int32 u() const;
  void set_u(::google::protobuf::int32 value);

  // int32 v = 4;
  void clear_v();
  static const int kVFieldNumber = 4;
  ::google::protobuf::int32 v() const;
  void set_v(::google::protobuf::int32 value);

  // int32 dilation_h = 5;
  void clear_dilation_h();
  static const int kDilationHFieldNumber = 5;
  ::google::protobuf::int32 dilation_h() const;
  void set_dilation_h(::google::protobuf::int32 value);

  // int32 dilation_w = 6;
  void clear_dilation_w();
  static const int kDilationWFieldNumber = 6;
  ::google::protobuf::int32 dilation_w() const;
  void set_dilation_w(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OpConv2dParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 pad_h_;
  ::google::protobuf::int32 pad_w_;
  ::google::protobuf::int32 u_;
  ::google::protobuf::int32 v_;
  ::google::protobuf::int32 dilation_h_;
  ::google::protobuf::int32 dilation_w_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpDropoutParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpDropoutParam) */ {
 public:
  OpDropoutParam();
  virtual ~OpDropoutParam();

  OpDropoutParam(const OpDropoutParam& from);

  inline OpDropoutParam& operator=(const OpDropoutParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpDropoutParam& default_instance();

  static inline const OpDropoutParam* internal_default_instance() {
    return reinterpret_cast<const OpDropoutParam*>(
               &_OpDropoutParam_default_instance_);
  }

  void Swap(OpDropoutParam* other);

  // implements Message ----------------------------------------------

  inline OpDropoutParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpDropoutParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpDropoutParam& from);
  void MergeFrom(const OpDropoutParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpDropoutParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float dropout = 1;
  void clear_dropout();
  static const int kDropoutFieldNumber = 1;
  float dropout() const;
  void set_dropout(float value);

  // @@protoc_insertion_point(class_scope:OpDropoutParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float dropout_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpMatMulParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpMatMulParam) */ {
 public:
  OpMatMulParam();
  virtual ~OpMatMulParam();

  OpMatMulParam(const OpMatMulParam& from);

  inline OpMatMulParam& operator=(const OpMatMulParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpMatMulParam& default_instance();

  static inline const OpMatMulParam* internal_default_instance() {
    return reinterpret_cast<const OpMatMulParam*>(
               &_OpMatMulParam_default_instance_);
  }

  void Swap(OpMatMulParam* other);

  // implements Message ----------------------------------------------

  inline OpMatMulParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpMatMulParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpMatMulParam& from);
  void MergeFrom(const OpMatMulParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpMatMulParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float alpha = 1;
  void clear_alpha();
  static const int kAlphaFieldNumber = 1;
  float alpha() const;
  void set_alpha(float value);

  // float beta = 2;
  void clear_beta();
  static const int kBetaFieldNumber = 2;
  float beta() const;
  void set_beta(float value);

  // @@protoc_insertion_point(class_scope:OpMatMulParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float alpha_;
  float beta_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpReluParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpReluParam) */ {
 public:
  OpReluParam();
  virtual ~OpReluParam();

  OpReluParam(const OpReluParam& from);

  inline OpReluParam& operator=(const OpReluParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpReluParam& default_instance();

  static inline const OpReluParam* internal_default_instance() {
    return reinterpret_cast<const OpReluParam*>(
               &_OpReluParam_default_instance_);
  }

  void Swap(OpReluParam* other);

  // implements Message ----------------------------------------------

  inline OpReluParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpReluParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpReluParam& from);
  void MergeFrom(const OpReluParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpReluParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float negative_slope = 1;
  void clear_negative_slope();
  static const int kNegativeSlopeFieldNumber = 1;
  float negative_slope() const;
  void set_negative_slope(float value);

  // @@protoc_insertion_point(class_scope:OpReluParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float negative_slope_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpReduceParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpReduceParam) */ {
 public:
  OpReduceParam();
  virtual ~OpReduceParam();

  OpReduceParam(const OpReduceParam& from);

  inline OpReduceParam& operator=(const OpReduceParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpReduceParam& default_instance();

  static inline const OpReduceParam* internal_default_instance() {
    return reinterpret_cast<const OpReduceParam*>(
               &_OpReduceParam_default_instance_);
  }

  void Swap(OpReduceParam* other);

  // implements Message ----------------------------------------------

  inline OpReduceParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpReduceParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpReduceParam& from);
  void MergeFrom(const OpReduceParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpReduceParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OpReduceParam_ReduceOp ReduceOp;
  static const ReduceOp ADD =
    OpReduceParam_ReduceOp_ADD;
  static const ReduceOp MUL =
    OpReduceParam_ReduceOp_MUL;
  static const ReduceOp MIN =
    OpReduceParam_ReduceOp_MIN;
  static const ReduceOp MAX =
    OpReduceParam_ReduceOp_MAX;
  static const ReduceOp AMAX =
    OpReduceParam_ReduceOp_AMAX;
  static const ReduceOp AVG =
    OpReduceParam_ReduceOp_AVG;
  static const ReduceOp NORM1 =
    OpReduceParam_ReduceOp_NORM1;
  static const ReduceOp NORM2 =
    OpReduceParam_ReduceOp_NORM2;
  static inline bool ReduceOp_IsValid(int value) {
    return OpReduceParam_ReduceOp_IsValid(value);
  }
  static const ReduceOp ReduceOp_MIN =
    OpReduceParam_ReduceOp_ReduceOp_MIN;
  static const ReduceOp ReduceOp_MAX =
    OpReduceParam_ReduceOp_ReduceOp_MAX;
  static const int ReduceOp_ARRAYSIZE =
    OpReduceParam_ReduceOp_ReduceOp_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReduceOp_descriptor() {
    return OpReduceParam_ReduceOp_descriptor();
  }
  static inline const ::std::string& ReduceOp_Name(ReduceOp value) {
    return OpReduceParam_ReduceOp_Name(value);
  }
  static inline bool ReduceOp_Parse(const ::std::string& name,
      ReduceOp* value) {
    return OpReduceParam_ReduceOp_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .OpReduceParam.ReduceOp reduce_op = 1;
  void clear_reduce_op();
  static const int kReduceOpFieldNumber = 1;
  ::OpReduceParam_ReduceOp reduce_op() const;
  void set_reduce_op(::OpReduceParam_ReduceOp value);

  // int32 reduce_dim = 2;
  void clear_reduce_dim();
  static const int kReduceDimFieldNumber = 2;
  ::google::protobuf::int32 reduce_dim() const;
  void set_reduce_dim(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OpReduceParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reduce_op_;
  ::google::protobuf::int32 reduce_dim_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SnapshotParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SnapshotParam) */ {
 public:
  SnapshotParam();
  virtual ~SnapshotParam();

  SnapshotParam(const SnapshotParam& from);

  inline SnapshotParam& operator=(const SnapshotParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotParam& default_instance();

  static inline const SnapshotParam* internal_default_instance() {
    return reinterpret_cast<const SnapshotParam*>(
               &_SnapshotParam_default_instance_);
  }

  void Swap(SnapshotParam* other);

  // implements Message ----------------------------------------------

  inline SnapshotParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SnapshotParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SnapshotParam& from);
  void MergeFrom(const SnapshotParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SnapshotParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string snapshot_prefix = 2;
  void clear_snapshot_prefix();
  static const int kSnapshotPrefixFieldNumber = 2;
  const ::std::string& snapshot_prefix() const;
  void set_snapshot_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_snapshot_prefix(::std::string&& value);
  #endif
  void set_snapshot_prefix(const char* value);
  void set_snapshot_prefix(const char* value, size_t size);
  ::std::string* mutable_snapshot_prefix();
  ::std::string* release_snapshot_prefix();
  void set_allocated_snapshot_prefix(::std::string* snapshot_prefix);

  // int32 snapshot_interval = 1;
  void clear_snapshot_interval();
  static const int kSnapshotIntervalFieldNumber = 1;
  ::google::protobuf::int32 snapshot_interval() const;
  void set_snapshot_interval(::google::protobuf::int32 value);

  // int32 per_image_height = 3;
  void clear_per_image_height();
  static const int kPerImageHeightFieldNumber = 3;
  ::google::protobuf::int32 per_image_height() const;
  void set_per_image_height(::google::protobuf::int32 value);

  // int32 per_image_width = 4;
  void clear_per_image_width();
  static const int kPerImageWidthFieldNumber = 4;
  ::google::protobuf::int32 per_image_width() const;
  void set_per_image_width(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SnapshotParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr snapshot_prefix_;
  ::google::protobuf::int32 snapshot_interval_;
  ::google::protobuf::int32 per_image_height_;
  ::google::protobuf::int32 per_image_width_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlaceHolderParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PlaceHolderParam) */ {
 public:
  PlaceHolderParam();
  virtual ~PlaceHolderParam();

  PlaceHolderParam(const PlaceHolderParam& from);

  inline PlaceHolderParam& operator=(const PlaceHolderParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceHolderParam& default_instance();

  static inline const PlaceHolderParam* internal_default_instance() {
    return reinterpret_cast<const PlaceHolderParam*>(
               &_PlaceHolderParam_default_instance_);
  }

  void Swap(PlaceHolderParam* other);

  // implements Message ----------------------------------------------

  inline PlaceHolderParam* New() const PROTOBUF_FINAL { return New(NULL); }

  PlaceHolderParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaceHolderParam& from);
  void MergeFrom(const PlaceHolderParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaceHolderParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PlaceHolderParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VariableParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:VariableParam) */ {
 public:
  VariableParam();
  virtual ~VariableParam();

  VariableParam(const VariableParam& from);

  inline VariableParam& operator=(const VariableParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VariableParam& default_instance();

  static inline const VariableParam* internal_default_instance() {
    return reinterpret_cast<const VariableParam*>(
               &_VariableParam_default_instance_);
  }

  void Swap(VariableParam* other);

  // implements Message ----------------------------------------------

  inline VariableParam* New() const PROTOBUF_FINAL { return New(NULL); }

  VariableParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VariableParam& from);
  void MergeFrom(const VariableParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VariableParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .SnapshotParam snapshot_param = 1;
  bool has_snapshot_param() const;
  void clear_snapshot_param();
  static const int kSnapshotParamFieldNumber = 1;
  const ::SnapshotParam& snapshot_param() const;
  ::SnapshotParam* mutable_snapshot_param();
  ::SnapshotParam* release_snapshot_param();
  void set_allocated_snapshot_param(::SnapshotParam* snapshot_param);

  // @@protoc_insertion_point(class_scope:VariableParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SnapshotParam* snapshot_param_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:BlockParam) */ {
 public:
  BlockParam();
  virtual ~BlockParam();

  BlockParam(const BlockParam& from);

  inline BlockParam& operator=(const BlockParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockParam& default_instance();

  static inline const BlockParam* internal_default_instance() {
    return reinterpret_cast<const BlockParam*>(
               &_BlockParam_default_instance_);
  }

  void Swap(BlockParam* other);

  // implements Message ----------------------------------------------

  inline BlockParam* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockParam& from);
  void MergeFrom(const BlockParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:BlockParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LossParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LossParam) */ {
 public:
  LossParam();
  virtual ~LossParam();

  LossParam(const LossParam& from);

  inline LossParam& operator=(const LossParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LossParam& default_instance();

  static inline const LossParam* internal_default_instance() {
    return reinterpret_cast<const LossParam*>(
               &_LossParam_default_instance_);
  }

  void Swap(LossParam* other);

  // implements Message ----------------------------------------------

  inline LossParam* New() const PROTOBUF_FINAL { return New(NULL); }

  LossParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LossParam& from);
  void MergeFrom(const LossParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LossParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .SoftmaxLossParam softmax_loss_param = 1;
  bool has_softmax_loss_param() const;
  void clear_softmax_loss_param();
  static const int kSoftmaxLossParamFieldNumber = 1;
  const ::SoftmaxLossParam& softmax_loss_param() const;
  ::SoftmaxLossParam* mutable_softmax_loss_param();
  ::SoftmaxLossParam* release_softmax_loss_param();
  void set_allocated_softmax_loss_param(::SoftmaxLossParam* softmax_loss_param);

  // @@protoc_insertion_point(class_scope:LossParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SoftmaxLossParam* softmax_loss_param_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MnistReaderParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MnistReaderParam) */ {
 public:
  MnistReaderParam();
  virtual ~MnistReaderParam();

  MnistReaderParam(const MnistReaderParam& from);

  inline MnistReaderParam& operator=(const MnistReaderParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MnistReaderParam& default_instance();

  static inline const MnistReaderParam* internal_default_instance() {
    return reinterpret_cast<const MnistReaderParam*>(
               &_MnistReaderParam_default_instance_);
  }

  void Swap(MnistReaderParam* other);

  // implements Message ----------------------------------------------

  inline MnistReaderParam* New() const PROTOBUF_FINAL { return New(NULL); }

  MnistReaderParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MnistReaderParam& from);
  void MergeFrom(const MnistReaderParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MnistReaderParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MnistReaderParam_ReaderType ReaderType;
  static const ReaderType TRAIN =
    MnistReaderParam_ReaderType_TRAIN;
  static const ReaderType TEST =
    MnistReaderParam_ReaderType_TEST;
  static inline bool ReaderType_IsValid(int value) {
    return MnistReaderParam_ReaderType_IsValid(value);
  }
  static const ReaderType ReaderType_MIN =
    MnistReaderParam_ReaderType_ReaderType_MIN;
  static const ReaderType ReaderType_MAX =
    MnistReaderParam_ReaderType_ReaderType_MAX;
  static const int ReaderType_ARRAYSIZE =
    MnistReaderParam_ReaderType_ReaderType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReaderType_descriptor() {
    return MnistReaderParam_ReaderType_descriptor();
  }
  static inline const ::std::string& ReaderType_Name(ReaderType value) {
    return MnistReaderParam_ReaderType_Name(value);
  }
  static inline bool ReaderType_Parse(const ::std::string& name,
      ReaderType* value) {
    return MnistReaderParam_ReaderType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string folder_path = 1;
  void clear_folder_path();
  static const int kFolderPathFieldNumber = 1;
  const ::std::string& folder_path() const;
  void set_folder_path(const ::std::string& value);
  #if LANG_CXX11
  void set_folder_path(::std::string&& value);
  #endif
  void set_folder_path(const char* value);
  void set_folder_path(const char* value, size_t size);
  ::std::string* mutable_folder_path();
  ::std::string* release_folder_path();
  void set_allocated_folder_path(::std::string* folder_path);

  // int32 batch_size = 2;
  void clear_batch_size();
  static const int kBatchSizeFieldNumber = 2;
  ::google::protobuf::int32 batch_size() const;
  void set_batch_size(::google::protobuf::int32 value);

  // .MnistReaderParam.ReaderType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::MnistReaderParam_ReaderType type() const;
  void set_type(::MnistReaderParam_ReaderType value);

  // @@protoc_insertion_point(class_scope:MnistReaderParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr folder_path_;
  ::google::protobuf::int32 batch_size_;
  int type_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NodeParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NodeParam) */ {
 public:
  NodeParam();
  virtual ~NodeParam();

  NodeParam(const NodeParam& from);

  inline NodeParam& operator=(const NodeParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeParam& default_instance();

  static inline const NodeParam* internal_default_instance() {
    return reinterpret_cast<const NodeParam*>(
               &_NodeParam_default_instance_);
  }

  void Swap(NodeParam* other);

  // implements Message ----------------------------------------------

  inline NodeParam* New() const PROTOBUF_FINAL { return New(NULL); }

  NodeParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NodeParam& from);
  void MergeFrom(const NodeParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NodeParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string inputs = 2;
  int inputs_size() const;
  void clear_inputs();
  static const int kInputsFieldNumber = 2;
  const ::std::string& inputs(int index) const;
  ::std::string* mutable_inputs(int index);
  void set_inputs(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_inputs(int index, ::std::string&& value);
  #endif
  void set_inputs(int index, const char* value);
  void set_inputs(int index, const char* value, size_t size);
  ::std::string* add_inputs();
  void add_inputs(const ::std::string& value);
  #if LANG_CXX11
  void add_inputs(::std::string&& value);
  #endif
  void add_inputs(const char* value);
  void add_inputs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& inputs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_inputs();

  // repeated string outputs = 3;
  int outputs_size() const;
  void clear_outputs();
  static const int kOutputsFieldNumber = 3;
  const ::std::string& outputs(int index) const;
  ::std::string* mutable_outputs(int index);
  void set_outputs(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_outputs(int index, ::std::string&& value);
  #endif
  void set_outputs(int index, const char* value);
  void set_outputs(int index, const char* value, size_t size);
  ::std::string* add_outputs();
  void add_outputs(const ::std::string& value);
  #if LANG_CXX11
  void add_outputs(::std::string&& value);
  #endif
  void add_outputs(const char* value);
  void add_outputs(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& outputs() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_outputs();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .TensorParam tensor_param = 10;
  bool has_tensor_param() const;
  void clear_tensor_param();
  static const int kTensorParamFieldNumber = 10;
  const ::TensorParam& tensor_param() const;
  ::TensorParam* mutable_tensor_param();
  ::TensorParam* release_tensor_param();
  void set_allocated_tensor_param(::TensorParam* tensor_param);

  // .MnistReaderParam mnist_reader_param = 20;
  bool has_mnist_reader_param() const;
  void clear_mnist_reader_param();
  static const int kMnistReaderParamFieldNumber = 20;
  const ::MnistReaderParam& mnist_reader_param() const;
  ::MnistReaderParam* mutable_mnist_reader_param();
  ::MnistReaderParam* release_mnist_reader_param();
  void set_allocated_mnist_reader_param(::MnistReaderParam* mnist_reader_param);

  // .VariableParam variable_param = 30;
  bool has_variable_param() const;
  void clear_variable_param();
  static const int kVariableParamFieldNumber = 30;
  const ::VariableParam& variable_param() const;
  ::VariableParam* mutable_variable_param();
  ::VariableParam* release_variable_param();
  void set_allocated_variable_param(::VariableParam* variable_param);

  // .PlaceHolderParam place_holder_param = 31;
  bool has_place_holder_param() const;
  void clear_place_holder_param();
  static const int kPlaceHolderParamFieldNumber = 31;
  const ::PlaceHolderParam& place_holder_param() const;
  ::PlaceHolderParam* mutable_place_holder_param();
  ::PlaceHolderParam* release_place_holder_param();
  void set_allocated_place_holder_param(::PlaceHolderParam* place_holder_param);

  // .BlockParam block_param = 40;
  bool has_block_param() const;
  void clear_block_param();
  static const int kBlockParamFieldNumber = 40;
  const ::BlockParam& block_param() const;
  ::BlockParam* mutable_block_param();
  ::BlockParam* release_block_param();
  void set_allocated_block_param(::BlockParam* block_param);

  // .LossParam loss_param = 50;
  bool has_loss_param() const;
  void clear_loss_param();
  static const int kLossParamFieldNumber = 50;
  const ::LossParam& loss_param() const;
  ::LossParam* mutable_loss_param();
  ::LossParam* release_loss_param();
  void set_allocated_loss_param(::LossParam* loss_param);

  // .OpAddParam op_add_param = 60;
  bool has_op_add_param() const;
  void clear_op_add_param();
  static const int kOpAddParamFieldNumber = 60;
  const ::OpAddParam& op_add_param() const;
  ::OpAddParam* mutable_op_add_param();
  ::OpAddParam* release_op_add_param();
  void set_allocated_op_add_param(::OpAddParam* op_add_param);

  // .OpBiasAddParam op_bias_add_param = 61;
  bool has_op_bias_add_param() const;
  void clear_op_bias_add_param();
  static const int kOpBiasAddParamFieldNumber = 61;
  const ::OpBiasAddParam& op_bias_add_param() const;
  ::OpBiasAddParam* mutable_op_bias_add_param();
  ::OpBiasAddParam* release_op_bias_add_param();
  void set_allocated_op_bias_add_param(::OpBiasAddParam* op_bias_add_param);

  // .OpConv2dParam op_conv_2d_param = 62;
  bool has_op_conv_2d_param() const;
  void clear_op_conv_2d_param();
  static const int kOpConv2DParamFieldNumber = 62;
  const ::OpConv2dParam& op_conv_2d_param() const;
  ::OpConv2dParam* mutable_op_conv_2d_param();
  ::OpConv2dParam* release_op_conv_2d_param();
  void set_allocated_op_conv_2d_param(::OpConv2dParam* op_conv_2d_param);

  // .OpDropoutParam op_dropout_param = 63;
  bool has_op_dropout_param() const;
  void clear_op_dropout_param();
  static const int kOpDropoutParamFieldNumber = 63;
  const ::OpDropoutParam& op_dropout_param() const;
  ::OpDropoutParam* mutable_op_dropout_param();
  ::OpDropoutParam* release_op_dropout_param();
  void set_allocated_op_dropout_param(::OpDropoutParam* op_dropout_param);

  // .OpReluParam op_relu_param = 64;
  bool has_op_relu_param() const;
  void clear_op_relu_param();
  static const int kOpReluParamFieldNumber = 64;
  const ::OpReluParam& op_relu_param() const;
  ::OpReluParam* mutable_op_relu_param();
  ::OpReluParam* release_op_relu_param();
  void set_allocated_op_relu_param(::OpReluParam* op_relu_param);

  // .OpSoftmaxParam op_softmax_param = 65;
  bool has_op_softmax_param() const;
  void clear_op_softmax_param();
  static const int kOpSoftmaxParamFieldNumber = 65;
  const ::OpSoftmaxParam& op_softmax_param() const;
  ::OpSoftmaxParam* mutable_op_softmax_param();
  ::OpSoftmaxParam* release_op_softmax_param();
  void set_allocated_op_softmax_param(::OpSoftmaxParam* op_softmax_param);

  // .OpSquareParam op_square_param = 66;
  bool has_op_square_param() const;
  void clear_op_square_param();
  static const int kOpSquareParamFieldNumber = 66;
  const ::OpSquareParam& op_square_param() const;
  ::OpSquareParam* mutable_op_square_param();
  ::OpSquareParam* release_op_square_param();
  void set_allocated_op_square_param(::OpSquareParam* op_square_param);

  // .OpMatMulParam op_matmul_param = 67;
  bool has_op_matmul_param() const;
  void clear_op_matmul_param();
  static const int kOpMatmulParamFieldNumber = 67;
  const ::OpMatMulParam& op_matmul_param() const;
  ::OpMatMulParam* mutable_op_matmul_param();
  ::OpMatMulParam* release_op_matmul_param();
  void set_allocated_op_matmul_param(::OpMatMulParam* op_matmul_param);

  // .OpPoolingParam op_pooling_param = 68;
  bool has_op_pooling_param() const;
  void clear_op_pooling_param();
  static const int kOpPoolingParamFieldNumber = 68;
  const ::OpPoolingParam& op_pooling_param() const;
  ::OpPoolingParam* mutable_op_pooling_param();
  ::OpPoolingParam* release_op_pooling_param();
  void set_allocated_op_pooling_param(::OpPoolingParam* op_pooling_param);

  // .OpArgmaxParam op_argmax_param = 69;
  bool has_op_argmax_param() const;
  void clear_op_argmax_param();
  static const int kOpArgmaxParamFieldNumber = 69;
  const ::OpArgmaxParam& op_argmax_param() const;
  ::OpArgmaxParam* mutable_op_argmax_param();
  ::OpArgmaxParam* release_op_argmax_param();
  void set_allocated_op_argmax_param(::OpArgmaxParam* op_argmax_param);

  // .OpReduceParam op_reduce_param = 70;
  bool has_op_reduce_param() const;
  void clear_op_reduce_param();
  static const int kOpReduceParamFieldNumber = 70;
  const ::OpReduceParam& op_reduce_param() const;
  ::OpReduceParam* mutable_op_reduce_param();
  ::OpReduceParam* release_op_reduce_param();
  void set_allocated_op_reduce_param(::OpReduceParam* op_reduce_param);

  // .OpEqualParam op_equal_param = 71;
  bool has_op_equal_param() const;
  void clear_op_equal_param();
  static const int kOpEqualParamFieldNumber = 71;
  const ::OpEqualParam& op_equal_param() const;
  ::OpEqualParam* mutable_op_equal_param();
  ::OpEqualParam* release_op_equal_param();
  void set_allocated_op_equal_param(::OpEqualParam* op_equal_param);

  // @@protoc_insertion_point(class_scope:NodeParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> inputs_;
  ::google::protobuf::RepeatedPtrField< ::std::string> outputs_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::TensorParam* tensor_param_;
  ::MnistReaderParam* mnist_reader_param_;
  ::VariableParam* variable_param_;
  ::PlaceHolderParam* place_holder_param_;
  ::BlockParam* block_param_;
  ::LossParam* loss_param_;
  ::OpAddParam* op_add_param_;
  ::OpBiasAddParam* op_bias_add_param_;
  ::OpConv2dParam* op_conv_2d_param_;
  ::OpDropoutParam* op_dropout_param_;
  ::OpReluParam* op_relu_param_;
  ::OpSoftmaxParam* op_softmax_param_;
  ::OpSquareParam* op_square_param_;
  ::OpMatMulParam* op_matmul_param_;
  ::OpPoolingParam* op_pooling_param_;
  ::OpArgmaxParam* op_argmax_param_;
  ::OpReduceParam* op_reduce_param_;
  ::OpEqualParam* op_equal_param_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpArgmaxParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpArgmaxParam) */ {
 public:
  OpArgmaxParam();
  virtual ~OpArgmaxParam();

  OpArgmaxParam(const OpArgmaxParam& from);

  inline OpArgmaxParam& operator=(const OpArgmaxParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpArgmaxParam& default_instance();

  static inline const OpArgmaxParam* internal_default_instance() {
    return reinterpret_cast<const OpArgmaxParam*>(
               &_OpArgmaxParam_default_instance_);
  }

  void Swap(OpArgmaxParam* other);

  // implements Message ----------------------------------------------

  inline OpArgmaxParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpArgmaxParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpArgmaxParam& from);
  void MergeFrom(const OpArgmaxParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpArgmaxParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:OpArgmaxParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpSquareParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpSquareParam) */ {
 public:
  OpSquareParam();
  virtual ~OpSquareParam();

  OpSquareParam(const OpSquareParam& from);

  inline OpSquareParam& operator=(const OpSquareParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpSquareParam& default_instance();

  static inline const OpSquareParam* internal_default_instance() {
    return reinterpret_cast<const OpSquareParam*>(
               &_OpSquareParam_default_instance_);
  }

  void Swap(OpSquareParam* other);

  // implements Message ----------------------------------------------

  inline OpSquareParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpSquareParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpSquareParam& from);
  void MergeFrom(const OpSquareParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpSquareParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:OpSquareParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SoftmaxLossParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SoftmaxLossParam) */ {
 public:
  SoftmaxLossParam();
  virtual ~SoftmaxLossParam();

  SoftmaxLossParam(const SoftmaxLossParam& from);

  inline SoftmaxLossParam& operator=(const SoftmaxLossParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SoftmaxLossParam& default_instance();

  static inline const SoftmaxLossParam* internal_default_instance() {
    return reinterpret_cast<const SoftmaxLossParam*>(
               &_SoftmaxLossParam_default_instance_);
  }

  void Swap(SoftmaxLossParam* other);

  // implements Message ----------------------------------------------

  inline SoftmaxLossParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SoftmaxLossParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SoftmaxLossParam& from);
  void MergeFrom(const SoftmaxLossParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SoftmaxLossParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float alpha = 1;
  void clear_alpha();
  static const int kAlphaFieldNumber = 1;
  float alpha() const;
  void set_alpha(float value);

  // float beta = 2;
  void clear_beta();
  static const int kBetaFieldNumber = 2;
  float beta() const;
  void set_beta(float value);

  // @@protoc_insertion_point(class_scope:SoftmaxLossParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float alpha_;
  float beta_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpSoftmaxParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OpSoftmaxParam) */ {
 public:
  OpSoftmaxParam();
  virtual ~OpSoftmaxParam();

  OpSoftmaxParam(const OpSoftmaxParam& from);

  inline OpSoftmaxParam& operator=(const OpSoftmaxParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpSoftmaxParam& default_instance();

  static inline const OpSoftmaxParam* internal_default_instance() {
    return reinterpret_cast<const OpSoftmaxParam*>(
               &_OpSoftmaxParam_default_instance_);
  }

  void Swap(OpSoftmaxParam* other);

  // implements Message ----------------------------------------------

  inline OpSoftmaxParam* New() const PROTOBUF_FINAL { return New(NULL); }

  OpSoftmaxParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpSoftmaxParam& from);
  void MergeFrom(const OpSoftmaxParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpSoftmaxParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float alpha = 1;
  void clear_alpha();
  static const int kAlphaFieldNumber = 1;
  float alpha() const;
  void set_alpha(float value);

  // float beta = 2;
  void clear_beta();
  static const int kBetaFieldNumber = 2;
  float beta() const;
  void set_beta(float value);

  // @@protoc_insertion_point(class_scope:OpSoftmaxParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float alpha_;
  float beta_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitFillParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitFillParam) */ {
 public:
  InitFillParam();
  virtual ~InitFillParam();

  InitFillParam(const InitFillParam& from);

  inline InitFillParam& operator=(const InitFillParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitFillParam& default_instance();

  static inline const InitFillParam* internal_default_instance() {
    return reinterpret_cast<const InitFillParam*>(
               &_InitFillParam_default_instance_);
  }

  void Swap(InitFillParam* other);

  // implements Message ----------------------------------------------

  inline InitFillParam* New() const PROTOBUF_FINAL { return New(NULL); }

  InitFillParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitFillParam& from);
  void MergeFrom(const InitFillParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitFillParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:InitFillParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float value_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitIndexFillParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitIndexFillParam) */ {
 public:
  InitIndexFillParam();
  virtual ~InitIndexFillParam();

  InitIndexFillParam(const InitIndexFillParam& from);

  inline InitIndexFillParam& operator=(const InitIndexFillParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitIndexFillParam& default_instance();

  static inline const InitIndexFillParam* internal_default_instance() {
    return reinterpret_cast<const InitIndexFillParam*>(
               &_InitIndexFillParam_default_instance_);
  }

  void Swap(InitIndexFillParam* other);

  // implements Message ----------------------------------------------

  inline InitIndexFillParam* New() const PROTOBUF_FINAL { return New(NULL); }

  InitIndexFillParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitIndexFillParam& from);
  void MergeFrom(const InitIndexFillParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitIndexFillParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float offset = 1;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  float offset() const;
  void set_offset(float value);

  // @@protoc_insertion_point(class_scope:InitIndexFillParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float offset_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitRandomUniformParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitRandomUniformParam) */ {
 public:
  InitRandomUniformParam();
  virtual ~InitRandomUniformParam();

  InitRandomUniformParam(const InitRandomUniformParam& from);

  inline InitRandomUniformParam& operator=(const InitRandomUniformParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitRandomUniformParam& default_instance();

  static inline const InitRandomUniformParam* internal_default_instance() {
    return reinterpret_cast<const InitRandomUniformParam*>(
               &_InitRandomUniformParam_default_instance_);
  }

  void Swap(InitRandomUniformParam* other);

  // implements Message ----------------------------------------------

  inline InitRandomUniformParam* New() const PROTOBUF_FINAL { return New(NULL); }

  InitRandomUniformParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitRandomUniformParam& from);
  void MergeFrom(const InitRandomUniformParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitRandomUniformParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  float min() const;
  void set_min(float value);

  // float max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  float max() const;
  void set_max(float value);

  // @@protoc_insertion_point(class_scope:InitRandomUniformParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float min_;
  float max_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitStepParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitStepParam) */ {
 public:
  InitStepParam();
  virtual ~InitStepParam();

  InitStepParam(const InitStepParam& from);

  inline InitStepParam& operator=(const InitStepParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitStepParam& default_instance();

  static inline const InitStepParam* internal_default_instance() {
    return reinterpret_cast<const InitStepParam*>(
               &_InitStepParam_default_instance_);
  }

  void Swap(InitStepParam* other);

  // implements Message ----------------------------------------------

  inline InitStepParam* New() const PROTOBUF_FINAL { return New(NULL); }

  InitStepParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitStepParam& from);
  void MergeFrom(const InitStepParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitStepParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  float min() const;
  void set_min(float value);

  // float max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  float max() const;
  void set_max(float value);

  // @@protoc_insertion_point(class_scope:InitStepParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float min_;
  float max_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:InitParam) */ {
 public:
  InitParam();
  virtual ~InitParam();

  InitParam(const InitParam& from);

  inline InitParam& operator=(const InitParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitParam& default_instance();

  static inline const InitParam* internal_default_instance() {
    return reinterpret_cast<const InitParam*>(
               &_InitParam_default_instance_);
  }

  void Swap(InitParam* other);

  // implements Message ----------------------------------------------

  inline InitParam* New() const PROTOBUF_FINAL { return New(NULL); }

  InitParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitParam& from);
  void MergeFrom(const InitParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TensorParam tensor_param = 1;
  bool has_tensor_param() const;
  void clear_tensor_param();
  static const int kTensorParamFieldNumber = 1;
  const ::TensorParam& tensor_param() const;
  ::TensorParam* mutable_tensor_param();
  ::TensorParam* release_tensor_param();
  void set_allocated_tensor_param(::TensorParam* tensor_param);

  // .InitFillParam fill_param = 2;
  bool has_fill_param() const;
  void clear_fill_param();
  static const int kFillParamFieldNumber = 2;
  const ::InitFillParam& fill_param() const;
  ::InitFillParam* mutable_fill_param();
  ::InitFillParam* release_fill_param();
  void set_allocated_fill_param(::InitFillParam* fill_param);

  // .InitIndexFillParam index_fill_param = 3;
  bool has_index_fill_param() const;
  void clear_index_fill_param();
  static const int kIndexFillParamFieldNumber = 3;
  const ::InitIndexFillParam& index_fill_param() const;
  ::InitIndexFillParam* mutable_index_fill_param();
  ::InitIndexFillParam* release_index_fill_param();
  void set_allocated_index_fill_param(::InitIndexFillParam* index_fill_param);

  // .InitRandomUniformParam random_uniform_param = 4;
  bool has_random_uniform_param() const;
  void clear_random_uniform_param();
  static const int kRandomUniformParamFieldNumber = 4;
  const ::InitRandomUniformParam& random_uniform_param() const;
  ::InitRandomUniformParam* mutable_random_uniform_param();
  ::InitRandomUniformParam* release_random_uniform_param();
  void set_allocated_random_uniform_param(::InitRandomUniformParam* random_uniform_param);

  // .InitStepParam step_param = 5;
  bool has_step_param() const;
  void clear_step_param();
  static const int kStepParamFieldNumber = 5;
  const ::InitStepParam& step_param() const;
  ::InitStepParam* mutable_step_param();
  ::InitStepParam* release_step_param();
  void set_allocated_step_param(::InitStepParam* step_param);

  // @@protoc_insertion_point(class_scope:InitParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TensorParam* tensor_param_;
  ::InitFillParam* fill_param_;
  ::InitIndexFillParam* index_fill_param_;
  ::InitRandomUniformParam* random_uniform_param_;
  ::InitStepParam* step_param_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SGDSolverParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SGDSolverParam) */ {
 public:
  SGDSolverParam();
  virtual ~SGDSolverParam();

  SGDSolverParam(const SGDSolverParam& from);

  inline SGDSolverParam& operator=(const SGDSolverParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SGDSolverParam& default_instance();

  static inline const SGDSolverParam* internal_default_instance() {
    return reinterpret_cast<const SGDSolverParam*>(
               &_SGDSolverParam_default_instance_);
  }

  void Swap(SGDSolverParam* other);

  // implements Message ----------------------------------------------

  inline SGDSolverParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SGDSolverParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SGDSolverParam& from);
  void MergeFrom(const SGDSolverParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SGDSolverParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float momentum = 1;
  void clear_momentum();
  static const int kMomentumFieldNumber = 1;
  float momentum() const;
  void set_momentum(float value);

  // float learning_rate = 2;
  void clear_learning_rate();
  static const int kLearningRateFieldNumber = 2;
  float learning_rate() const;
  void set_learning_rate(float value);

  // @@protoc_insertion_point(class_scope:SGDSolverParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float momentum_;
  float learning_rate_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GainSolverParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GainSolverParam) */ {
 public:
  GainSolverParam();
  virtual ~GainSolverParam();

  GainSolverParam(const GainSolverParam& from);

  inline GainSolverParam& operator=(const GainSolverParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GainSolverParam& default_instance();

  static inline const GainSolverParam* internal_default_instance() {
    return reinterpret_cast<const GainSolverParam*>(
               &_GainSolverParam_default_instance_);
  }

  void Swap(GainSolverParam* other);

  // implements Message ----------------------------------------------

  inline GainSolverParam* New() const PROTOBUF_FINAL { return New(NULL); }

  GainSolverParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GainSolverParam& from);
  void MergeFrom(const GainSolverParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GainSolverParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float momentum = 1;
  void clear_momentum();
  static const int kMomentumFieldNumber = 1;
  float momentum() const;
  void set_momentum(float value);

  // float learning_rate = 2;
  void clear_learning_rate();
  static const int kLearningRateFieldNumber = 2;
  float learning_rate() const;
  void set_learning_rate(float value);

  // float max_gain = 3;
  void clear_max_gain();
  static const int kMaxGainFieldNumber = 3;
  float max_gain() const;
  void set_max_gain(float value);

  // float min_gain = 4;
  void clear_min_gain();
  static const int kMinGainFieldNumber = 4;
  float min_gain() const;
  void set_min_gain(float value);

  // float gain_plus = 5;
  void clear_gain_plus();
  static const int kGainPlusFieldNumber = 5;
  float gain_plus() const;
  void set_gain_plus(float value);

  // float gain_mult = 6;
  void clear_gain_mult();
  static const int kGainMultFieldNumber = 6;
  float gain_mult() const;
  void set_gain_mult(float value);

  // @@protoc_insertion_point(class_scope:GainSolverParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float momentum_;
  float learning_rate_;
  float max_gain_;
  float min_gain_;
  float gain_plus_;
  float gain_mult_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SolverParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SolverParam) */ {
 public:
  SolverParam();
  virtual ~SolverParam();

  SolverParam(const SolverParam& from);

  inline SolverParam& operator=(const SolverParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SolverParam& default_instance();

  static inline const SolverParam* internal_default_instance() {
    return reinterpret_cast<const SolverParam*>(
               &_SolverParam_default_instance_);
  }

  void Swap(SolverParam* other);

  // implements Message ----------------------------------------------

  inline SolverParam* New() const PROTOBUF_FINAL { return New(NULL); }

  SolverParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SolverParam& from);
  void MergeFrom(const SolverParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SolverParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .SGDSolverParam sgd_solver = 2;
  bool has_sgd_solver() const;
  void clear_sgd_solver();
  static const int kSgdSolverFieldNumber = 2;
  const ::SGDSolverParam& sgd_solver() const;
  ::SGDSolverParam* mutable_sgd_solver();
  ::SGDSolverParam* release_sgd_solver();
  void set_allocated_sgd_solver(::SGDSolverParam* sgd_solver);

  // .GainSolverParam gain_solver = 3;
  bool has_gain_solver() const;
  void clear_gain_solver();
  static const int kGainSolverFieldNumber = 3;
  const ::GainSolverParam& gain_solver() const;
  ::GainSolverParam* mutable_gain_solver();
  ::GainSolverParam* release_gain_solver();
  void set_allocated_gain_solver(::GainSolverParam* gain_solver);

  // int32 max_iteration = 1;
  void clear_max_iteration();
  static const int kMaxIterationFieldNumber = 1;
  ::google::protobuf::int32 max_iteration() const;
  void set_max_iteration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SolverParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::SGDSolverParam* sgd_solver_;
  ::GainSolverParam* gain_solver_;
  ::google::protobuf::int32 max_iteration_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NetworkParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NetworkParam) */ {
 public:
  NetworkParam();
  virtual ~NetworkParam();

  NetworkParam(const NetworkParam& from);

  inline NetworkParam& operator=(const NetworkParam& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetworkParam& default_instance();

  static inline const NetworkParam* internal_default_instance() {
    return reinterpret_cast<const NetworkParam*>(
               &_NetworkParam_default_instance_);
  }

  void Swap(NetworkParam* other);

  // implements Message ----------------------------------------------

  inline NetworkParam* New() const PROTOBUF_FINAL { return New(NULL); }

  NetworkParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetworkParam& from);
  void MergeFrom(const NetworkParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetworkParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .NodeParam node_param = 1;
  int node_param_size() const;
  void clear_node_param();
  static const int kNodeParamFieldNumber = 1;
  const ::NodeParam& node_param(int index) const;
  ::NodeParam* mutable_node_param(int index);
  ::NodeParam* add_node_param();
  ::google::protobuf::RepeatedPtrField< ::NodeParam >*
      mutable_node_param();
  const ::google::protobuf::RepeatedPtrField< ::NodeParam >&
      node_param() const;

  // @@protoc_insertion_point(class_scope:NetworkParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::NodeParam > node_param_;
  mutable int _cached_size_;
  friend struct  protobuf_deepflow_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorParam

// .TensorParam.TensorType type = 1;
inline void TensorParam::clear_type() {
  type_ = 0;
}
inline ::TensorParam_TensorType TensorParam::type() const {
  // @@protoc_insertion_point(field_get:TensorParam.type)
  return static_cast< ::TensorParam_TensorType >(type_);
}
inline void TensorParam::set_type(::TensorParam_TensorType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:TensorParam.type)
}

// repeated int32 dims = 2;
inline int TensorParam::dims_size() const {
  return dims_.size();
}
inline void TensorParam::clear_dims() {
  dims_.Clear();
}
inline ::google::protobuf::int32 TensorParam::dims(int index) const {
  // @@protoc_insertion_point(field_get:TensorParam.dims)
  return dims_.Get(index);
}
inline void TensorParam::set_dims(int index, ::google::protobuf::int32 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:TensorParam.dims)
}
inline void TensorParam::add_dims(::google::protobuf::int32 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:TensorParam.dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TensorParam::dims() const {
  // @@protoc_insertion_point(field_list:TensorParam.dims)
  return dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TensorParam::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:TensorParam.dims)
  return &dims_;
}

// -------------------------------------------------------------------

// OpAddParam

// float alpha = 1;
inline void OpAddParam::clear_alpha() {
  alpha_ = 0;
}
inline float OpAddParam::alpha() const {
  // @@protoc_insertion_point(field_get:OpAddParam.alpha)
  return alpha_;
}
inline void OpAddParam::set_alpha(float value) {
  
  alpha_ = value;
  // @@protoc_insertion_point(field_set:OpAddParam.alpha)
}

// float beta = 2;
inline void OpAddParam::clear_beta() {
  beta_ = 0;
}
inline float OpAddParam::beta() const {
  // @@protoc_insertion_point(field_get:OpAddParam.beta)
  return beta_;
}
inline void OpAddParam::set_beta(float value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:OpAddParam.beta)
}

// -------------------------------------------------------------------

// OpEqualParam

// -------------------------------------------------------------------

// OpBiasAddParam

// -------------------------------------------------------------------

// OpPoolingParam

// int32 window_h = 1;
inline void OpPoolingParam::clear_window_h() {
  window_h_ = 0;
}
inline ::google::protobuf::int32 OpPoolingParam::window_h() const {
  // @@protoc_insertion_point(field_get:OpPoolingParam.window_h)
  return window_h_;
}
inline void OpPoolingParam::set_window_h(::google::protobuf::int32 value) {
  
  window_h_ = value;
  // @@protoc_insertion_point(field_set:OpPoolingParam.window_h)
}

// int32 window_w = 2;
inline void OpPoolingParam::clear_window_w() {
  window_w_ = 0;
}
inline ::google::protobuf::int32 OpPoolingParam::window_w() const {
  // @@protoc_insertion_point(field_get:OpPoolingParam.window_w)
  return window_w_;
}
inline void OpPoolingParam::set_window_w(::google::protobuf::int32 value) {
  
  window_w_ = value;
  // @@protoc_insertion_point(field_set:OpPoolingParam.window_w)
}

// int32 h_pad = 3;
inline void OpPoolingParam::clear_h_pad() {
  h_pad_ = 0;
}
inline ::google::protobuf::int32 OpPoolingParam::h_pad() const {
  // @@protoc_insertion_point(field_get:OpPoolingParam.h_pad)
  return h_pad_;
}
inline void OpPoolingParam::set_h_pad(::google::protobuf::int32 value) {
  
  h_pad_ = value;
  // @@protoc_insertion_point(field_set:OpPoolingParam.h_pad)
}

// int32 v_pad = 4;
inline void OpPoolingParam::clear_v_pad() {
  v_pad_ = 0;
}
inline ::google::protobuf::int32 OpPoolingParam::v_pad() const {
  // @@protoc_insertion_point(field_get:OpPoolingParam.v_pad)
  return v_pad_;
}
inline void OpPoolingParam::set_v_pad(::google::protobuf::int32 value) {
  
  v_pad_ = value;
  // @@protoc_insertion_point(field_set:OpPoolingParam.v_pad)
}

// int32 h_stride = 5;
inline void OpPoolingParam::clear_h_stride() {
  h_stride_ = 0;
}
inline ::google::protobuf::int32 OpPoolingParam::h_stride() const {
  // @@protoc_insertion_point(field_get:OpPoolingParam.h_stride)
  return h_stride_;
}
inline void OpPoolingParam::set_h_stride(::google::protobuf::int32 value) {
  
  h_stride_ = value;
  // @@protoc_insertion_point(field_set:OpPoolingParam.h_stride)
}

// int32 v_stride = 6;
inline void OpPoolingParam::clear_v_stride() {
  v_stride_ = 0;
}
inline ::google::protobuf::int32 OpPoolingParam::v_stride() const {
  // @@protoc_insertion_point(field_get:OpPoolingParam.v_stride)
  return v_stride_;
}
inline void OpPoolingParam::set_v_stride(::google::protobuf::int32 value) {
  
  v_stride_ = value;
  // @@protoc_insertion_point(field_set:OpPoolingParam.v_stride)
}

// -------------------------------------------------------------------

// OpConv2dParam

// int32 pad_h = 1;
inline void OpConv2dParam::clear_pad_h() {
  pad_h_ = 0;
}
inline ::google::protobuf::int32 OpConv2dParam::pad_h() const {
  // @@protoc_insertion_point(field_get:OpConv2dParam.pad_h)
  return pad_h_;
}
inline void OpConv2dParam::set_pad_h(::google::protobuf::int32 value) {
  
  pad_h_ = value;
  // @@protoc_insertion_point(field_set:OpConv2dParam.pad_h)
}

// int32 pad_w = 2;
inline void OpConv2dParam::clear_pad_w() {
  pad_w_ = 0;
}
inline ::google::protobuf::int32 OpConv2dParam::pad_w() const {
  // @@protoc_insertion_point(field_get:OpConv2dParam.pad_w)
  return pad_w_;
}
inline void OpConv2dParam::set_pad_w(::google::protobuf::int32 value) {
  
  pad_w_ = value;
  // @@protoc_insertion_point(field_set:OpConv2dParam.pad_w)
}

// int32 u = 3;
inline void OpConv2dParam::clear_u() {
  u_ = 0;
}
inline ::google::protobuf::int32 OpConv2dParam::u() const {
  // @@protoc_insertion_point(field_get:OpConv2dParam.u)
  return u_;
}
inline void OpConv2dParam::set_u(::google::protobuf::int32 value) {
  
  u_ = value;
  // @@protoc_insertion_point(field_set:OpConv2dParam.u)
}

// int32 v = 4;
inline void OpConv2dParam::clear_v() {
  v_ = 0;
}
inline ::google::protobuf::int32 OpConv2dParam::v() const {
  // @@protoc_insertion_point(field_get:OpConv2dParam.v)
  return v_;
}
inline void OpConv2dParam::set_v(::google::protobuf::int32 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:OpConv2dParam.v)
}

// int32 dilation_h = 5;
inline void OpConv2dParam::clear_dilation_h() {
  dilation_h_ = 0;
}
inline ::google::protobuf::int32 OpConv2dParam::dilation_h() const {
  // @@protoc_insertion_point(field_get:OpConv2dParam.dilation_h)
  return dilation_h_;
}
inline void OpConv2dParam::set_dilation_h(::google::protobuf::int32 value) {
  
  dilation_h_ = value;
  // @@protoc_insertion_point(field_set:OpConv2dParam.dilation_h)
}

// int32 dilation_w = 6;
inline void OpConv2dParam::clear_dilation_w() {
  dilation_w_ = 0;
}
inline ::google::protobuf::int32 OpConv2dParam::dilation_w() const {
  // @@protoc_insertion_point(field_get:OpConv2dParam.dilation_w)
  return dilation_w_;
}
inline void OpConv2dParam::set_dilation_w(::google::protobuf::int32 value) {
  
  dilation_w_ = value;
  // @@protoc_insertion_point(field_set:OpConv2dParam.dilation_w)
}

// -------------------------------------------------------------------

// OpDropoutParam

// float dropout = 1;
inline void OpDropoutParam::clear_dropout() {
  dropout_ = 0;
}
inline float OpDropoutParam::dropout() const {
  // @@protoc_insertion_point(field_get:OpDropoutParam.dropout)
  return dropout_;
}
inline void OpDropoutParam::set_dropout(float value) {
  
  dropout_ = value;
  // @@protoc_insertion_point(field_set:OpDropoutParam.dropout)
}

// -------------------------------------------------------------------

// OpMatMulParam

// float alpha = 1;
inline void OpMatMulParam::clear_alpha() {
  alpha_ = 0;
}
inline float OpMatMulParam::alpha() const {
  // @@protoc_insertion_point(field_get:OpMatMulParam.alpha)
  return alpha_;
}
inline void OpMatMulParam::set_alpha(float value) {
  
  alpha_ = value;
  // @@protoc_insertion_point(field_set:OpMatMulParam.alpha)
}

// float beta = 2;
inline void OpMatMulParam::clear_beta() {
  beta_ = 0;
}
inline float OpMatMulParam::beta() const {
  // @@protoc_insertion_point(field_get:OpMatMulParam.beta)
  return beta_;
}
inline void OpMatMulParam::set_beta(float value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:OpMatMulParam.beta)
}

// -------------------------------------------------------------------

// OpReluParam

// float negative_slope = 1;
inline void OpReluParam::clear_negative_slope() {
  negative_slope_ = 0;
}
inline float OpReluParam::negative_slope() const {
  // @@protoc_insertion_point(field_get:OpReluParam.negative_slope)
  return negative_slope_;
}
inline void OpReluParam::set_negative_slope(float value) {
  
  negative_slope_ = value;
  // @@protoc_insertion_point(field_set:OpReluParam.negative_slope)
}

// -------------------------------------------------------------------

// OpReduceParam

// .OpReduceParam.ReduceOp reduce_op = 1;
inline void OpReduceParam::clear_reduce_op() {
  reduce_op_ = 0;
}
inline ::OpReduceParam_ReduceOp OpReduceParam::reduce_op() const {
  // @@protoc_insertion_point(field_get:OpReduceParam.reduce_op)
  return static_cast< ::OpReduceParam_ReduceOp >(reduce_op_);
}
inline void OpReduceParam::set_reduce_op(::OpReduceParam_ReduceOp value) {
  
  reduce_op_ = value;
  // @@protoc_insertion_point(field_set:OpReduceParam.reduce_op)
}

// int32 reduce_dim = 2;
inline void OpReduceParam::clear_reduce_dim() {
  reduce_dim_ = 0;
}
inline ::google::protobuf::int32 OpReduceParam::reduce_dim() const {
  // @@protoc_insertion_point(field_get:OpReduceParam.reduce_dim)
  return reduce_dim_;
}
inline void OpReduceParam::set_reduce_dim(::google::protobuf::int32 value) {
  
  reduce_dim_ = value;
  // @@protoc_insertion_point(field_set:OpReduceParam.reduce_dim)
}

// -------------------------------------------------------------------

// SnapshotParam

// int32 snapshot_interval = 1;
inline void SnapshotParam::clear_snapshot_interval() {
  snapshot_interval_ = 0;
}
inline ::google::protobuf::int32 SnapshotParam::snapshot_interval() const {
  // @@protoc_insertion_point(field_get:SnapshotParam.snapshot_interval)
  return snapshot_interval_;
}
inline void SnapshotParam::set_snapshot_interval(::google::protobuf::int32 value) {
  
  snapshot_interval_ = value;
  // @@protoc_insertion_point(field_set:SnapshotParam.snapshot_interval)
}

// string snapshot_prefix = 2;
inline void SnapshotParam::clear_snapshot_prefix() {
  snapshot_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SnapshotParam::snapshot_prefix() const {
  // @@protoc_insertion_point(field_get:SnapshotParam.snapshot_prefix)
  return snapshot_prefix_.GetNoArena();
}
inline void SnapshotParam::set_snapshot_prefix(const ::std::string& value) {
  
  snapshot_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SnapshotParam.snapshot_prefix)
}
#if LANG_CXX11
inline void SnapshotParam::set_snapshot_prefix(::std::string&& value) {
  
  snapshot_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SnapshotParam.snapshot_prefix)
}
#endif
inline void SnapshotParam::set_snapshot_prefix(const char* value) {
  
  snapshot_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SnapshotParam.snapshot_prefix)
}
inline void SnapshotParam::set_snapshot_prefix(const char* value, size_t size) {
  
  snapshot_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SnapshotParam.snapshot_prefix)
}
inline ::std::string* SnapshotParam::mutable_snapshot_prefix() {
  
  // @@protoc_insertion_point(field_mutable:SnapshotParam.snapshot_prefix)
  return snapshot_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SnapshotParam::release_snapshot_prefix() {
  // @@protoc_insertion_point(field_release:SnapshotParam.snapshot_prefix)
  
  return snapshot_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SnapshotParam::set_allocated_snapshot_prefix(::std::string* snapshot_prefix) {
  if (snapshot_prefix != NULL) {
    
  } else {
    
  }
  snapshot_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snapshot_prefix);
  // @@protoc_insertion_point(field_set_allocated:SnapshotParam.snapshot_prefix)
}

// int32 per_image_height = 3;
inline void SnapshotParam::clear_per_image_height() {
  per_image_height_ = 0;
}
inline ::google::protobuf::int32 SnapshotParam::per_image_height() const {
  // @@protoc_insertion_point(field_get:SnapshotParam.per_image_height)
  return per_image_height_;
}
inline void SnapshotParam::set_per_image_height(::google::protobuf::int32 value) {
  
  per_image_height_ = value;
  // @@protoc_insertion_point(field_set:SnapshotParam.per_image_height)
}

// int32 per_image_width = 4;
inline void SnapshotParam::clear_per_image_width() {
  per_image_width_ = 0;
}
inline ::google::protobuf::int32 SnapshotParam::per_image_width() const {
  // @@protoc_insertion_point(field_get:SnapshotParam.per_image_width)
  return per_image_width_;
}
inline void SnapshotParam::set_per_image_width(::google::protobuf::int32 value) {
  
  per_image_width_ = value;
  // @@protoc_insertion_point(field_set:SnapshotParam.per_image_width)
}

// -------------------------------------------------------------------

// PlaceHolderParam

// -------------------------------------------------------------------

// VariableParam

// .SnapshotParam snapshot_param = 1;
inline bool VariableParam::has_snapshot_param() const {
  return this != internal_default_instance() && snapshot_param_ != NULL;
}
inline void VariableParam::clear_snapshot_param() {
  if (GetArenaNoVirtual() == NULL && snapshot_param_ != NULL) delete snapshot_param_;
  snapshot_param_ = NULL;
}
inline const ::SnapshotParam& VariableParam::snapshot_param() const {
  // @@protoc_insertion_point(field_get:VariableParam.snapshot_param)
  return snapshot_param_ != NULL ? *snapshot_param_
                         : *::SnapshotParam::internal_default_instance();
}
inline ::SnapshotParam* VariableParam::mutable_snapshot_param() {
  
  if (snapshot_param_ == NULL) {
    snapshot_param_ = new ::SnapshotParam;
  }
  // @@protoc_insertion_point(field_mutable:VariableParam.snapshot_param)
  return snapshot_param_;
}
inline ::SnapshotParam* VariableParam::release_snapshot_param() {
  // @@protoc_insertion_point(field_release:VariableParam.snapshot_param)
  
  ::SnapshotParam* temp = snapshot_param_;
  snapshot_param_ = NULL;
  return temp;
}
inline void VariableParam::set_allocated_snapshot_param(::SnapshotParam* snapshot_param) {
  delete snapshot_param_;
  snapshot_param_ = snapshot_param;
  if (snapshot_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:VariableParam.snapshot_param)
}

// -------------------------------------------------------------------

// BlockParam

// -------------------------------------------------------------------

// LossParam

// .SoftmaxLossParam softmax_loss_param = 1;
inline bool LossParam::has_softmax_loss_param() const {
  return this != internal_default_instance() && softmax_loss_param_ != NULL;
}
inline void LossParam::clear_softmax_loss_param() {
  if (GetArenaNoVirtual() == NULL && softmax_loss_param_ != NULL) delete softmax_loss_param_;
  softmax_loss_param_ = NULL;
}
inline const ::SoftmaxLossParam& LossParam::softmax_loss_param() const {
  // @@protoc_insertion_point(field_get:LossParam.softmax_loss_param)
  return softmax_loss_param_ != NULL ? *softmax_loss_param_
                         : *::SoftmaxLossParam::internal_default_instance();
}
inline ::SoftmaxLossParam* LossParam::mutable_softmax_loss_param() {
  
  if (softmax_loss_param_ == NULL) {
    softmax_loss_param_ = new ::SoftmaxLossParam;
  }
  // @@protoc_insertion_point(field_mutable:LossParam.softmax_loss_param)
  return softmax_loss_param_;
}
inline ::SoftmaxLossParam* LossParam::release_softmax_loss_param() {
  // @@protoc_insertion_point(field_release:LossParam.softmax_loss_param)
  
  ::SoftmaxLossParam* temp = softmax_loss_param_;
  softmax_loss_param_ = NULL;
  return temp;
}
inline void LossParam::set_allocated_softmax_loss_param(::SoftmaxLossParam* softmax_loss_param) {
  delete softmax_loss_param_;
  softmax_loss_param_ = softmax_loss_param;
  if (softmax_loss_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:LossParam.softmax_loss_param)
}

// -------------------------------------------------------------------

// MnistReaderParam

// string folder_path = 1;
inline void MnistReaderParam::clear_folder_path() {
  folder_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MnistReaderParam::folder_path() const {
  // @@protoc_insertion_point(field_get:MnistReaderParam.folder_path)
  return folder_path_.GetNoArena();
}
inline void MnistReaderParam::set_folder_path(const ::std::string& value) {
  
  folder_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MnistReaderParam.folder_path)
}
#if LANG_CXX11
inline void MnistReaderParam::set_folder_path(::std::string&& value) {
  
  folder_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MnistReaderParam.folder_path)
}
#endif
inline void MnistReaderParam::set_folder_path(const char* value) {
  
  folder_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MnistReaderParam.folder_path)
}
inline void MnistReaderParam::set_folder_path(const char* value, size_t size) {
  
  folder_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MnistReaderParam.folder_path)
}
inline ::std::string* MnistReaderParam::mutable_folder_path() {
  
  // @@protoc_insertion_point(field_mutable:MnistReaderParam.folder_path)
  return folder_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MnistReaderParam::release_folder_path() {
  // @@protoc_insertion_point(field_release:MnistReaderParam.folder_path)
  
  return folder_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MnistReaderParam::set_allocated_folder_path(::std::string* folder_path) {
  if (folder_path != NULL) {
    
  } else {
    
  }
  folder_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), folder_path);
  // @@protoc_insertion_point(field_set_allocated:MnistReaderParam.folder_path)
}

// int32 batch_size = 2;
inline void MnistReaderParam::clear_batch_size() {
  batch_size_ = 0;
}
inline ::google::protobuf::int32 MnistReaderParam::batch_size() const {
  // @@protoc_insertion_point(field_get:MnistReaderParam.batch_size)
  return batch_size_;
}
inline void MnistReaderParam::set_batch_size(::google::protobuf::int32 value) {
  
  batch_size_ = value;
  // @@protoc_insertion_point(field_set:MnistReaderParam.batch_size)
}

// .MnistReaderParam.ReaderType type = 3;
inline void MnistReaderParam::clear_type() {
  type_ = 0;
}
inline ::MnistReaderParam_ReaderType MnistReaderParam::type() const {
  // @@protoc_insertion_point(field_get:MnistReaderParam.type)
  return static_cast< ::MnistReaderParam_ReaderType >(type_);
}
inline void MnistReaderParam::set_type(::MnistReaderParam_ReaderType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:MnistReaderParam.type)
}

// -------------------------------------------------------------------

// NodeParam

// string name = 1;
inline void NodeParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NodeParam::name() const {
  // @@protoc_insertion_point(field_get:NodeParam.name)
  return name_.GetNoArena();
}
inline void NodeParam::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NodeParam.name)
}
#if LANG_CXX11
inline void NodeParam::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NodeParam.name)
}
#endif
inline void NodeParam::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NodeParam.name)
}
inline void NodeParam::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NodeParam.name)
}
inline ::std::string* NodeParam::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:NodeParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeParam::release_name() {
  // @@protoc_insertion_point(field_release:NodeParam.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:NodeParam.name)
}

// repeated string inputs = 2;
inline int NodeParam::inputs_size() const {
  return inputs_.size();
}
inline void NodeParam::clear_inputs() {
  inputs_.Clear();
}
inline const ::std::string& NodeParam::inputs(int index) const {
  // @@protoc_insertion_point(field_get:NodeParam.inputs)
  return inputs_.Get(index);
}
inline ::std::string* NodeParam::mutable_inputs(int index) {
  // @@protoc_insertion_point(field_mutable:NodeParam.inputs)
  return inputs_.Mutable(index);
}
inline void NodeParam::set_inputs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NodeParam.inputs)
  inputs_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void NodeParam::set_inputs(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NodeParam.inputs)
  inputs_.Mutable(index)->assign(std::move(value));
}
#endif
inline void NodeParam::set_inputs(int index, const char* value) {
  inputs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NodeParam.inputs)
}
inline void NodeParam::set_inputs(int index, const char* value, size_t size) {
  inputs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NodeParam.inputs)
}
inline ::std::string* NodeParam::add_inputs() {
  // @@protoc_insertion_point(field_add_mutable:NodeParam.inputs)
  return inputs_.Add();
}
inline void NodeParam::add_inputs(const ::std::string& value) {
  inputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NodeParam.inputs)
}
#if LANG_CXX11
inline void NodeParam::add_inputs(::std::string&& value) {
  inputs_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:NodeParam.inputs)
}
#endif
inline void NodeParam::add_inputs(const char* value) {
  inputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NodeParam.inputs)
}
inline void NodeParam::add_inputs(const char* value, size_t size) {
  inputs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NodeParam.inputs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeParam::inputs() const {
  // @@protoc_insertion_point(field_list:NodeParam.inputs)
  return inputs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NodeParam::mutable_inputs() {
  // @@protoc_insertion_point(field_mutable_list:NodeParam.inputs)
  return &inputs_;
}

// repeated string outputs = 3;
inline int NodeParam::outputs_size() const {
  return outputs_.size();
}
inline void NodeParam::clear_outputs() {
  outputs_.Clear();
}
inline const ::std::string& NodeParam::outputs(int index) const {
  // @@protoc_insertion_point(field_get:NodeParam.outputs)
  return outputs_.Get(index);
}
inline ::std::string* NodeParam::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:NodeParam.outputs)
  return outputs_.Mutable(index);
}
inline void NodeParam::set_outputs(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NodeParam.outputs)
  outputs_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void NodeParam::set_outputs(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:NodeParam.outputs)
  outputs_.Mutable(index)->assign(std::move(value));
}
#endif
inline void NodeParam::set_outputs(int index, const char* value) {
  outputs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NodeParam.outputs)
}
inline void NodeParam::set_outputs(int index, const char* value, size_t size) {
  outputs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NodeParam.outputs)
}
inline ::std::string* NodeParam::add_outputs() {
  // @@protoc_insertion_point(field_add_mutable:NodeParam.outputs)
  return outputs_.Add();
}
inline void NodeParam::add_outputs(const ::std::string& value) {
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NodeParam.outputs)
}
#if LANG_CXX11
inline void NodeParam::add_outputs(::std::string&& value) {
  outputs_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:NodeParam.outputs)
}
#endif
inline void NodeParam::add_outputs(const char* value) {
  outputs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NodeParam.outputs)
}
inline void NodeParam::add_outputs(const char* value, size_t size) {
  outputs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NodeParam.outputs)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeParam::outputs() const {
  // @@protoc_insertion_point(field_list:NodeParam.outputs)
  return outputs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NodeParam::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:NodeParam.outputs)
  return &outputs_;
}

// .TensorParam tensor_param = 10;
inline bool NodeParam::has_tensor_param() const {
  return this != internal_default_instance() && tensor_param_ != NULL;
}
inline void NodeParam::clear_tensor_param() {
  if (GetArenaNoVirtual() == NULL && tensor_param_ != NULL) delete tensor_param_;
  tensor_param_ = NULL;
}
inline const ::TensorParam& NodeParam::tensor_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.tensor_param)
  return tensor_param_ != NULL ? *tensor_param_
                         : *::TensorParam::internal_default_instance();
}
inline ::TensorParam* NodeParam::mutable_tensor_param() {
  
  if (tensor_param_ == NULL) {
    tensor_param_ = new ::TensorParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.tensor_param)
  return tensor_param_;
}
inline ::TensorParam* NodeParam::release_tensor_param() {
  // @@protoc_insertion_point(field_release:NodeParam.tensor_param)
  
  ::TensorParam* temp = tensor_param_;
  tensor_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_tensor_param(::TensorParam* tensor_param) {
  delete tensor_param_;
  tensor_param_ = tensor_param;
  if (tensor_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.tensor_param)
}

// .MnistReaderParam mnist_reader_param = 20;
inline bool NodeParam::has_mnist_reader_param() const {
  return this != internal_default_instance() && mnist_reader_param_ != NULL;
}
inline void NodeParam::clear_mnist_reader_param() {
  if (GetArenaNoVirtual() == NULL && mnist_reader_param_ != NULL) delete mnist_reader_param_;
  mnist_reader_param_ = NULL;
}
inline const ::MnistReaderParam& NodeParam::mnist_reader_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.mnist_reader_param)
  return mnist_reader_param_ != NULL ? *mnist_reader_param_
                         : *::MnistReaderParam::internal_default_instance();
}
inline ::MnistReaderParam* NodeParam::mutable_mnist_reader_param() {
  
  if (mnist_reader_param_ == NULL) {
    mnist_reader_param_ = new ::MnistReaderParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.mnist_reader_param)
  return mnist_reader_param_;
}
inline ::MnistReaderParam* NodeParam::release_mnist_reader_param() {
  // @@protoc_insertion_point(field_release:NodeParam.mnist_reader_param)
  
  ::MnistReaderParam* temp = mnist_reader_param_;
  mnist_reader_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_mnist_reader_param(::MnistReaderParam* mnist_reader_param) {
  delete mnist_reader_param_;
  mnist_reader_param_ = mnist_reader_param;
  if (mnist_reader_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.mnist_reader_param)
}

// .VariableParam variable_param = 30;
inline bool NodeParam::has_variable_param() const {
  return this != internal_default_instance() && variable_param_ != NULL;
}
inline void NodeParam::clear_variable_param() {
  if (GetArenaNoVirtual() == NULL && variable_param_ != NULL) delete variable_param_;
  variable_param_ = NULL;
}
inline const ::VariableParam& NodeParam::variable_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.variable_param)
  return variable_param_ != NULL ? *variable_param_
                         : *::VariableParam::internal_default_instance();
}
inline ::VariableParam* NodeParam::mutable_variable_param() {
  
  if (variable_param_ == NULL) {
    variable_param_ = new ::VariableParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.variable_param)
  return variable_param_;
}
inline ::VariableParam* NodeParam::release_variable_param() {
  // @@protoc_insertion_point(field_release:NodeParam.variable_param)
  
  ::VariableParam* temp = variable_param_;
  variable_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_variable_param(::VariableParam* variable_param) {
  delete variable_param_;
  variable_param_ = variable_param;
  if (variable_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.variable_param)
}

// .PlaceHolderParam place_holder_param = 31;
inline bool NodeParam::has_place_holder_param() const {
  return this != internal_default_instance() && place_holder_param_ != NULL;
}
inline void NodeParam::clear_place_holder_param() {
  if (GetArenaNoVirtual() == NULL && place_holder_param_ != NULL) delete place_holder_param_;
  place_holder_param_ = NULL;
}
inline const ::PlaceHolderParam& NodeParam::place_holder_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.place_holder_param)
  return place_holder_param_ != NULL ? *place_holder_param_
                         : *::PlaceHolderParam::internal_default_instance();
}
inline ::PlaceHolderParam* NodeParam::mutable_place_holder_param() {
  
  if (place_holder_param_ == NULL) {
    place_holder_param_ = new ::PlaceHolderParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.place_holder_param)
  return place_holder_param_;
}
inline ::PlaceHolderParam* NodeParam::release_place_holder_param() {
  // @@protoc_insertion_point(field_release:NodeParam.place_holder_param)
  
  ::PlaceHolderParam* temp = place_holder_param_;
  place_holder_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_place_holder_param(::PlaceHolderParam* place_holder_param) {
  delete place_holder_param_;
  place_holder_param_ = place_holder_param;
  if (place_holder_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.place_holder_param)
}

// .BlockParam block_param = 40;
inline bool NodeParam::has_block_param() const {
  return this != internal_default_instance() && block_param_ != NULL;
}
inline void NodeParam::clear_block_param() {
  if (GetArenaNoVirtual() == NULL && block_param_ != NULL) delete block_param_;
  block_param_ = NULL;
}
inline const ::BlockParam& NodeParam::block_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.block_param)
  return block_param_ != NULL ? *block_param_
                         : *::BlockParam::internal_default_instance();
}
inline ::BlockParam* NodeParam::mutable_block_param() {
  
  if (block_param_ == NULL) {
    block_param_ = new ::BlockParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.block_param)
  return block_param_;
}
inline ::BlockParam* NodeParam::release_block_param() {
  // @@protoc_insertion_point(field_release:NodeParam.block_param)
  
  ::BlockParam* temp = block_param_;
  block_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_block_param(::BlockParam* block_param) {
  delete block_param_;
  block_param_ = block_param;
  if (block_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.block_param)
}

// .LossParam loss_param = 50;
inline bool NodeParam::has_loss_param() const {
  return this != internal_default_instance() && loss_param_ != NULL;
}
inline void NodeParam::clear_loss_param() {
  if (GetArenaNoVirtual() == NULL && loss_param_ != NULL) delete loss_param_;
  loss_param_ = NULL;
}
inline const ::LossParam& NodeParam::loss_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.loss_param)
  return loss_param_ != NULL ? *loss_param_
                         : *::LossParam::internal_default_instance();
}
inline ::LossParam* NodeParam::mutable_loss_param() {
  
  if (loss_param_ == NULL) {
    loss_param_ = new ::LossParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.loss_param)
  return loss_param_;
}
inline ::LossParam* NodeParam::release_loss_param() {
  // @@protoc_insertion_point(field_release:NodeParam.loss_param)
  
  ::LossParam* temp = loss_param_;
  loss_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_loss_param(::LossParam* loss_param) {
  delete loss_param_;
  loss_param_ = loss_param;
  if (loss_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.loss_param)
}

// .OpAddParam op_add_param = 60;
inline bool NodeParam::has_op_add_param() const {
  return this != internal_default_instance() && op_add_param_ != NULL;
}
inline void NodeParam::clear_op_add_param() {
  if (GetArenaNoVirtual() == NULL && op_add_param_ != NULL) delete op_add_param_;
  op_add_param_ = NULL;
}
inline const ::OpAddParam& NodeParam::op_add_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_add_param)
  return op_add_param_ != NULL ? *op_add_param_
                         : *::OpAddParam::internal_default_instance();
}
inline ::OpAddParam* NodeParam::mutable_op_add_param() {
  
  if (op_add_param_ == NULL) {
    op_add_param_ = new ::OpAddParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_add_param)
  return op_add_param_;
}
inline ::OpAddParam* NodeParam::release_op_add_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_add_param)
  
  ::OpAddParam* temp = op_add_param_;
  op_add_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_add_param(::OpAddParam* op_add_param) {
  delete op_add_param_;
  op_add_param_ = op_add_param;
  if (op_add_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_add_param)
}

// .OpBiasAddParam op_bias_add_param = 61;
inline bool NodeParam::has_op_bias_add_param() const {
  return this != internal_default_instance() && op_bias_add_param_ != NULL;
}
inline void NodeParam::clear_op_bias_add_param() {
  if (GetArenaNoVirtual() == NULL && op_bias_add_param_ != NULL) delete op_bias_add_param_;
  op_bias_add_param_ = NULL;
}
inline const ::OpBiasAddParam& NodeParam::op_bias_add_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_bias_add_param)
  return op_bias_add_param_ != NULL ? *op_bias_add_param_
                         : *::OpBiasAddParam::internal_default_instance();
}
inline ::OpBiasAddParam* NodeParam::mutable_op_bias_add_param() {
  
  if (op_bias_add_param_ == NULL) {
    op_bias_add_param_ = new ::OpBiasAddParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_bias_add_param)
  return op_bias_add_param_;
}
inline ::OpBiasAddParam* NodeParam::release_op_bias_add_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_bias_add_param)
  
  ::OpBiasAddParam* temp = op_bias_add_param_;
  op_bias_add_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_bias_add_param(::OpBiasAddParam* op_bias_add_param) {
  delete op_bias_add_param_;
  op_bias_add_param_ = op_bias_add_param;
  if (op_bias_add_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_bias_add_param)
}

// .OpConv2dParam op_conv_2d_param = 62;
inline bool NodeParam::has_op_conv_2d_param() const {
  return this != internal_default_instance() && op_conv_2d_param_ != NULL;
}
inline void NodeParam::clear_op_conv_2d_param() {
  if (GetArenaNoVirtual() == NULL && op_conv_2d_param_ != NULL) delete op_conv_2d_param_;
  op_conv_2d_param_ = NULL;
}
inline const ::OpConv2dParam& NodeParam::op_conv_2d_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_conv_2d_param)
  return op_conv_2d_param_ != NULL ? *op_conv_2d_param_
                         : *::OpConv2dParam::internal_default_instance();
}
inline ::OpConv2dParam* NodeParam::mutable_op_conv_2d_param() {
  
  if (op_conv_2d_param_ == NULL) {
    op_conv_2d_param_ = new ::OpConv2dParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_conv_2d_param)
  return op_conv_2d_param_;
}
inline ::OpConv2dParam* NodeParam::release_op_conv_2d_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_conv_2d_param)
  
  ::OpConv2dParam* temp = op_conv_2d_param_;
  op_conv_2d_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_conv_2d_param(::OpConv2dParam* op_conv_2d_param) {
  delete op_conv_2d_param_;
  op_conv_2d_param_ = op_conv_2d_param;
  if (op_conv_2d_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_conv_2d_param)
}

// .OpDropoutParam op_dropout_param = 63;
inline bool NodeParam::has_op_dropout_param() const {
  return this != internal_default_instance() && op_dropout_param_ != NULL;
}
inline void NodeParam::clear_op_dropout_param() {
  if (GetArenaNoVirtual() == NULL && op_dropout_param_ != NULL) delete op_dropout_param_;
  op_dropout_param_ = NULL;
}
inline const ::OpDropoutParam& NodeParam::op_dropout_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_dropout_param)
  return op_dropout_param_ != NULL ? *op_dropout_param_
                         : *::OpDropoutParam::internal_default_instance();
}
inline ::OpDropoutParam* NodeParam::mutable_op_dropout_param() {
  
  if (op_dropout_param_ == NULL) {
    op_dropout_param_ = new ::OpDropoutParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_dropout_param)
  return op_dropout_param_;
}
inline ::OpDropoutParam* NodeParam::release_op_dropout_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_dropout_param)
  
  ::OpDropoutParam* temp = op_dropout_param_;
  op_dropout_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_dropout_param(::OpDropoutParam* op_dropout_param) {
  delete op_dropout_param_;
  op_dropout_param_ = op_dropout_param;
  if (op_dropout_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_dropout_param)
}

// .OpReluParam op_relu_param = 64;
inline bool NodeParam::has_op_relu_param() const {
  return this != internal_default_instance() && op_relu_param_ != NULL;
}
inline void NodeParam::clear_op_relu_param() {
  if (GetArenaNoVirtual() == NULL && op_relu_param_ != NULL) delete op_relu_param_;
  op_relu_param_ = NULL;
}
inline const ::OpReluParam& NodeParam::op_relu_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_relu_param)
  return op_relu_param_ != NULL ? *op_relu_param_
                         : *::OpReluParam::internal_default_instance();
}
inline ::OpReluParam* NodeParam::mutable_op_relu_param() {
  
  if (op_relu_param_ == NULL) {
    op_relu_param_ = new ::OpReluParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_relu_param)
  return op_relu_param_;
}
inline ::OpReluParam* NodeParam::release_op_relu_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_relu_param)
  
  ::OpReluParam* temp = op_relu_param_;
  op_relu_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_relu_param(::OpReluParam* op_relu_param) {
  delete op_relu_param_;
  op_relu_param_ = op_relu_param;
  if (op_relu_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_relu_param)
}

// .OpSoftmaxParam op_softmax_param = 65;
inline bool NodeParam::has_op_softmax_param() const {
  return this != internal_default_instance() && op_softmax_param_ != NULL;
}
inline void NodeParam::clear_op_softmax_param() {
  if (GetArenaNoVirtual() == NULL && op_softmax_param_ != NULL) delete op_softmax_param_;
  op_softmax_param_ = NULL;
}
inline const ::OpSoftmaxParam& NodeParam::op_softmax_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_softmax_param)
  return op_softmax_param_ != NULL ? *op_softmax_param_
                         : *::OpSoftmaxParam::internal_default_instance();
}
inline ::OpSoftmaxParam* NodeParam::mutable_op_softmax_param() {
  
  if (op_softmax_param_ == NULL) {
    op_softmax_param_ = new ::OpSoftmaxParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_softmax_param)
  return op_softmax_param_;
}
inline ::OpSoftmaxParam* NodeParam::release_op_softmax_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_softmax_param)
  
  ::OpSoftmaxParam* temp = op_softmax_param_;
  op_softmax_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_softmax_param(::OpSoftmaxParam* op_softmax_param) {
  delete op_softmax_param_;
  op_softmax_param_ = op_softmax_param;
  if (op_softmax_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_softmax_param)
}

// .OpSquareParam op_square_param = 66;
inline bool NodeParam::has_op_square_param() const {
  return this != internal_default_instance() && op_square_param_ != NULL;
}
inline void NodeParam::clear_op_square_param() {
  if (GetArenaNoVirtual() == NULL && op_square_param_ != NULL) delete op_square_param_;
  op_square_param_ = NULL;
}
inline const ::OpSquareParam& NodeParam::op_square_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_square_param)
  return op_square_param_ != NULL ? *op_square_param_
                         : *::OpSquareParam::internal_default_instance();
}
inline ::OpSquareParam* NodeParam::mutable_op_square_param() {
  
  if (op_square_param_ == NULL) {
    op_square_param_ = new ::OpSquareParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_square_param)
  return op_square_param_;
}
inline ::OpSquareParam* NodeParam::release_op_square_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_square_param)
  
  ::OpSquareParam* temp = op_square_param_;
  op_square_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_square_param(::OpSquareParam* op_square_param) {
  delete op_square_param_;
  op_square_param_ = op_square_param;
  if (op_square_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_square_param)
}

// .OpMatMulParam op_matmul_param = 67;
inline bool NodeParam::has_op_matmul_param() const {
  return this != internal_default_instance() && op_matmul_param_ != NULL;
}
inline void NodeParam::clear_op_matmul_param() {
  if (GetArenaNoVirtual() == NULL && op_matmul_param_ != NULL) delete op_matmul_param_;
  op_matmul_param_ = NULL;
}
inline const ::OpMatMulParam& NodeParam::op_matmul_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_matmul_param)
  return op_matmul_param_ != NULL ? *op_matmul_param_
                         : *::OpMatMulParam::internal_default_instance();
}
inline ::OpMatMulParam* NodeParam::mutable_op_matmul_param() {
  
  if (op_matmul_param_ == NULL) {
    op_matmul_param_ = new ::OpMatMulParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_matmul_param)
  return op_matmul_param_;
}
inline ::OpMatMulParam* NodeParam::release_op_matmul_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_matmul_param)
  
  ::OpMatMulParam* temp = op_matmul_param_;
  op_matmul_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_matmul_param(::OpMatMulParam* op_matmul_param) {
  delete op_matmul_param_;
  op_matmul_param_ = op_matmul_param;
  if (op_matmul_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_matmul_param)
}

// .OpPoolingParam op_pooling_param = 68;
inline bool NodeParam::has_op_pooling_param() const {
  return this != internal_default_instance() && op_pooling_param_ != NULL;
}
inline void NodeParam::clear_op_pooling_param() {
  if (GetArenaNoVirtual() == NULL && op_pooling_param_ != NULL) delete op_pooling_param_;
  op_pooling_param_ = NULL;
}
inline const ::OpPoolingParam& NodeParam::op_pooling_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_pooling_param)
  return op_pooling_param_ != NULL ? *op_pooling_param_
                         : *::OpPoolingParam::internal_default_instance();
}
inline ::OpPoolingParam* NodeParam::mutable_op_pooling_param() {
  
  if (op_pooling_param_ == NULL) {
    op_pooling_param_ = new ::OpPoolingParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_pooling_param)
  return op_pooling_param_;
}
inline ::OpPoolingParam* NodeParam::release_op_pooling_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_pooling_param)
  
  ::OpPoolingParam* temp = op_pooling_param_;
  op_pooling_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_pooling_param(::OpPoolingParam* op_pooling_param) {
  delete op_pooling_param_;
  op_pooling_param_ = op_pooling_param;
  if (op_pooling_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_pooling_param)
}

// .OpArgmaxParam op_argmax_param = 69;
inline bool NodeParam::has_op_argmax_param() const {
  return this != internal_default_instance() && op_argmax_param_ != NULL;
}
inline void NodeParam::clear_op_argmax_param() {
  if (GetArenaNoVirtual() == NULL && op_argmax_param_ != NULL) delete op_argmax_param_;
  op_argmax_param_ = NULL;
}
inline const ::OpArgmaxParam& NodeParam::op_argmax_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_argmax_param)
  return op_argmax_param_ != NULL ? *op_argmax_param_
                         : *::OpArgmaxParam::internal_default_instance();
}
inline ::OpArgmaxParam* NodeParam::mutable_op_argmax_param() {
  
  if (op_argmax_param_ == NULL) {
    op_argmax_param_ = new ::OpArgmaxParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_argmax_param)
  return op_argmax_param_;
}
inline ::OpArgmaxParam* NodeParam::release_op_argmax_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_argmax_param)
  
  ::OpArgmaxParam* temp = op_argmax_param_;
  op_argmax_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_argmax_param(::OpArgmaxParam* op_argmax_param) {
  delete op_argmax_param_;
  op_argmax_param_ = op_argmax_param;
  if (op_argmax_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_argmax_param)
}

// .OpReduceParam op_reduce_param = 70;
inline bool NodeParam::has_op_reduce_param() const {
  return this != internal_default_instance() && op_reduce_param_ != NULL;
}
inline void NodeParam::clear_op_reduce_param() {
  if (GetArenaNoVirtual() == NULL && op_reduce_param_ != NULL) delete op_reduce_param_;
  op_reduce_param_ = NULL;
}
inline const ::OpReduceParam& NodeParam::op_reduce_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_reduce_param)
  return op_reduce_param_ != NULL ? *op_reduce_param_
                         : *::OpReduceParam::internal_default_instance();
}
inline ::OpReduceParam* NodeParam::mutable_op_reduce_param() {
  
  if (op_reduce_param_ == NULL) {
    op_reduce_param_ = new ::OpReduceParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_reduce_param)
  return op_reduce_param_;
}
inline ::OpReduceParam* NodeParam::release_op_reduce_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_reduce_param)
  
  ::OpReduceParam* temp = op_reduce_param_;
  op_reduce_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_reduce_param(::OpReduceParam* op_reduce_param) {
  delete op_reduce_param_;
  op_reduce_param_ = op_reduce_param;
  if (op_reduce_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_reduce_param)
}

// .OpEqualParam op_equal_param = 71;
inline bool NodeParam::has_op_equal_param() const {
  return this != internal_default_instance() && op_equal_param_ != NULL;
}
inline void NodeParam::clear_op_equal_param() {
  if (GetArenaNoVirtual() == NULL && op_equal_param_ != NULL) delete op_equal_param_;
  op_equal_param_ = NULL;
}
inline const ::OpEqualParam& NodeParam::op_equal_param() const {
  // @@protoc_insertion_point(field_get:NodeParam.op_equal_param)
  return op_equal_param_ != NULL ? *op_equal_param_
                         : *::OpEqualParam::internal_default_instance();
}
inline ::OpEqualParam* NodeParam::mutable_op_equal_param() {
  
  if (op_equal_param_ == NULL) {
    op_equal_param_ = new ::OpEqualParam;
  }
  // @@protoc_insertion_point(field_mutable:NodeParam.op_equal_param)
  return op_equal_param_;
}
inline ::OpEqualParam* NodeParam::release_op_equal_param() {
  // @@protoc_insertion_point(field_release:NodeParam.op_equal_param)
  
  ::OpEqualParam* temp = op_equal_param_;
  op_equal_param_ = NULL;
  return temp;
}
inline void NodeParam::set_allocated_op_equal_param(::OpEqualParam* op_equal_param) {
  delete op_equal_param_;
  op_equal_param_ = op_equal_param;
  if (op_equal_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:NodeParam.op_equal_param)
}

// -------------------------------------------------------------------

// OpArgmaxParam

// -------------------------------------------------------------------

// OpSquareParam

// -------------------------------------------------------------------

// SoftmaxLossParam

// float alpha = 1;
inline void SoftmaxLossParam::clear_alpha() {
  alpha_ = 0;
}
inline float SoftmaxLossParam::alpha() const {
  // @@protoc_insertion_point(field_get:SoftmaxLossParam.alpha)
  return alpha_;
}
inline void SoftmaxLossParam::set_alpha(float value) {
  
  alpha_ = value;
  // @@protoc_insertion_point(field_set:SoftmaxLossParam.alpha)
}

// float beta = 2;
inline void SoftmaxLossParam::clear_beta() {
  beta_ = 0;
}
inline float SoftmaxLossParam::beta() const {
  // @@protoc_insertion_point(field_get:SoftmaxLossParam.beta)
  return beta_;
}
inline void SoftmaxLossParam::set_beta(float value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:SoftmaxLossParam.beta)
}

// -------------------------------------------------------------------

// OpSoftmaxParam

// float alpha = 1;
inline void OpSoftmaxParam::clear_alpha() {
  alpha_ = 0;
}
inline float OpSoftmaxParam::alpha() const {
  // @@protoc_insertion_point(field_get:OpSoftmaxParam.alpha)
  return alpha_;
}
inline void OpSoftmaxParam::set_alpha(float value) {
  
  alpha_ = value;
  // @@protoc_insertion_point(field_set:OpSoftmaxParam.alpha)
}

// float beta = 2;
inline void OpSoftmaxParam::clear_beta() {
  beta_ = 0;
}
inline float OpSoftmaxParam::beta() const {
  // @@protoc_insertion_point(field_get:OpSoftmaxParam.beta)
  return beta_;
}
inline void OpSoftmaxParam::set_beta(float value) {
  
  beta_ = value;
  // @@protoc_insertion_point(field_set:OpSoftmaxParam.beta)
}

// -------------------------------------------------------------------

// InitFillParam

// float value = 1;
inline void InitFillParam::clear_value() {
  value_ = 0;
}
inline float InitFillParam::value() const {
  // @@protoc_insertion_point(field_get:InitFillParam.value)
  return value_;
}
inline void InitFillParam::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:InitFillParam.value)
}

// -------------------------------------------------------------------

// InitIndexFillParam

// float offset = 1;
inline void InitIndexFillParam::clear_offset() {
  offset_ = 0;
}
inline float InitIndexFillParam::offset() const {
  // @@protoc_insertion_point(field_get:InitIndexFillParam.offset)
  return offset_;
}
inline void InitIndexFillParam::set_offset(float value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:InitIndexFillParam.offset)
}

// -------------------------------------------------------------------

// InitRandomUniformParam

// float min = 1;
inline void InitRandomUniformParam::clear_min() {
  min_ = 0;
}
inline float InitRandomUniformParam::min() const {
  // @@protoc_insertion_point(field_get:InitRandomUniformParam.min)
  return min_;
}
inline void InitRandomUniformParam::set_min(float value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:InitRandomUniformParam.min)
}

// float max = 2;
inline void InitRandomUniformParam::clear_max() {
  max_ = 0;
}
inline float InitRandomUniformParam::max() const {
  // @@protoc_insertion_point(field_get:InitRandomUniformParam.max)
  return max_;
}
inline void InitRandomUniformParam::set_max(float value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:InitRandomUniformParam.max)
}

// -------------------------------------------------------------------

// InitStepParam

// float min = 1;
inline void InitStepParam::clear_min() {
  min_ = 0;
}
inline float InitStepParam::min() const {
  // @@protoc_insertion_point(field_get:InitStepParam.min)
  return min_;
}
inline void InitStepParam::set_min(float value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:InitStepParam.min)
}

// float max = 2;
inline void InitStepParam::clear_max() {
  max_ = 0;
}
inline float InitStepParam::max() const {
  // @@protoc_insertion_point(field_get:InitStepParam.max)
  return max_;
}
inline void InitStepParam::set_max(float value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:InitStepParam.max)
}

// -------------------------------------------------------------------

// InitParam

// .TensorParam tensor_param = 1;
inline bool InitParam::has_tensor_param() const {
  return this != internal_default_instance() && tensor_param_ != NULL;
}
inline void InitParam::clear_tensor_param() {
  if (GetArenaNoVirtual() == NULL && tensor_param_ != NULL) delete tensor_param_;
  tensor_param_ = NULL;
}
inline const ::TensorParam& InitParam::tensor_param() const {
  // @@protoc_insertion_point(field_get:InitParam.tensor_param)
  return tensor_param_ != NULL ? *tensor_param_
                         : *::TensorParam::internal_default_instance();
}
inline ::TensorParam* InitParam::mutable_tensor_param() {
  
  if (tensor_param_ == NULL) {
    tensor_param_ = new ::TensorParam;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.tensor_param)
  return tensor_param_;
}
inline ::TensorParam* InitParam::release_tensor_param() {
  // @@protoc_insertion_point(field_release:InitParam.tensor_param)
  
  ::TensorParam* temp = tensor_param_;
  tensor_param_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_tensor_param(::TensorParam* tensor_param) {
  delete tensor_param_;
  tensor_param_ = tensor_param;
  if (tensor_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.tensor_param)
}

// .InitFillParam fill_param = 2;
inline bool InitParam::has_fill_param() const {
  return this != internal_default_instance() && fill_param_ != NULL;
}
inline void InitParam::clear_fill_param() {
  if (GetArenaNoVirtual() == NULL && fill_param_ != NULL) delete fill_param_;
  fill_param_ = NULL;
}
inline const ::InitFillParam& InitParam::fill_param() const {
  // @@protoc_insertion_point(field_get:InitParam.fill_param)
  return fill_param_ != NULL ? *fill_param_
                         : *::InitFillParam::internal_default_instance();
}
inline ::InitFillParam* InitParam::mutable_fill_param() {
  
  if (fill_param_ == NULL) {
    fill_param_ = new ::InitFillParam;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.fill_param)
  return fill_param_;
}
inline ::InitFillParam* InitParam::release_fill_param() {
  // @@protoc_insertion_point(field_release:InitParam.fill_param)
  
  ::InitFillParam* temp = fill_param_;
  fill_param_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_fill_param(::InitFillParam* fill_param) {
  delete fill_param_;
  fill_param_ = fill_param;
  if (fill_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.fill_param)
}

// .InitIndexFillParam index_fill_param = 3;
inline bool InitParam::has_index_fill_param() const {
  return this != internal_default_instance() && index_fill_param_ != NULL;
}
inline void InitParam::clear_index_fill_param() {
  if (GetArenaNoVirtual() == NULL && index_fill_param_ != NULL) delete index_fill_param_;
  index_fill_param_ = NULL;
}
inline const ::InitIndexFillParam& InitParam::index_fill_param() const {
  // @@protoc_insertion_point(field_get:InitParam.index_fill_param)
  return index_fill_param_ != NULL ? *index_fill_param_
                         : *::InitIndexFillParam::internal_default_instance();
}
inline ::InitIndexFillParam* InitParam::mutable_index_fill_param() {
  
  if (index_fill_param_ == NULL) {
    index_fill_param_ = new ::InitIndexFillParam;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.index_fill_param)
  return index_fill_param_;
}
inline ::InitIndexFillParam* InitParam::release_index_fill_param() {
  // @@protoc_insertion_point(field_release:InitParam.index_fill_param)
  
  ::InitIndexFillParam* temp = index_fill_param_;
  index_fill_param_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_index_fill_param(::InitIndexFillParam* index_fill_param) {
  delete index_fill_param_;
  index_fill_param_ = index_fill_param;
  if (index_fill_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.index_fill_param)
}

// .InitRandomUniformParam random_uniform_param = 4;
inline bool InitParam::has_random_uniform_param() const {
  return this != internal_default_instance() && random_uniform_param_ != NULL;
}
inline void InitParam::clear_random_uniform_param() {
  if (GetArenaNoVirtual() == NULL && random_uniform_param_ != NULL) delete random_uniform_param_;
  random_uniform_param_ = NULL;
}
inline const ::InitRandomUniformParam& InitParam::random_uniform_param() const {
  // @@protoc_insertion_point(field_get:InitParam.random_uniform_param)
  return random_uniform_param_ != NULL ? *random_uniform_param_
                         : *::InitRandomUniformParam::internal_default_instance();
}
inline ::InitRandomUniformParam* InitParam::mutable_random_uniform_param() {
  
  if (random_uniform_param_ == NULL) {
    random_uniform_param_ = new ::InitRandomUniformParam;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.random_uniform_param)
  return random_uniform_param_;
}
inline ::InitRandomUniformParam* InitParam::release_random_uniform_param() {
  // @@protoc_insertion_point(field_release:InitParam.random_uniform_param)
  
  ::InitRandomUniformParam* temp = random_uniform_param_;
  random_uniform_param_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_random_uniform_param(::InitRandomUniformParam* random_uniform_param) {
  delete random_uniform_param_;
  random_uniform_param_ = random_uniform_param;
  if (random_uniform_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.random_uniform_param)
}

// .InitStepParam step_param = 5;
inline bool InitParam::has_step_param() const {
  return this != internal_default_instance() && step_param_ != NULL;
}
inline void InitParam::clear_step_param() {
  if (GetArenaNoVirtual() == NULL && step_param_ != NULL) delete step_param_;
  step_param_ = NULL;
}
inline const ::InitStepParam& InitParam::step_param() const {
  // @@protoc_insertion_point(field_get:InitParam.step_param)
  return step_param_ != NULL ? *step_param_
                         : *::InitStepParam::internal_default_instance();
}
inline ::InitStepParam* InitParam::mutable_step_param() {
  
  if (step_param_ == NULL) {
    step_param_ = new ::InitStepParam;
  }
  // @@protoc_insertion_point(field_mutable:InitParam.step_param)
  return step_param_;
}
inline ::InitStepParam* InitParam::release_step_param() {
  // @@protoc_insertion_point(field_release:InitParam.step_param)
  
  ::InitStepParam* temp = step_param_;
  step_param_ = NULL;
  return temp;
}
inline void InitParam::set_allocated_step_param(::InitStepParam* step_param) {
  delete step_param_;
  step_param_ = step_param;
  if (step_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:InitParam.step_param)
}

// -------------------------------------------------------------------

// SGDSolverParam

// float momentum = 1;
inline void SGDSolverParam::clear_momentum() {
  momentum_ = 0;
}
inline float SGDSolverParam::momentum() const {
  // @@protoc_insertion_point(field_get:SGDSolverParam.momentum)
  return momentum_;
}
inline void SGDSolverParam::set_momentum(float value) {
  
  momentum_ = value;
  // @@protoc_insertion_point(field_set:SGDSolverParam.momentum)
}

// float learning_rate = 2;
inline void SGDSolverParam::clear_learning_rate() {
  learning_rate_ = 0;
}
inline float SGDSolverParam::learning_rate() const {
  // @@protoc_insertion_point(field_get:SGDSolverParam.learning_rate)
  return learning_rate_;
}
inline void SGDSolverParam::set_learning_rate(float value) {
  
  learning_rate_ = value;
  // @@protoc_insertion_point(field_set:SGDSolverParam.learning_rate)
}

// -------------------------------------------------------------------

// GainSolverParam

// float momentum = 1;
inline void GainSolverParam::clear_momentum() {
  momentum_ = 0;
}
inline float GainSolverParam::momentum() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.momentum)
  return momentum_;
}
inline void GainSolverParam::set_momentum(float value) {
  
  momentum_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.momentum)
}

// float learning_rate = 2;
inline void GainSolverParam::clear_learning_rate() {
  learning_rate_ = 0;
}
inline float GainSolverParam::learning_rate() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.learning_rate)
  return learning_rate_;
}
inline void GainSolverParam::set_learning_rate(float value) {
  
  learning_rate_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.learning_rate)
}

// float max_gain = 3;
inline void GainSolverParam::clear_max_gain() {
  max_gain_ = 0;
}
inline float GainSolverParam::max_gain() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.max_gain)
  return max_gain_;
}
inline void GainSolverParam::set_max_gain(float value) {
  
  max_gain_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.max_gain)
}

// float min_gain = 4;
inline void GainSolverParam::clear_min_gain() {
  min_gain_ = 0;
}
inline float GainSolverParam::min_gain() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.min_gain)
  return min_gain_;
}
inline void GainSolverParam::set_min_gain(float value) {
  
  min_gain_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.min_gain)
}

// float gain_plus = 5;
inline void GainSolverParam::clear_gain_plus() {
  gain_plus_ = 0;
}
inline float GainSolverParam::gain_plus() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.gain_plus)
  return gain_plus_;
}
inline void GainSolverParam::set_gain_plus(float value) {
  
  gain_plus_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.gain_plus)
}

// float gain_mult = 6;
inline void GainSolverParam::clear_gain_mult() {
  gain_mult_ = 0;
}
inline float GainSolverParam::gain_mult() const {
  // @@protoc_insertion_point(field_get:GainSolverParam.gain_mult)
  return gain_mult_;
}
inline void GainSolverParam::set_gain_mult(float value) {
  
  gain_mult_ = value;
  // @@protoc_insertion_point(field_set:GainSolverParam.gain_mult)
}

// -------------------------------------------------------------------

// SolverParam

// int32 max_iteration = 1;
inline void SolverParam::clear_max_iteration() {
  max_iteration_ = 0;
}
inline ::google::protobuf::int32 SolverParam::max_iteration() const {
  // @@protoc_insertion_point(field_get:SolverParam.max_iteration)
  return max_iteration_;
}
inline void SolverParam::set_max_iteration(::google::protobuf::int32 value) {
  
  max_iteration_ = value;
  // @@protoc_insertion_point(field_set:SolverParam.max_iteration)
}

// .SGDSolverParam sgd_solver = 2;
inline bool SolverParam::has_sgd_solver() const {
  return this != internal_default_instance() && sgd_solver_ != NULL;
}
inline void SolverParam::clear_sgd_solver() {
  if (GetArenaNoVirtual() == NULL && sgd_solver_ != NULL) delete sgd_solver_;
  sgd_solver_ = NULL;
}
inline const ::SGDSolverParam& SolverParam::sgd_solver() const {
  // @@protoc_insertion_point(field_get:SolverParam.sgd_solver)
  return sgd_solver_ != NULL ? *sgd_solver_
                         : *::SGDSolverParam::internal_default_instance();
}
inline ::SGDSolverParam* SolverParam::mutable_sgd_solver() {
  
  if (sgd_solver_ == NULL) {
    sgd_solver_ = new ::SGDSolverParam;
  }
  // @@protoc_insertion_point(field_mutable:SolverParam.sgd_solver)
  return sgd_solver_;
}
inline ::SGDSolverParam* SolverParam::release_sgd_solver() {
  // @@protoc_insertion_point(field_release:SolverParam.sgd_solver)
  
  ::SGDSolverParam* temp = sgd_solver_;
  sgd_solver_ = NULL;
  return temp;
}
inline void SolverParam::set_allocated_sgd_solver(::SGDSolverParam* sgd_solver) {
  delete sgd_solver_;
  sgd_solver_ = sgd_solver;
  if (sgd_solver) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SolverParam.sgd_solver)
}

// .GainSolverParam gain_solver = 3;
inline bool SolverParam::has_gain_solver() const {
  return this != internal_default_instance() && gain_solver_ != NULL;
}
inline void SolverParam::clear_gain_solver() {
  if (GetArenaNoVirtual() == NULL && gain_solver_ != NULL) delete gain_solver_;
  gain_solver_ = NULL;
}
inline const ::GainSolverParam& SolverParam::gain_solver() const {
  // @@protoc_insertion_point(field_get:SolverParam.gain_solver)
  return gain_solver_ != NULL ? *gain_solver_
                         : *::GainSolverParam::internal_default_instance();
}
inline ::GainSolverParam* SolverParam::mutable_gain_solver() {
  
  if (gain_solver_ == NULL) {
    gain_solver_ = new ::GainSolverParam;
  }
  // @@protoc_insertion_point(field_mutable:SolverParam.gain_solver)
  return gain_solver_;
}
inline ::GainSolverParam* SolverParam::release_gain_solver() {
  // @@protoc_insertion_point(field_release:SolverParam.gain_solver)
  
  ::GainSolverParam* temp = gain_solver_;
  gain_solver_ = NULL;
  return temp;
}
inline void SolverParam::set_allocated_gain_solver(::GainSolverParam* gain_solver) {
  delete gain_solver_;
  gain_solver_ = gain_solver;
  if (gain_solver) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SolverParam.gain_solver)
}

// -------------------------------------------------------------------

// NetworkParam

// repeated .NodeParam node_param = 1;
inline int NetworkParam::node_param_size() const {
  return node_param_.size();
}
inline void NetworkParam::clear_node_param() {
  node_param_.Clear();
}
inline const ::NodeParam& NetworkParam::node_param(int index) const {
  // @@protoc_insertion_point(field_get:NetworkParam.node_param)
  return node_param_.Get(index);
}
inline ::NodeParam* NetworkParam::mutable_node_param(int index) {
  // @@protoc_insertion_point(field_mutable:NetworkParam.node_param)
  return node_param_.Mutable(index);
}
inline ::NodeParam* NetworkParam::add_node_param() {
  // @@protoc_insertion_point(field_add:NetworkParam.node_param)
  return node_param_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::NodeParam >*
NetworkParam::mutable_node_param() {
  // @@protoc_insertion_point(field_mutable_list:NetworkParam.node_param)
  return &node_param_;
}
inline const ::google::protobuf::RepeatedPtrField< ::NodeParam >&
NetworkParam::node_param() const {
  // @@protoc_insertion_point(field_list:NetworkParam.node_param)
  return node_param_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TensorParam_TensorType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TensorParam_TensorType>() {
  return ::TensorParam_TensorType_descriptor();
}
template <> struct is_proto_enum< ::OpReduceParam_ReduceOp> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OpReduceParam_ReduceOp>() {
  return ::OpReduceParam_ReduceOp_descriptor();
}
template <> struct is_proto_enum< ::MnistReaderParam_ReaderType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MnistReaderParam_ReaderType>() {
  return ::MnistReaderParam_ReaderType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_deepflow_2eproto__INCLUDED
